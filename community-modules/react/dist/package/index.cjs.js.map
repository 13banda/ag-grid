{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/agGridReact.tsx", "../../src/reactUi/agGridReactUi.tsx", "../../src/shared/customComp/customComponentWrapper.ts", "../../src/reactUi/customComp/customWrapperComp.tsx", "../../src/shared/customComp/customContext.ts", "../../src/shared/reactComponent.ts", "../../src/shared/keyGenerator.ts", "../../src/shared/customComp/dateComponentWrapper.ts", "../../src/shared/customComp/filterComponentWrapper.ts", "../../src/shared/customComp/floatingFilterComponentProxy.ts", "../../src/shared/customComp/floatingFilterComponentWrapper.ts", "../../src/shared/customComp/loadingOverlayComponentWrapper.ts", "../../src/shared/customComp/menuItemComponentWrapper.ts", "../../src/shared/customComp/noRowsOverlayComponentWrapper.ts", "../../src/shared/customComp/statusPanelComponentWrapper.ts", "../../src/shared/customComp/toolPanelComponentWrapper.ts", "../../src/shared/portalManager.ts", "../../src/reactUi/beansContext.tsx", "../../src/reactUi/utils.tsx", "../../src/reactUi/cellRenderer/groupCellRenderer.tsx", "../../src/reactUi/jsComp.tsx", "../../src/reactUi/gridComp.tsx", "../../src/reactUi/gridBodyComp.tsx", "../../src/reactUi/header/gridHeaderComp.tsx", "../../src/reactUi/header/headerRowContainerComp.tsx", "../../src/reactUi/header/headerRowComp.tsx", "../../src/reactUi/header/headerCellComp.tsx", "../../src/reactUi/header/headerGroupCellComp.tsx", "../../src/reactUi/header/headerFilterCellComp.tsx", "../../src/shared/customComp/util.ts", "../../src/reactUi/reactComment.tsx", "../../src/reactUi/rows/rowContainerComp.tsx", "../../src/reactUi/rows/rowComp.tsx", "../../src/reactUi/cells/cellComp.tsx", "../../src/reactUi/cells/popupEditorComp.tsx", "../../src/reactUi/useEffectOnce.tsx", "../../src/reactUi/cells/showJsRenderer.tsx", "../../src/shared/customComp/cellEditorComponentProxy.ts", "../../src/reactUi/tabGuardComp.tsx", "../../src/shared/interfaces.ts", "../../src/shared/customComp/interfaces.ts"],
  "sourcesContent": ["export { AgGridReact } from './agGridReact';\nexport * from './shared/interfaces';\nexport * from './shared/customComp/interfaces'\nexport * from './shared/customComp/util'", "import React, { Component } from 'react';\nimport { AgGridReactUi } from './reactUi/agGridReactUi';\nimport { AgGridReactProps, AgReactUiProps } from './shared/interfaces';\nimport { ColumnApi, GridApi } from '@ag-grid-community/core';\n\n\nexport class AgGridReact<TData = any> extends Component<AgGridReactProps<TData> | AgReactUiProps<TData>, {}> {\n    /** Grid Api available after onGridReady event has fired. */\n    public api!: GridApi<TData>;\n    /**\n     * @deprecated v31 - The `columnApi` has been deprecated and all the methods are now present of the `api`.\n     * Please use the `api` instead.\n     */\n    public columnApi!: ColumnApi;\n    private apiListeners: Array<(params: any) => void> = [];\n\n    public registerApiListener(listener: (api: GridApi) => void) {\n        this.apiListeners.push(listener);\n    }\n\n    private setGridApi = (api: GridApi, columnApi: ColumnApi) => {\n        this.api = api;\n        this.columnApi = columnApi;\n        this.apiListeners.forEach(listener => listener(api));\n    }\n\n    componentWillUnmount() {\n        this.apiListeners.length = 0;\n    }\n\n    render() {\n        return <AgGridReactUi<TData> {...this.props} setGridApi={this.setGridApi} />;\n    }\n}", "import {\n    BaseComponentWrapper, ColumnApi, ComponentType,\n    ComponentUtil,\n    Context, CtrlsService, FrameworkComponentWrapper,\n    FrameworkOverridesIncomingSource,\n    GridApi,\n    GridCoreCreator,\n    GridOptions,\n    GridParams, IDetailCellRenderer, IDetailCellRendererCtrl,\n    IDetailCellRendererParams, ModuleRegistry, VanillaFrameworkOverrides, WrappableInterface, _\n} from '@ag-grid-community/core';\nimport React, {\n    forwardRef,\n    useCallback, useContext, useEffect, useImperativeHandle, useMemo,\n    useRef,\n    useState\n} from 'react';\nimport { DateComponentWrapper } from '../shared/customComp/dateComponentWrapper';\nimport { FilterComponentWrapper } from '../shared/customComp/filterComponentWrapper';\nimport { FloatingFilterComponentWrapper } from '../shared/customComp/floatingFilterComponentWrapper';\nimport { LoadingOverlayComponentWrapper } from '../shared/customComp/loadingOverlayComponentWrapper';\nimport { MenuItemComponentWrapper } from '../shared/customComp/menuItemComponentWrapper';\nimport { NoRowsOverlayComponentWrapper } from '../shared/customComp/noRowsOverlayComponentWrapper';\nimport { StatusPanelComponentWrapper } from '../shared/customComp/statusPanelComponentWrapper';\nimport { ToolPanelComponentWrapper } from '../shared/customComp/toolPanelComponentWrapper';\nimport { AgGridReactProps } from '../shared/interfaces';\nimport { ReactComponent } from '../shared/reactComponent';\nimport { PortalManager } from '../shared/portalManager';\nimport { BeansContext } from \"./beansContext\";\nimport { CssClasses, runWithoutFlushSync } from \"./utils\";\nimport GroupCellRenderer from \"../reactUi/cellRenderer/groupCellRenderer\";\nimport GridComp from './gridComp';\nimport { warnReactiveCustomComponents } from '../shared/customComp/util';\n\n\nexport const AgGridReactUi = <TData,>(props: AgGridReactProps<TData>) => {\n    const apiRef = useRef<GridApi<TData>>();\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const portalManager = useRef<PortalManager | null>(null);\n    const destroyFuncs = useRef<(() => void)[]>([]);\n    const whenReadyFuncs = useRef<(() => void)[]>([]);\n    const prevProps = useRef<AgGridReactProps<any>>(props);\n\n    const ready = useRef<boolean>(false);\n\n    const [context, setContext] = useState<Context | undefined>(undefined);\n\n    // Hook to enable Portals to be displayed via the PortalManager\n    const [, setPortalRefresher] = useState(0);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n\n            destroyFuncs.current.forEach((f) => f());\n            destroyFuncs.current.length = 0;\n\n            return;\n        }\n\n        const modules = props.modules || [];\n\n        if (!portalManager.current) {\n            portalManager.current = new PortalManager(\n                () => setPortalRefresher((prev) => prev + 1),\n                props.componentWrappingElement,\n                props.maxComponentCreationTimeMs\n            );\n            destroyFuncs.current.push(() => {\n                portalManager.current?.destroy();\n                portalManager.current = null;\n            });\n        }\n\n        const mergedGridOps = ComponentUtil.combineAttributesAndGridOptions(props.gridOptions, props);\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(portalManager.current, !!mergedGridOps.reactiveCustomComponents),\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(),\n        };\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n\n            destroyFuncs.current.push(() => {\n                context.destroy();\n            });\n\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n\n                if (context.isDestroyed()) {\n                    return;\n                }\n\n                const api = apiRef.current;\n                if (api) {\n                    if (props.setGridApi) {\n                        props.setGridApi(api, new ColumnApi(api));\n                    }\n                }\n            });\n        };\n\n        // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n        // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n        // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n        const acceptChangesCallback = (context: Context) => {\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                whenReadyFuncs.current.forEach((f) => f());\n                whenReadyFuncs.current.length = 0;\n                ready.current = true;\n            });\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        apiRef.current = gridCoreCreator.create(\n            eGui.current,\n            mergedGridOps,\n            createUiCallback,\n            acceptChangesCallback,\n            gridParams\n        );\n\n    }, []);\n\n    const style = useMemo(() => {\n        return {\n            height: '100%',\n            ...(props.containerStyle || {}),\n        };\n    }, [props.containerStyle]);\n\n    const processWhenReady = useCallback((func: () => void) => {\n        if (ready.current) {\n            func();\n        } else {\n            whenReadyFuncs.current.push(func);\n        }\n    }, []);\n\n    useEffect(() => {\n        const changes = extractGridPropertyChanges(prevProps.current, props);\n        prevProps.current = props;\n        processWhenReady(() => {\n            if (apiRef.current) {\n                ComponentUtil.processOnChange(changes, apiRef.current)\n            }\n        });\n    }, [props]);\n\n    return (\n        <div style={style} className={props.className} ref={setRef}>\n            {context && !context.isDestroyed() ? <GridComp context={context} /> : null}\n            {portalManager.current?.getPortals() ?? null}\n        </div>\n    );\n};\n\nfunction extractGridPropertyChanges(prevProps: any, nextProps: any): { [p: string]: any } {\n    const changes: { [p: string]: any } = {};\n    Object.keys(nextProps).forEach(propKey => {\n        const propValue = nextProps[propKey];\n        if (prevProps[propKey] !== propValue) {\n            changes[propKey] = propValue;\n        }\n    });\n\n    return changes;\n}\n\nclass ReactFrameworkComponentWrapper\n    extends BaseComponentWrapper<WrappableInterface>\n    implements FrameworkComponentWrapper {\n    constructor(private readonly parent: PortalManager, private readonly reactiveCustomComponents?: boolean) {\n        super();\n    }\n\n    createWrapper(UserReactComponent: { new(): any }, componentType: ComponentType): WrappableInterface {\n        if (this.reactiveCustomComponents) {\n            const getComponentClass = (propertyName: string) => {\n                switch (propertyName) {\n                    case 'filter':\n                        return FilterComponentWrapper;\n                    case 'floatingFilterComponent':\n                        return FloatingFilterComponentWrapper;\n                    case 'dateComponent':\n                        return DateComponentWrapper;\n                    case 'loadingOverlayComponent':\n                        return LoadingOverlayComponentWrapper;\n                    case 'noRowsOverlayComponent':\n                        return NoRowsOverlayComponentWrapper;\n                    case 'statusPanel':\n                        return StatusPanelComponentWrapper;\n                    case 'toolPanel':\n                        return ToolPanelComponentWrapper;\n                    case 'menuItem':\n                        return MenuItemComponentWrapper;\n                }\n            }\n            const ComponentClass = getComponentClass(componentType.propertyName);\n            if (ComponentClass) {\n                return new ComponentClass(UserReactComponent, this.parent, componentType);\n            }\n        } else {\n            switch (componentType.propertyName) {\n                case 'filter':\n                case 'floatingFilterComponent':\n                case 'dateComponent':\n                case 'loadingOverlayComponent':\n                case 'noRowsOverlayComponent':\n                case 'statusPanel':\n                case 'toolPanel':\n                case 'menuItem':\n                    warnReactiveCustomComponents();\n                    break;\n            }\n        }\n        // only cell renderers and tool panel should use fallback methods\n        const suppressFallbackMethods = !componentType.cellRenderer && componentType.propertyName !== 'toolPanel';\n        return new ReactComponent(UserReactComponent, this.parent, componentType, suppressFallbackMethods);\n    }\n}\n\n// Define DetailCellRenderer and ReactFrameworkOverrides here to avoid circular dependency\nconst DetailCellRenderer = forwardRef((props: IDetailCellRendererParams, ref: any) => {\n\n    const { ctrlsFactory, context, gridOptionsService, resizeObserverService, clientSideRowModel, serverSideRowModel } = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [gridCssClasses, setGridCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [detailGridOptions, setDetailGridOptions] = useState<GridOptions>();\n    const [detailRowData, setDetailRowData] = useState<any[]>();\n\n    const ctrlRef = useRef<IDetailCellRendererCtrl>();\n    const eGuiRef = useRef<HTMLDivElement | null>(null);\n\n    const resizeObserverDestroyFunc = useRef<() => void>();\n\n    const parentModules = useMemo(() => ModuleRegistry.__getGridRegisteredModules(props.api.getGridId()), [props]);\n    const topClassName = useMemo(() => cssClasses.toString() + ' ag-details-row', [cssClasses]);\n    const gridClassName = useMemo(() => gridCssClasses.toString() + ' ag-details-grid', [gridCssClasses]);\n\n    if (ref) {\n        useImperativeHandle(ref, () => ({\n            refresh() { return ctrlRef.current?.refresh() ?? false; }\n        }));\n    }\n\n    if (props.template) {\n        _.warnOnce('detailCellRendererParams.template is not supported by AG Grid React. To change the template, provide a Custom Detail Cell Renderer. See https://ag-grid.com/react-data-grid/master-detail-custom-detail/');\n    }\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGuiRef.current = e;\n\n        if (!eGuiRef.current) {\n            context.destroyBean(ctrlRef.current);\n            if (resizeObserverDestroyFunc.current) {\n                resizeObserverDestroyFunc.current();\n            }\n            return;\n        }\n\n        const compProxy: IDetailCellRenderer = {\n            addOrRemoveCssClass: (name: string, on: boolean) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveDetailGridCssClass: (name: string, on: boolean) => setGridCssClasses(prev => prev.setClass(name, on)),\n            setDetailGrid: gridOptions => setDetailGridOptions(gridOptions),\n            setRowData: rowData => setDetailRowData(rowData),\n            getGui: () => eGuiRef.current!\n        };\n\n        const ctrl = ctrlsFactory.getInstance('detailCellRenderer') as IDetailCellRendererCtrl;\n        if (!ctrl) { return; } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n\n        ctrl.init(compProxy, props);\n\n        ctrlRef.current = ctrl;\n\n        if (gridOptionsService.get('detailRowAutoHeight')) {\n            const checkRowSizeFunc = () => {\n                // when disposed, current is null, so nothing to do, and the resize observer will\n                // be disposed of soon\n                if (eGuiRef.current == null) { return; }\n\n                const clientHeight = eGuiRef.current.clientHeight;\n\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    const updateRowHeightFunc = () => {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        } else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n\n            resizeObserverDestroyFunc.current = resizeObserverService.observeResize(eGuiRef.current, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n    }, []);\n\n    const setGridApi = useCallback((api: GridApi, columnApi: ColumnApi) => {\n        ctrlRef.current?.registerDetailWithMaster(api, columnApi)\n    }, []);\n\n    return (\n        <div className={topClassName} ref={setRef}>\n            {\n                detailGridOptions &&\n                <AgGridReactUi className={gridClassName} {...detailGridOptions} modules={parentModules} rowData={detailRowData} setGridApi={setGridApi} />\n            }\n        </div>\n    );\n});\n\nclass ReactFrameworkOverrides extends VanillaFrameworkOverrides {\n\n    constructor() {\n        super('react');\n        this.renderingEngine = 'react';\n    }\n\n    private frameworkComponents: any = {\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agDetailCellRenderer: DetailCellRenderer\n    };\n\n    public frameworkComponent(name: string): any {\n        return this.frameworkComponents[name];\n    }\n\n    isFrameworkComponent(comp: any): boolean {\n        if (!comp) { return false; }\n        const prototype = comp.prototype;\n        const isJsComp = prototype && 'getGui' in prototype;\n        return !isJsComp;\n    }\n\n    wrapIncoming: <T>(callback: () => T, source?: FrameworkOverridesIncomingSource) => T = (callback, source) => {\n        if (source === 'ensureVisible') {\n            // As ensureVisible could easily be called from an effect which is already running inside a React render\n            // we need to run it without flushSync to avoid the DEV error from React when calling flushSync inside a render.\n            // This does mean there will be a flicker as the grid redraws the cells in the new location but this is deemed\n            // less of an issue then the error in the console for devs. \n            return runWithoutFlushSync(callback);\n        }\n        return callback();\n    }\n}\n\n", "import { AgPromise } from \"@ag-grid-community/core\";\nimport customWrapperComp from \"../../reactUi/customComp/customWrapperComp\";\nimport { ReactComponent } from \"../reactComponent\";\n\nexport type WrapperParams<P, M> = {\n    initialProps: P;\n    CustomComponentClass: any;\n    setMethods: (methods: M) => void;\n    addUpdateCallback: (callback: (props: P) => void) => void;\n}\n\nexport function addOptionalMethods<M, C>(optionalMethodNames: string[], providedMethods: M, component: C): void {\n    optionalMethodNames.forEach(methodName => {\n        const providedMethod = (providedMethods as any)[methodName];\n        if (providedMethod) {\n            (component as any)[methodName] = providedMethod;\n        }\n    });\n}\n\nexport class CustomComponentWrapper<TInputParams, TOutputParams, TMethods> extends ReactComponent {\n    private updateCallback?: () => AgPromise<void>;\n    private resolveUpdateCallback!: () => void;\n    private awaitUpdateCallback = new AgPromise<void>(resolve => {\n        this.resolveUpdateCallback = resolve;\n    });\n\n    protected providedMethods!: TMethods;\n\n    protected wrapperComponent: any = customWrapperComp;\n\n    protected sourceParams!: TInputParams;\n\n    public init(params: TInputParams): AgPromise<void> {\n        this.sourceParams = params;\n        return super.init(this.getProps());\n    }\n\n    public addMethod(): void {\n        // do nothing\n    }\n\n    public getInstance(): AgPromise<any> {\n        return this.instanceCreated.then(() => this.componentInstance);\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this;\n    }\n\n    protected createElement(reactComponent: any, props: TOutputParams): any {\n        return super.createElement(this.wrapperComponent, {\n            initialProps: props,\n            CustomComponentClass: reactComponent,\n            setMethods: (methods: TMethods) => this.setMethods(methods),\n            addUpdateCallback: (callback: (props: TOutputParams) => void) => {\n                // this hooks up `CustomWrapperComp` to allow props updates to be pushed to the custom component\n                this.updateCallback = () => {\n                    callback(this.getProps());\n                    return new AgPromise<void>(resolve => {\n                        // ensure prop updates have happened\n                        setTimeout(() => {\n                            resolve();\n                        });\n                    });\n                };\n                this.resolveUpdateCallback();\n            }\n        });\n    }\n\n    protected setMethods(methods: TMethods): void {\n        this.providedMethods = methods;\n        addOptionalMethods(this.getOptionalMethods(), this.providedMethods, this);\n    }\n\n    protected getOptionalMethods(): string[] {\n        return [];\n    }\n\n    protected getProps(): TOutputParams {\n        return {\n            ...this.sourceParams,\n            key: this.key,\n            ref: (this as any).ref\n         } as any;\n    }\n\n    protected refreshProps(): AgPromise<void> {\n        if (this.updateCallback) {\n            return this.updateCallback();\n        }\n        // `refreshProps` is assigned in an effect. It's possible it hasn't been run before the first usage, so wait.\n        return new AgPromise<void>(resolve => this.awaitUpdateCallback.then(() => {\n            this.updateCallback!().then(() => resolve());\n        }));\n    }\n}\n", "import React, { memo, useEffect, useState } from \"react\";\nimport { WrapperParams } from \"../../shared/customComp/customComponentWrapper\"\nimport { CustomContext } from \"../../shared/customComp/customContext\"\n\nconst CustomWrapperComp = <P, M>(params: WrapperParams<P, M>) => {\n    const { initialProps, addUpdateCallback, CustomComponentClass, setMethods } = params;\n\n    const [props, setProps] = useState(initialProps);\n\n    useEffect(() => {\n        // this allows the ts wrapper component to update the props passed into the custom component\n        addUpdateCallback(newProps => setProps(newProps));\n    }, []);\n\n    return (\n        <CustomContext.Provider value={{ setMethods }}>\n            <CustomComponentClass {...props}/>\n        </CustomContext.Provider>\n    );\n}\n\nexport default memo(CustomWrapperComp);\n", "import { createContext } from \"react\";\n\ntype CustomContextParams<M> = {\n    setMethods: (methods: M) => void,\n}\n\nexport const CustomContext = createContext<CustomContextParams<any>>({\n    setMethods: () => {},\n});\n", "import { createElement, ReactPortal } from 'react';\nimport { AgPromise, ComponentType, IComponent, WrappableInterface, _ } from '@ag-grid-community/core';\nimport { PortalManager } from './portalManager';\nimport generateNewKey from './keyGenerator';\nimport { createPortal } from 'react-dom';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nexport class ReactComponent implements IComponent<any>, WrappableInterface {\n    protected eParentElement!: HTMLElement;\n    protected componentInstance: any;\n    protected reactComponent: any;\n    protected portalManager: PortalManager;\n    protected portal: ReactPortal | null = null;\n    protected statelessComponent: boolean;\n    protected componentType: ComponentType;\n\n    protected key: string;\n    private portalKey: string;\n    private oldPortal: ReactPortal | null = null;\n    private reactElement: any;\n    private params: any;\n    protected instanceCreated: AgPromise<boolean> | AgPromise<false>;\n    private resolveInstanceCreated?: (value: boolean) => void;\n    private suppressFallbackMethods: boolean;\n\n    constructor(reactComponent: any, portalManager: PortalManager, componentType: ComponentType, suppressFallbackMethods?: boolean) {\n        this.reactComponent = reactComponent;\n        this.portalManager = portalManager;\n        this.componentType = componentType;\n        this.suppressFallbackMethods = !!suppressFallbackMethods;\n\n        this.statelessComponent = this.isStateless(this.reactComponent);\n\n        this.key = generateNewKey();\n        this.portalKey = generateNewKey();\n\n        this.instanceCreated = this.isStatelessComponent() ? AgPromise.resolve(false) : new AgPromise(resolve => {\n            this.resolveInstanceCreated = resolve;\n        })\n    }\n\n    public getGui(): HTMLElement {\n        return this.eParentElement;\n    }\n\n    /** `getGui()` returns the parent element. This returns the actual root element. */\n    public getRootElement(): HTMLElement {\n        const firstChild = this.eParentElement.firstChild;\n        return firstChild as HTMLElement;\n    }\n\n    public destroy(): void {\n        if (this.componentInstance && typeof this.componentInstance.destroy == 'function') {\n            this.componentInstance.destroy();\n        }\n        return this.portalManager.destroyPortal(this.portal as ReactPortal);\n    }\n\n    protected createParentElement(params: any) {\n        const componentWrappingElement = this.portalManager.getComponentWrappingElement();\n        const eParentElement = document.createElement(componentWrappingElement || 'div');\n\n        (eParentElement as HTMLElement).classList.add('ag-react-container');\n\n        /** @deprecated v21.2 */\n        params.reactContainer = eParentElement;\n\n        return eParentElement;\n    }\n\n    protected addParentContainerStyleAndClasses() {\n        if (!this.componentInstance) {\n            return;\n        }\n\n        if (this.componentInstance.getReactContainerStyle && this.componentInstance.getReactContainerStyle()) {\n            _.warnOnce('Since v31.1 \"getReactContainerStyle\" is deprecated. Apply styling directly to \".ag-react-container\" if needed.');\n            Object.assign(this.eParentElement.style, this.componentInstance.getReactContainerStyle());\n        }\n\n        if (this.componentInstance.getReactContainerClasses && this.componentInstance.getReactContainerClasses()) {\n            _.warnOnce('Since v31.1 \"getReactContainerClasses\" is deprecated. Apply styling directly to \".ag-react-container\" if needed.');\n            const parentContainerClasses: string[] = this.componentInstance.getReactContainerClasses();\n            parentContainerClasses.forEach(className => this.eParentElement.classList.add(className));\n        }\n    }\n\n    public statelessComponentRendered(): boolean {\n        // fixed fragmentsFuncRendererCreateDestroy funcRendererWithNan (changeDetectionService too for NaN)\n        return this.eParentElement.childElementCount > 0 || this.eParentElement.childNodes.length > 0;\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this.componentInstance;\n    }\n\n    public isStatelessComponent(): boolean {\n        return this.statelessComponent;\n    }\n\n    public getReactComponentName(): string {\n        return this.reactComponent.name;\n    }\n\n    public getMemoType() {\n        return this.hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n    }\n\n    private hasSymbol() {\n        return typeof Symbol === 'function' && Symbol.for;\n    }\n\n    protected isStateless(Component: any) {\n        return (typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent))\n            || (typeof Component === 'object' && Component.$$typeof === this.getMemoType());\n    }\n\n    public hasMethod(name: string): boolean {\n        const frameworkComponentInstance = this.getFrameworkComponentInstance();\n        return (!!frameworkComponentInstance && frameworkComponentInstance[name] != null) ||\n            this.fallbackMethodAvailable(name);\n    }\n\n    public callMethod(name: string, args: IArguments): void {\n        const frameworkComponentInstance = this.getFrameworkComponentInstance();\n\n        if (this.isStatelessComponent()) {\n            return this.fallbackMethod(name, !!args && args[0] ? args[0] : {});\n        } else if (!(!!frameworkComponentInstance)) {\n            // instance not ready yet - wait for it\n            setTimeout(() => this.callMethod(name, args));\n            return;\n        }\n\n        const method = frameworkComponentInstance[name];\n\n        if (!!method) {\n            return method.apply(frameworkComponentInstance, args);\n        }\n\n        if (this.fallbackMethodAvailable(name)) {\n            return this.fallbackMethod(name, !!args && args[0] ? args[0] : {});\n        }\n    }\n\n    public addMethod(name: string, callback: Function): void {\n        (this as any)[name] = callback;\n    }\n\n    public init(params: any): AgPromise<void> {\n        this.eParentElement = this.createParentElement(params);\n        this.params = params;\n\n        this.createOrUpdatePortal(params);\n\n        return new AgPromise<void>(resolve => this.createReactComponent(resolve));\n    }\n\n    private createOrUpdatePortal(params: any) {\n        if (!this.isStatelessComponent()) {\n            // grab hold of the actual instance created\n            params.ref = (element: any) => {\n                this.componentInstance = element;\n                this.addParentContainerStyleAndClasses();\n                this.resolveInstanceCreated?.(true);\n                this.resolveInstanceCreated = undefined;\n            };\n        }\n\n        this.reactElement = this.createElement(this.reactComponent, { ...params, key: this.key });\n\n        this.portal = createPortal(\n            this.reactElement,\n            this.eParentElement as any,\n            this.portalKey // fixed deltaRowModeRefreshCompRenderer\n        );\n    }\n\n    protected createElement(reactComponent: any, props: any): any {\n        return createElement(reactComponent, props);\n    }\n\n    private createReactComponent(resolve: (value: any) => void) {\n        this.portalManager.mountReactPortal(this.portal!, this, (value: any) => {\n            resolve(value);\n        });\n    }\n\n    public isNullValue(): boolean {\n        return this.valueRenderedIsNull(this.params);\n    }\n\n    public rendered(): boolean {\n        return (this.isStatelessComponent() && this.statelessComponentRendered()) ||\n            !!(!this.isStatelessComponent() && this.getFrameworkComponentInstance());\n    }\n\n    private valueRenderedIsNull(params: any): boolean {\n        // we only do this for cellRenderers\n        if (!this.componentType.cellRenderer) {\n            return false;\n        }\n\n        // we've no way of knowing if a component returns null without rendering it first\n        // so we render it to markup and check the output - if it'll be null we know and won't timeout\n        // waiting for a component that will never be created\n\n        const originalConsoleError = console.error;\n        try {\n            // if a user is doing anything that uses useLayoutEffect (like material ui) then it will throw and we\n            // can't do anything to stop it; this is just a warning and has no effect on anything so just suppress it\n            // for this single operation\n            console.error = () => {\n            };\n            const staticMarkup = renderToStaticMarkup(createElement(this.reactComponent, params) as any);\n            return staticMarkup === '';\n        } catch (ignore) {\n        } finally {\n            console.error = originalConsoleError;\n        }\n\n        return false;\n    }\n\n    /*\n    * fallback methods - these will be invoked if a corresponding instance method is not present\n    * for example if refresh is called and is not available on the component instance, then refreshComponent on this\n    * class will be invoked instead\n    *\n    * Currently only refresh is supported\n    */\n    protected refreshComponent(args: any): void {\n        this.oldPortal = this.portal;\n        this.createOrUpdatePortal(args);\n        this.portalManager.updateReactPortal(this.oldPortal!, this.portal!);\n    }\n\n    protected fallbackMethod(name: string, params: any): any {\n        const method = (this as any)[`${name}Component`];\n        if (!this.suppressFallbackMethods && !!method) {\n            return method.bind(this)(params);\n        }\n    }\n\n    protected fallbackMethodAvailable(name: string): boolean {\n        if (this.suppressFallbackMethods) { return false; }\n        const method = (this as any)[`${name}Component`];\n        return !!method;\n    }\n}\n", "let counter = 0;\nexport default function generateNewKey() {\n    return `agPortalKey_${++counter}`;\n}\n", "import { IDate, IDateParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomDateProps, CustomDateCallbacks } from \"./interfaces\";\n\nexport class DateComponentWrapper extends CustomComponentWrapper<IDateParams, CustomDateProps, CustomDateCallbacks> implements IDate {\n    private date: Date | null = null;\n    private readonly onDateChange = (date: Date | null) => this.updateDate(date);\n\n    public getDate(): Date | null {\n        return this.date;\n    }\n\n    public setDate(date: Date | null): void {\n        this.date = date;\n        this.refreshProps();\n    }\n\n    public refresh(params: IDateParams): void {\n        this.sourceParams = params;\n        this.refreshProps();\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['afterGuiAttached', 'setInputPlaceholder', 'setInputAriaLabel', 'setDisabled'];\n    }\n\n    private updateDate(date: Date | null): void {\n        this.setDate(date);\n        // don't need to wait on `refreshProps` as not reliant on state maintained inside React\n        this.sourceParams.onDateChanged();\n    }\n\n    protected getProps(): CustomDateProps {\n        const props = super.getProps();\n        props.date = this.date;\n        props.onDateChange = this.onDateChange;\n        // remove props in IDataParams but not BaseDateParams\n        delete (props as any).onDateChanged;\n        return props;\n    }\n}\n", "import { AgPromise, IDoesFilterPassParams, IFilter, IFilterParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomFilterProps, CustomFilterCallbacks } from \"./interfaces\";\n\nexport class FilterComponentWrapper extends CustomComponentWrapper<IFilterParams, CustomFilterProps, CustomFilterCallbacks> implements IFilter {\n    private model: any = null;\n    private readonly onModelChange = (model: any) => this.updateModel(model);\n    private readonly onUiChange = () => this.sourceParams.filterChangedCallback();\n\n    public isFilterActive(): boolean {\n        return this.model != null;\n    }\n\n    public doesFilterPass(params: IDoesFilterPassParams<any>): boolean {\n        return this.providedMethods.doesFilterPass(params);\n    }\n\n    public getModel(): any {\n        return this.model;\n    }\n\n    public setModel(model: any): AgPromise<void> {\n        this.model = model;\n        return this.refreshProps();\n    }\n\n    public refresh(newParams: IFilterParams): boolean {\n        this.sourceParams = newParams;\n        this.refreshProps();\n        return true;\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['afterGuiAttached', 'afterGuiDetached', 'onNewRowsLoaded', 'getModelAsString', 'onAnyFilterChanged'];\n    }\n\n    private updateModel(model: any): void {\n        this.setModel(model).then(() => this.sourceParams.filterChangedCallback());\n    }\n\n    protected getProps(): CustomFilterProps {\n        const props = super.getProps();\n        props.model = this.model;\n        props.onModelChange = this.onModelChange;\n        props.onUiChange = this.onUiChange;\n        // remove props in IFilterParams but not CustomFilterProps\n        delete (props as any).filterChangedCallback;\n        delete (props as any).filterModifiedCallback;\n        delete (props as any).valueGetter;\n        return props;\n    }\n}\n", "import { AgPromise, IFloatingFilter, IFloatingFilterParams } from \"@ag-grid-community/core\";\nimport { addOptionalMethods } from \"./customComponentWrapper\";\nimport { CustomFloatingFilterProps, CustomFloatingFilterCallbacks } from \"./interfaces\";\n\nexport function updateFloatingFilterParent(params: IFloatingFilterParams, model: any): void {\n    params.parentFilterInstance(instance => {\n        (instance.setModel(model) || AgPromise.resolve()).then(() => {\n            params.filterParams.filterChangedCallback();\n        });\n    });\n}\n\nexport class FloatingFilterComponentProxy implements IFloatingFilter {\n    private model: any = null;\n    private readonly onModelChange = (model: any) => this.updateModel(model);\n\n    constructor(private floatingFilterParams: IFloatingFilterParams, private readonly refreshProps: () => void) {}\n\n    public getProps(): CustomFloatingFilterProps {\n        return {\n            ...this.floatingFilterParams,\n            model: this.model,\n            onModelChange: this.onModelChange\n        };\n    }\n\n    public onParentModelChanged(parentModel: any): void {\n        this.model = parentModel;\n        this.refreshProps();\n    }\n\n    public refresh(params: IFloatingFilterParams): void {\n        this.floatingFilterParams = params;\n        this.refreshProps();\n    }\n\n    public setMethods(methods: CustomFloatingFilterCallbacks): void {\n        addOptionalMethods(this.getOptionalMethods(), methods, this);\n    }\n\n    private getOptionalMethods(): string[] {\n        return ['afterGuiAttached'];\n    }\n\n    private updateModel(model: any): void {\n        this.model = model;\n        this.refreshProps();\n        updateFloatingFilterParent(this.floatingFilterParams, model);\n    }\n}\n", "import { IFloatingFilter, IFloatingFilterParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { updateFloatingFilterParent } from \"./floatingFilterComponentProxy\";\nimport { CustomFloatingFilterProps, CustomFloatingFilterCallbacks } from \"./interfaces\";\n\n// floating filter is normally instantiated via react header filter cell comp, but not in the case of multi filter\nexport class FloatingFilterComponentWrapper extends CustomComponentWrapper<IFloatingFilterParams, CustomFloatingFilterProps, CustomFloatingFilterCallbacks> implements IFloatingFilter {\n    private model: any = null;\n    private readonly onModelChange = (model: any) => this.updateModel(model);\n\n    public onParentModelChanged(parentModel: any): void {\n        this.model = parentModel;\n        this.refreshProps();\n    }\n\n    public refresh(newParams: IFloatingFilterParams): void {\n        this.sourceParams = newParams;\n        this.refreshProps();\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['afterGuiAttached'];\n    }\n\n    private updateModel(model: any): void {\n        this.model = model;\n        this.refreshProps();\n        // don't need to wait on `refreshProps` as not reliant on state maintained inside React\n        updateFloatingFilterParent(this.sourceParams, model);\n    }\n\n    protected getProps(): CustomFloatingFilterProps {\n        const props = super.getProps();\n        props.model = this.model;\n        props.onModelChange = this.onModelChange;\n        return props;\n    }\n}\n", "import { ILoadingOverlay, ILoadingOverlayParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomLoadingOverlayProps } from \"./interfaces\";\n\nexport class LoadingOverlayComponentWrapper extends CustomComponentWrapper<ILoadingOverlayParams, CustomLoadingOverlayProps, {}> implements ILoadingOverlay {\n    public refresh(params: ILoadingOverlayParams): void {\n        this.sourceParams = params;\n        this.refreshProps();\n    }\n}\n", "import { AgPromise, IMenuItem, IMenuItemParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomMenuItemProps, CustomMenuItemCallbacks } from \"./interfaces\";\n\nexport class MenuItemComponentWrapper extends CustomComponentWrapper<IMenuItemParams, CustomMenuItemProps, CustomMenuItemCallbacks> implements IMenuItem {\n    private active: boolean = false;\n    private expanded: boolean = false;\n    private readonly onActiveChange = (active: boolean) => this.updateActive(active);\n\n    public setActive(active: boolean): void {\n        this.awaitSetActive(active);\n    }\n\n    public setExpanded(expanded: boolean): void {\n        this.expanded = expanded;\n        this.refreshProps();\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['select', 'configureDefaults'];\n    }\n\n    private awaitSetActive(active: boolean): AgPromise<void> {\n        this.active = active;\n        return this.refreshProps();\n    }\n\n    private updateActive(active: boolean): void {\n        const result = this.awaitSetActive(active);\n        if (active){\n            result.then(() => this.sourceParams.onItemActivated());\n        }\n    }\n\n    protected getProps(): CustomMenuItemProps {\n        const props = super.getProps();\n        props.active = this.active;\n        props.expanded = this.expanded;\n        props.onActiveChange = this.onActiveChange;\n        // remove props in IMenuItemParams but not CustomMenuItemProps\n        delete (props as any).onItemActivated;\n        return props;\n    }\n}\n", "import { INoRowsOverlay, INoRowsOverlayParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomNoRowsOverlayProps } from \"./interfaces\";\n\nexport class NoRowsOverlayComponentWrapper extends CustomComponentWrapper<INoRowsOverlayParams, CustomNoRowsOverlayProps, {}> implements INoRowsOverlay {\n    public refresh(params: INoRowsOverlayParams): void {\n        this.sourceParams = params;\n        this.refreshProps();\n    }\n}\n", "import { IStatusPanel, IStatusPanelParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomStatusPanelProps } from \"./interfaces\";\n\nexport class StatusPanelComponentWrapper extends CustomComponentWrapper<IStatusPanelParams, CustomStatusPanelProps, {}> implements IStatusPanel {\n    public refresh(params: IStatusPanelParams): boolean {\n        this.sourceParams = params;\n        this.refreshProps();\n        return true;\n    }\n}\n", "import { IToolPanel, IToolPanelParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomToolPanelProps } from \"./interfaces\";\n\nexport class ToolPanelComponentWrapper extends CustomComponentWrapper<IToolPanelParams, CustomToolPanelProps, {}> implements IToolPanel {\n    private state: any;\n    private readonly onStateChange = (state: any) => this.updateState(state);\n\n    public refresh(params: IToolPanelParams): boolean {\n        this.sourceParams = params;\n        this.refreshProps();\n        return true;\n    }\n\n    public getState(): any {\n        return this.state;\n    }\n\n    private updateState(state: any): void {\n        this.state = state;\n        this.refreshProps();\n        // don't need to wait on `refreshProps` as not reliant on state maintained inside React\n        this.sourceParams.onStateUpdated();\n    }\n\n    protected getProps(): CustomToolPanelProps {\n        const props = super.getProps();\n        props.state = this.state;\n        props.onStateChange = this.onStateChange;\n        return props;\n    }\n}\n", "import { ReactPortal } from \"react\";\nimport { ReactComponent } from \"./reactComponent\";\n\nexport class PortalManager {\n\n    private static MAX_COMPONENT_CREATION_TIME_IN_MS: number = 1000; // a second should be more than enough to instantiate a component\n\n    private refresher: () => void;\n    private wrappingElement: string;\n    private destroyed = false;\n\n    private portals: ReactPortal[] = [];\n    private hasPendingPortalUpdate = false;\n\n    private maxComponentCreationTimeMs: number;\n\n    constructor(refresher: () => void, wrappingElement?: string, maxComponentCreationTimeMs?: number) {\n        this.wrappingElement = wrappingElement ? wrappingElement : 'div';\n        this.refresher = refresher;\n        this.maxComponentCreationTimeMs = maxComponentCreationTimeMs ? maxComponentCreationTimeMs : PortalManager.MAX_COMPONENT_CREATION_TIME_IN_MS;\n    }\n\n    public getPortals(): ReactPortal[] {\n        return this.portals;\n    }\n\n    public destroy(): void {\n        this.destroyed = true;\n    }\n\n    public destroyPortal(portal: ReactPortal): void {\n        this.portals = this.portals.filter(curPortal => curPortal !== portal);\n        this.batchUpdate();\n    }\n\n    public getComponentWrappingElement(): string | undefined {\n        return this.wrappingElement;\n    }\n\n    public mountReactPortal(portal: ReactPortal, reactComponent: ReactComponent, resolve: (value: any) => void): void {\n        this.portals = [...this.portals, portal];\n        this.waitForInstance(reactComponent, resolve);\n        this.batchUpdate();\n    }\n\n    public updateReactPortal(oldPortal: ReactPortal, newPortal: ReactPortal): void {\n        this.portals[this.portals.indexOf(oldPortal)] = newPortal;\n        this.batchUpdate();\n    }\n\n    private batchUpdate(): void {\n        if (this.hasPendingPortalUpdate) {\n            return;\n        }\n\n        setTimeout(() => {\n            if (!this.destroyed) { // destroyed?\n                this.refresher();\n                this.hasPendingPortalUpdate = false;\n            }\n        });\n\n        this.hasPendingPortalUpdate = true;\n    }\n\n    waitForInstance(reactComponent: ReactComponent, resolve: (value: any) => void, startTime = Date.now()): void {\n        // if the grid has been destroyed in the meantime just resolve\n        if (this.destroyed) {\n            resolve(null);\n            return;\n        }\n\n        if (reactComponent.rendered()) {\n            resolve(reactComponent);\n        } else {\n            if (Date.now() - startTime >= this.maxComponentCreationTimeMs! && !this.hasPendingPortalUpdate) {\n                // last check - we check if this is a null value being rendered - we do this last as using SSR to check the value\n                // can mess up contexts\n                if (reactComponent.isNullValue()) {\n                    resolve(reactComponent);\n                    return;\n                }\n\n                console.error(`AG Grid: React Component '${reactComponent.getReactComponentName()}' not created within ${this.maxComponentCreationTimeMs}ms.`)\n                console.error(\"    If the component is using `forwardRef` but not `useImperativeHandle`, add the following: `useImperativeHandle(ref, () => ({}));`\");\n                return;\n            }\n\n            window.setTimeout(() => {\n                this.waitForInstance(reactComponent, resolve, startTime);\n            });\n        }\n    }\n}", "import React from 'react';\nimport { Beans } from '@ag-grid-community/core';\n\nexport const BeansContext = React.createContext<Beans>({} as Beans);\n", "import ReactDOM from \"react-dom\";\n\nexport const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    constructor(...initialClasses: string[]) {\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}\n\n// CreateRoot is only available from React 18, which if used requires us to use flushSync.\nconst createRootAndFlushSyncAvailable = (ReactDOM as any).createRoot != null && (ReactDOM as any).flushSync != null;\n\nlet disableFlushSync = false;\n/** Enable flushSync to be disabled for the callback and the next frame (via setTimeout 0) to prevent flushSync during an existing render.\n * Provides an alternative to the more fine grained useFlushSync boolean param to agFlushSync.\n */\nexport function runWithoutFlushSync<T>(func: () => T){\n    if(!disableFlushSync){\n        // We only re-enable flushSync asynchronously to avoid re-enabling it while React is still triggering renders related to the original call.\n        setTimeout(() => disableFlushSync = false, 0);\n    }\n    disableFlushSync = true;\n    return func();\n}\n\n/**\n * Wrapper around flushSync to provide backwards compatibility with React 16-17\n * Also allows us to control via the `useFlushSync` param whether we want to use flushSync or not\n * as we do not want to use flushSync when we are likely to already be in a render cycle\n */\nexport const agFlushSync = (useFlushSync: boolean, fn: () => void) => {\n    if (createRootAndFlushSyncAvailable && useFlushSync && !disableFlushSync) {\n        (ReactDOM as any).flushSync(fn);\n    } else {\n        fn();\n    }\n}\n\n/**\n * The aim of this function is to maintain references to prev or next values where possible.\n * If there are not real changes then return the prev value to avoid unnecessary renders.\n * @param maintainOrder If we want to maintain the order of the elements in the dom in line with the next array\n * @returns \n */\nexport function getNextValueIfDifferent<T extends { getInstanceId: () => string }>(prev: T[] | null, next: T[] | null, maintainOrder: boolean): T[] | null {\n    if (next == null || prev == null) {\n        return next;\n    }\n\n    // If same array instance nothing to do.\n    // If both empty arrays maintain reference of prev.\n    if (prev === next || (next.length === 0 && prev.length === 0)) {\n        return prev;\n    }\n\n    // If maintaining dom order just return next\n    // If prev is empty just return next immediately as no previous order to maintain\n    // If prev was not empty but next is empty return next immediately\n    if (maintainOrder || (prev.length === 0 && next.length > 0) || (prev.length > 0 && next.length === 0)) {\n        return next;\n    }\n\n    // if dom order not important, we don't want to change the order\n    // of the elements in the dom, as this would break transition styles\n    const oldValues: T[] = [];\n    const newValues: T[] = [];\n    const prevMap: Map<string, T> = new Map();\n    const nextMap: Map<string, T> = new Map();\n\n    for (let i = 0; i < next.length; i++) {\n        const c = next[i];\n        nextMap.set(c.getInstanceId(), c);\n    }\n    for (let i = 0; i < prev.length; i++) {\n        const c = prev[i];\n        prevMap.set(c.getInstanceId(), c);\n        if (nextMap.has(c.getInstanceId())) {\n            oldValues.push(c);\n        }\n    }\n\n    for (let i = 0; i < next.length; i++) {\n        const c = next[i];\n        const instanceId = c.getInstanceId();\n\n        if (!prevMap.has(instanceId)) {\n            newValues.push(c);\n        }\n    }\n\n    // All the same values exist just maybe in a different order so maintain the existing reference\n    if (oldValues.length === prev.length && newValues.length === 0) {\n        return prev;\n    }\n\n    // All new values so avoid spreading the new array to maintain the reference\n    if (oldValues.length === 0 && newValues.length === next.length) {\n        return next;\n    }\n    // Spread as we need to combine the old and new values\n    return [...oldValues, ...newValues];\n}\n\n", "import { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer, UserCompDetails, _ } from \"@ag-grid-community/core\";\nimport React, { useContext, useImperativeHandle, forwardRef, useMemo, useRef, useState, useLayoutEffect, useCallback } from 'react';\nimport { BeansContext } from \"../beansContext\";\nimport { showJsComp } from \"../jsComp\";\nimport { CssClasses } from \"../utils\";\n\nconst GroupCellRenderer = forwardRef((props: GroupCellRendererParams, ref) => {\n\n    const context = useContext(BeansContext).context!;\n\n    const eGui = useRef<HTMLElement | null>(null);\n    const eValueRef = useRef<HTMLElement>(null);\n    const eCheckboxRef = useRef<HTMLElement>(null);\n    const eExpandedRef = useRef<HTMLElement>(null);\n    const eContractedRef = useRef<HTMLElement>(null);\n    const ctrlRef = useRef<GroupCellRendererCtrl | null>();\n\n    const [innerCompDetails, setInnerCompDetails] = useState<UserCompDetails>();\n    const [childCount, setChildCount] = useState<string>();\n    const [value, setValue] = useState<any>();\n    const [cssClasses, setCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [expandedCssClasses, setExpandedCssClasses] = useState<CssClasses>(() => new CssClasses('ag-hidden'));\n    const [contractedCssClasses, setContractedCssClasses] = useState<CssClasses>(() => new CssClasses('ag-hidden'));\n    const [checkboxCssClasses, setCheckboxCssClasses] = useState<CssClasses>(() => new CssClasses('ag-invisible'));\n\n    useImperativeHandle(ref, () => {\n        return {\n            // force new instance when grid tries to refresh\n            refresh() { return false; }\n        };\n    });\n\n    useLayoutEffect(() => {\n        return showJsComp(innerCompDetails, context, eValueRef.current!);\n    }, [innerCompDetails]);\n\n    const setRef = useCallback((ref: HTMLDivElement) => {\n        eGui.current = ref;\n        if (!eGui.current) {\n            context.destroyBean(ctrlRef.current);\n            ctrlRef.current = null;\n            return;\n        }\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (details, valueToDisplay) => {\n                setInnerCompDetails(details);\n                setValue(valueToDisplay);\n            },\n            setChildCount: count => setChildCount(count),\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setContractedDisplayed: displayed => setContractedCssClasses(prev => prev.setClass('ag-hidden', !displayed)),\n            setExpandedDisplayed: displayed => setExpandedCssClasses(prev => prev.setClass('ag-hidden', !displayed)),\n            setCheckboxVisible: visible => setCheckboxCssClasses(prev => prev.setClass('ag-invisible', !visible))\n        };\n\n        ctrlRef.current = context.createBean(new GroupCellRendererCtrl());\n        ctrlRef.current.init(compProxy, eGui.current, eCheckboxRef.current!, eExpandedRef.current!, eContractedRef.current!, GroupCellRenderer, props);\n\n    }, []);\n\n    const className = useMemo(() => `ag-cell-wrapper ${cssClasses.toString()}`, [cssClasses]);\n    const expandedClassName = useMemo(() => `ag-group-expanded ${expandedCssClasses.toString()}`, [expandedCssClasses]);\n    const contractedClassName = useMemo(() => `ag-group-contracted ${contractedCssClasses.toString()}`, [contractedCssClasses]);\n    const checkboxClassName = useMemo(() => `ag-group-checkbox ${checkboxCssClasses.toString()}`, [checkboxCssClasses]);\n\n    const useFwRenderer = innerCompDetails && innerCompDetails.componentFromFramework;\n    const FwRenderer = useFwRenderer ? innerCompDetails!.componentClass : undefined;\n    const useValue = innerCompDetails == null && value != null;\n    const escapedValue = _.escapeString(value, true);\n\n    // if there is no ColDef, it means this is a Full Width Group, then we need to add `role=\"gridcell\"`.\n    return (\n        <span className={className} ref={setRef} {...(!props.colDef ? { role: ctrlRef.current?.getCellAriaRole() } : {})}>\n            <span className={expandedClassName} ref={eExpandedRef}></span>\n            <span className={contractedClassName} ref={eContractedRef}></span>\n            <span className={checkboxClassName} ref={eCheckboxRef}></span>\n            <span className=\"ag-group-value\" ref={eValueRef}>\n                { useValue && <>{escapedValue}</> }\n                { useFwRenderer && <FwRenderer {...innerCompDetails!.params}/> }\n            </span>\n            <span className=\"ag-group-child-count\">{childCount}</span>\n        </span>\n        );\n});\n\n// we do not memo() here, as it would stop the forwardRef working\nexport default GroupCellRenderer;", "import { Context, UserCompDetails } from '@ag-grid-community/core';\nimport { MutableRefObject } from 'react';\n\n/**\n * Show a JS Component\n * @returns Effect Cleanup function\n */\nexport const showJsComp = (\n    compDetails: UserCompDetails | undefined | null, \n    context: Context, eParent: HTMLElement, \n    ref?: MutableRefObject<any> | ((ref: any)=>void)\n)  => {\n\n    const doNothing = !compDetails || compDetails.componentFromFramework || context.isDestroyed();\n    if (doNothing) { return; }\n\n    const promise = compDetails!.newAgStackInstance();\n    if (!promise) { return; }\n    \n    // almost all JS Comps are NOT async, however the Floating Multi Filter is Async as it could\n    // be wrapping a React filter, so we need to cater for async comps here.\n\n    let comp: any;\n    let compGui: HTMLElement;\n    let destroyed = false;\n\n    promise.then( c => {\n\n        if (destroyed) {\n            context.destroyBean(c);\n            return;\n        }\n\n        comp = c;\n        compGui = comp.getGui();\n        eParent.appendChild(compGui);\n        setRef(ref, comp);    \n    });\n\n    return () => {\n        destroyed = true;\n        if (!comp) { return; } // in case we were destroyed before async comp was returned\n\n        if (compGui && compGui.parentElement) {\n            compGui.parentElement.removeChild(compGui);\n        }\n\n        context.destroyBean(comp);\n\n        if (ref) {\n            setRef(ref, undefined);\n        }\n    };\n}\n\nconst setRef = (ref: MutableRefObject<any> | ((ref: any)=>void) | undefined, value: any) => {\n    if (!ref) { return; }\n    \n    if (ref instanceof Function) {\n        const refCallback = ref as (ref: any)=>void;\n        refCallback(value);\n    } else {\n        const refObj = ref as MutableRefObject<any>;\n        refObj.current = value;\n    }\n};\n\nexport const createSyncJsComp = (compDetails: UserCompDetails): any => {\n    const promise = compDetails.newAgStackInstance();\n    if (!promise) { return; }\n    return promise.resolveNow(null, x => x); // js comps are never async\n};\n", "import {\n    Beans, Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from '@ag-grid-community/core';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridBodyComp from './gridBodyComp';\nimport useReactCommentEffect from './reactComment';\nimport TabGuardComp, { TabGuardCompCallback } from './tabGuardComp';\nimport { classesList } from './utils';\n\ninterface GridCompProps {\n    context: Context;\n}\n\nconst GridComp = ({ context }: GridCompProps) => {\n\n    const [rtlClass, setRtlClass] = useState<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = useState<string>('');\n    const [layoutClass, setLayoutClass] = useState<string>('');\n    const [cursor, setCursor] = useState<string | null>(null);\n    const [userSelect, setUserSelect] = useState<string | null>(null);\n    const [initialised, setInitialised] = useState<boolean>(false);\n    const [tabGuardReady, setTabGuardReady] = useState<any>();\n\n    const gridCtrlRef = useRef<GridCtrl | null>(null);\n    const eRootWrapperRef = useRef<HTMLDivElement | null>(null);\n    const tabGuardRef = useRef<TabGuardCompCallback>();\n    // eGridBodyParent is state as we use it in render\n    const [eGridBodyParent,setGridBodyParent] = useState<HTMLDivElement | null>(null);\n\n    const focusInnerElementRef = useRef<((fromBottom?: boolean) => void)>(() => undefined);\n\n    const onTabKeyDown = useCallback(() => undefined, []);\n\n    const beans = useMemo(() => {\n        if (context.isDestroyed()) { return null; }\n        return context.getBean('beans') as Beans;\n    }, [context]);\n\n    useReactCommentEffect(' AG Grid ', eRootWrapperRef);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eRootWrapperRef.current = e;\n\n        if (!eRootWrapperRef.current) {\n            context.destroyBean(gridCtrlRef.current);\n            gridCtrlRef.current = null;\n            return;\n        }\n\n        if (context.isDestroyed()) {\n            return;\n        }\n\n        gridCtrlRef.current = context.createBean(new GridCtrl());\n        const gridCtrl = gridCtrlRef.current;\n\n        focusInnerElementRef.current = gridCtrl.focusInnerElement.bind(gridCtrl);\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            forceFocusOutOfContainer: (up?: boolean) => {\n                tabGuardRef.current?.forceFocusOutOfContainer(up);\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eRootWrapperRef.current?.querySelector('.ag-root');\n                const sideBarEl = eRootWrapperRef.current?.querySelector('.ag-side-bar:not(.ag-hidden)');\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eRootWrapperRef.current, eRootWrapperRef.current);\n\n        setInitialised(true);\n\n    }, []);\n\n    // initialise the extra components\n    useEffect(() => {\n        if (!tabGuardReady || !beans || !gridCtrlRef.current || !eGridBodyParent || !eRootWrapperRef.current) { return; }\n\n        const gridCtrl = gridCtrlRef.current;\n        const beansToDestroy: any[] = [];\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n        const eRootWrapper = eRootWrapperRef.current;\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const eGui = headerDropZonesComp.getGui();\n            eRootWrapper.insertAdjacentElement('afterbegin', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const eGui = sideBarComp.getGui();\n            const bottomTabGuard = eGridBodyParent.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', eGui);\n                additionalEls.push(eGui);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const eGui = statusBarComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const eGui = paginationComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const eGui = watermarkComp.getGui();\n            eRootWrapper.insertAdjacentElement('beforeend', eGui);\n            additionalEls.push(eGui);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        }\n    }, [tabGuardReady, eGridBodyParent, beans])\n\n    const rootWrapperClasses = useMemo(()=> classesList('ag-root-wrapper', rtlClass, keyboardFocusClass, layoutClass), [rtlClass, keyboardFocusClass, layoutClass]);\n    const rootWrapperBodyClasses = useMemo(() => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass), [layoutClass]);\n\n    const topStyle: React.CSSProperties = useMemo(() => ({\n        userSelect: userSelect != null ? (userSelect as any) : '',\n        WebkitUserSelect: userSelect != null ? (userSelect as any) : '',\n        cursor: cursor != null ? cursor : ''\n    }), [userSelect, cursor]);\n\n\n    const setTabGuardCompRef = useCallback((ref: TabGuardCompCallback) => {\n        tabGuardRef.current = ref;\n        setTabGuardReady(ref !== null);\n    }, []);\n    \n    return (\n        <div ref={setRef} className={rootWrapperClasses} style={topStyle} role=\"presentation\">\n            <div className={ rootWrapperBodyClasses } ref={ setGridBodyParent } role=\"presentation\">\n                {initialised && eGridBodyParent && beans &&\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardCompRef }\n                            eFocusableElement= { eGridBodyParent }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrlRef.current! }\n                            forceFocusOutWhenTabGuardsAreEmpty={ true }>\n                        { // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                        // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                        // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                        // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                        // hangs the UI)\n                            <GridBodyComp/>\n                        }\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default memo(GridComp);\n", "import { CssClassManager, GridBodyCtrl, IGridBodyComp, RowContainerName, _ } from '@ag-grid-community/core';\nimport React, { memo, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridHeaderComp from './header/gridHeaderComp';\nimport useReactCommentEffect from './reactComment';\nimport RowContainerComp from './rows/rowContainerComp';\nimport { classesList } from './utils';\n\ninterface SectionProperties {\n    section: React.RefObject<HTMLDivElement>;\n    className: string;\n    style?: React.CSSProperties;\n}\n\nconst GridBodyComp = () => {\n\n    const { context, agStackComponentsRegistry, resizeObserverService } = useContext(BeansContext);\n\n    const [rowAnimationClass, setRowAnimationClass] = useState<string>('');\n    const [topHeight, setTopHeight] = useState<number>(0);\n    const [bottomHeight, setBottomHeight] = useState<number>(0);\n    const [stickyTopHeight, setStickyTopHeight] = useState<string>('0px');\n    const [stickyTopTop, setStickyTopTop] = useState<string>('0px');\n    const [stickyTopWidth, setStickyTopWidth] = useState<string>('100%');\n    const [topDisplay, setTopDisplay] = useState<string>('');\n    const [bottomDisplay, setBottomDisplay] = useState<string>('');\n\n    const [forceVerticalScrollClass, setForceVerticalScrollClass] = useState<string | null>(null);\n    const [topAndBottomOverflowY, setTopAndBottomOverflowY] = useState<string>('');\n    const [cellSelectableCss, setCellSelectableCss] = useState<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [layoutClass, setLayoutClass] = useState<string>('ag-layout-normal');\n\n    let cssClassManager = useRef<CssClassManager>();\n    if (!cssClassManager.current) {\n        cssClassManager.current = new CssClassManager(() => eRoot.current);\n    }\n\n    const eRoot = useRef<HTMLDivElement | null>(null);\n    const eTop = useRef<HTMLDivElement>(null);\n    const eStickyTop = useRef<HTMLDivElement>(null);\n    const eBody = useRef<HTMLDivElement>(null);\n    const eBodyViewport = useRef<HTMLDivElement>(null);\n    const eBottom = useRef<HTMLDivElement>(null);\n\n    const beansToDestroy = useRef<any[]>([]);\n    const destroyFuncs = useRef<(() => void)[]>([]);\n\n    useReactCommentEffect(' AG Grid Body ', eRoot);\n    useReactCommentEffect(' AG Pinned Top ', eTop);\n    useReactCommentEffect(' AG Sticky Top ', eStickyTop);\n    useReactCommentEffect(' AG Middle ', eBodyViewport);\n    useReactCommentEffect(' AG Pinned Bottom ', eBottom);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eRoot.current = e;\n        if (!eRoot.current) {\n            context.destroyBeans(beansToDestroy.current);\n            destroyFuncs.current.forEach(f => f());\n\n            beansToDestroy.current = [];\n            destroyFuncs.current = [];\n\n            return;\n        }\n\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            beansToDestroy.current.push(comp);\n            return comp;\n        };\n\n        const attachToDom = (eParent: HTMLElement, eChild: HTMLElement | Comment) => {\n            eParent.appendChild(eChild);\n            destroyFuncs.current.push(() => eParent.removeChild(eChild));\n        }\n\n        attachToDom(eRoot.current, document.createComment(' AG Fake Horizontal Scroll '));\n        attachToDom(eRoot.current, newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n\n        attachToDom(eRoot.current, document.createComment(' AG Overlay Wrapper '));\n        attachToDom(eRoot.current, newComp('AG-OVERLAY-WRAPPER').getGui());\n\n        if (eBody.current) {\n            attachToDom(eBody.current, document.createComment(' AG Fake Vertical Scroll '));\n            attachToDom(eBody.current, newComp('AG-FAKE-VERTICAL-SCROLL').getGui());\n        }\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: count => {\n                if (eRoot.current) {\n                    _.setAriaColCount(eRoot.current, count)\n                }\n            } ,\n            setRowCount: count => {\n                if (eRoot.current) {\n                    _.setAriaRowCount(eRoot.current, count);\n                }\n            },\n            setTopHeight,\n            setBottomHeight,\n            setStickyTopHeight,\n            setStickyTopTop,\n            setStickyTopWidth,\n            setTopDisplay,\n            setBottomDisplay,\n            setColumnMovingCss: (cssClass, flag) => cssClassManager.current!.addOrRemoveCssClass(cssClass, flag),\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: (cssClass, flag) => setCellSelectableCss(flag ? cssClass : null),\n            setBodyViewportWidth: (width) => {\n                if (eBodyViewport.current) {\n                    eBodyViewport.current.style.width = width;\n                }\n            },\n            registerBodyViewportResizeListener: listener => {\n                if (eBodyViewport.current) {\n                    const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current, listener);\n                    destroyFuncs.current.push(() => unsubscribeFromResize());\n                }\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        beansToDestroy.current.push(ctrl);\n        ctrl.setComp(\n            compProxy,\n            eRoot.current,\n            eBodyViewport.current!,\n            eTop.current!,\n            eBottom.current!,\n            eStickyTop.current!\n        );\n\n    }, []);\n\n    const rootClasses = useMemo(() =>\n        classesList('ag-root', 'ag-unselectable', layoutClass),\n        [layoutClass]\n    );\n    const bodyViewportClasses = useMemo(() =>\n        classesList('ag-body-viewport', rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss), \n        [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]\n    );\n    const bodyClasses = useMemo(() =>\n        classesList('ag-body', layoutClass), \n        [layoutClass]\n    );\n    const topClasses = useMemo(() =>\n        classesList('ag-floating-top', cellSelectableCss), \n        [cellSelectableCss]\n    );\n    const stickyTopClasses = useMemo(() =>\n        classesList('ag-sticky-top', cellSelectableCss), \n        [cellSelectableCss]\n    );\n    const bottomClasses = useMemo(() =>\n        classesList('ag-floating-bottom', cellSelectableCss),\n        [cellSelectableCss]\n    );\n\n    const topStyle: React.CSSProperties = useMemo(() => ({\n        height: topHeight,\n        minHeight: topHeight,\n        display: topDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [topHeight, topDisplay, topAndBottomOverflowY]);\n\n    const stickyTopStyle: React.CSSProperties = useMemo(() => ({\n        height: stickyTopHeight,\n        top: stickyTopTop,\n        width: stickyTopWidth\n    }), [stickyTopHeight, stickyTopTop, stickyTopWidth]);\n\n    const bottomStyle: React.CSSProperties = useMemo(()=> ({\n        height: bottomHeight,\n        minHeight: bottomHeight,\n        display: bottomDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [bottomHeight, bottomDisplay, topAndBottomOverflowY]);\n\n    const createRowContainer = (container: RowContainerName) => <RowContainerComp name={ container } key={`${container}-container`} />;\n    const createSection = ({\n        section,\n        children,\n        className,\n        style\n    }: SectionProperties & { children: RowContainerName[] }) => (\n        <div ref={ section } className={ className } role=\"presentation\" style={ style }>\n            { children.map(createRowContainer) }\n        </div>\n    );\n\n    return (\n        <div ref={setRef} className={rootClasses} role=\"treegrid\">\n            <GridHeaderComp/>\n            { createSection({ section: eTop, className: topClasses, style: topStyle, children: [\n                RowContainerName.TOP_LEFT,\n                RowContainerName.TOP_CENTER,\n                RowContainerName.TOP_RIGHT,\n                RowContainerName.TOP_FULL_WIDTH,\n            ]}) }\n            <div className={bodyClasses} ref={eBody} role=\"presentation\">\n                { createSection({ section: eBodyViewport, className: bodyViewportClasses, \n                    children: [\n                    RowContainerName.LEFT,\n                    RowContainerName.CENTER,\n                    RowContainerName.RIGHT,\n                    RowContainerName.FULL_WIDTH,\n                ]}) }\n            </div>\n            { createSection({ section: eStickyTop, className: stickyTopClasses, style: stickyTopStyle, children: [\n                RowContainerName.STICKY_TOP_LEFT,\n                RowContainerName.STICKY_TOP_CENTER,\n                RowContainerName.STICKY_TOP_RIGHT,\n                RowContainerName.STICKY_TOP_FULL_WIDTH,\n            ]}) }\n            { createSection({ section: eBottom, className: bottomClasses, style: bottomStyle, children: [\n                RowContainerName.BOTTOM_LEFT,\n                RowContainerName.BOTTOM_CENTER,\n                RowContainerName.BOTTOM_RIGHT,\n                RowContainerName.BOTTOM_FULL_WIDTH,\n            ]}) }\n        </div>\n    );\n};\n\nexport default memo(GridBodyComp);\n", "import React, { memo, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport {\n    IGridHeaderComp, GridHeaderCtrl,\n} from '@ag-grid-community/core';\nimport { CssClasses } from '../utils';\nimport HeaderRowContainerComp from './headerRowContainerComp';\n\nconst GridHeaderComp = () => {\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [height, setHeight] = useState<string>();\n\n    const {context} = useContext(BeansContext);\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const gridCtrlRef = useRef<GridHeaderCtrl | null>(null);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!e) {\n            context.destroyBean(gridCtrlRef.current!);\n            gridCtrlRef.current = null;\n            return;\n        }\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setHeightAndMinHeight: height => setHeight(height)\n        };\n\n        gridCtrlRef.current = context.createBean(new GridHeaderCtrl());\n        gridCtrlRef.current.setComp(compProxy, eGui.current, eGui.current);\n    }, []);\n\n    const className = useMemo( ()=> {\n        let res = cssClasses.toString();\n        return 'ag-header ' + res;\n    }, [cssClasses]);\n\n    const style = useMemo( ()=> ({\n        height: height,\n        minHeight: height\n    }), [height]);\n\n    return (\n        <div ref={setRef} className={className} style={style} role=\"presentation\">\n            <HeaderRowContainerComp pinned={'left'} />\n            <HeaderRowContainerComp pinned={null}/>\n            <HeaderRowContainerComp pinned={'right'} />\n        </div>\n    );\n};\n\nexport default memo(GridHeaderComp);\n", "import React, { memo, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport {\n    IHeaderRowContainerComp, HeaderRowCtrl, HeaderRowContainerCtrl, ColumnPinnedType\n} from '@ag-grid-community/core';\nimport HeaderRowComp from './headerRowComp';\n\n\nconst HeaderRowContainerComp = (props: { pinned: ColumnPinnedType }) => {\n\n    const [displayed, setDisplayed] = useState<true | false>(true);\n    const [headerRowCtrls, setHeaderRowCtrls] = useState<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const eCenterContainer = useRef<HTMLDivElement>(null);\n    const headerRowCtrlRef = useRef<HeaderRowContainerCtrl | null>(null);\n\n    const pinnedLeft = props.pinned === 'left';\n    const pinnedRight = props.pinned === 'right';\n    const centre = !pinnedLeft && !pinnedRight;\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n            context.destroyBean(headerRowCtrlRef.current);\n            headerRowCtrlRef.current = null;\n            return;\n        }\n\n        const compProxy: IHeaderRowContainerComp = {\n            setDisplayed,\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => {\n                if (eCenterContainer.current) {\n                    eCenterContainer.current.style.width = width;\n                }\n            },\n            setViewportScrollLeft: left => {\n                if (eGui.current) {\n                    eGui.current.scrollLeft = left;\n                }\n            },\n\n            // pinned only\n            setPinnedContainerWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                    eGui.current.style.minWidth = width;\n                    eGui.current.style.maxWidth = width;\n                }\n            }\n        };\n\n        headerRowCtrlRef.current = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        headerRowCtrlRef.current.setComp(compProxy, eGui.current);\n\n    }, []);\n\n    const className = !displayed ? 'ag-hidden' : '';\n\n    const insertRowsJsx = () => headerRowCtrls.map( ctrl => <HeaderRowComp ctrl={ctrl} key={ctrl.getInstanceId()} /> );\n\n    return (\n        <>\n            {\n                pinnedLeft && \n                <div ref={setRef} className={\"ag-pinned-left-header \" + className} aria-hidden={!displayed} role=\"rowgroup\">\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={setRef} className={\"ag-pinned-right-header \" + className} aria-hidden={!displayed} role=\"rowgroup\">\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={setRef} className={\"ag-header-viewport \" + className} role=\"presentation\">\n                        <div ref={eCenterContainer} className={\"ag-header-container\"} role=\"rowgroup\">\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default memo(HeaderRowContainerComp);\n", "import { AbstractHeaderCellCtrl, HeaderGroupCellCtrl, HeaderCellCtrl, HeaderFilterCellCtrl, HeaderRowCtrl, HeaderRowType, IHeaderRowComp, _ } from '@ag-grid-community/core';\nimport React, { memo, useCallback, useMemo, useRef, useState } from 'react';\nimport HeaderCellComp from './headerCellComp';\nimport HeaderGroupCellComp from './headerGroupCellComp';\nimport HeaderFilterCellComp from './headerFilterCellComp';\nimport { agFlushSync, getNextValueIfDifferent } from '../utils';\n\nconst HeaderRowComp = (props: {ctrl: HeaderRowCtrl}) => {\n\n    const { ctrl } = props;\n\n    const { topOffset, rowHeight } = useMemo(() => ctrl.getTopAndHeight(), []);\n    const ariaRowIndex = ctrl.getAriaRowIndex();\n    const className = ctrl.getHeaderRowClass();\n\n    const [height, setHeight] = useState<string>(() => rowHeight + 'px');\n    const [top, setTop] = useState<string>(() => topOffset + 'px');\n    const [cellCtrls, setCellCtrls] = useState<AbstractHeaderCellCtrl[]>(() => ctrl.getHeaderCtrls());\n\n    const eGui = useRef<HTMLDivElement | null>(null);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!e) {\n            return;\n        }\n\n        const compProxy: IHeaderRowComp = {\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: (ctrls, forceOrder, afterScroll) =>{\n                agFlushSync(afterScroll, () => {\n                    setCellCtrls(prev => getNextValueIfDifferent(prev, ctrls, forceOrder)!)\n                });\n            },\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n        };\n\n        ctrl.setComp(compProxy, false);\n    }, []);\n\n    const style = useMemo( ()=> ({\n        height: height,\n        top: top,\n    }), [height, top]);\n\n\n    const createCellJsx = useCallback( (cellCtrl: AbstractHeaderCellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP :\n                return <HeaderGroupCellComp ctrl={cellCtrl as HeaderGroupCellCtrl} key={cellCtrl.getInstanceId()} />;\n\n            case HeaderRowType.FLOATING_FILTER :\n                return <HeaderFilterCellComp ctrl={cellCtrl as HeaderFilterCellCtrl} key={cellCtrl.getInstanceId()} />;\n                \n            default :\n                return <HeaderCellComp ctrl={cellCtrl as HeaderCellCtrl} key={cellCtrl.getInstanceId()} />;\n        }\n    }, []);\n\n    return (\n        <div ref={setRef} className={className} role=\"row\" style={style} aria-rowindex={ariaRowIndex}>\n            { cellCtrls.map( createCellJsx ) }\n        </div>\n    );\n};\n\nexport default memo(HeaderRowComp);\n", "import React, { memo, useCallback, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails, _ } from '@ag-grid-community/core';\nimport { isComponentStateless } from '../utils';\nimport { showJsComp } from '../jsComp';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl}) => {\n\n    const { ctrl } = props;\n    const isAlive = ctrl.isAlive();\n\n    const { context } = useContext(BeansContext);\n    const colId = isAlive ? ctrl.getColId() : undefined;\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n    const eHeaderCompWrapper = useRef<HTMLDivElement>(null);\n    const userCompRef = useRef<IHeader>();\n\n    let cssClassManager = useRef<CssClassManager>();\n    if (isAlive && !cssClassManager.current) {\n        cssClassManager.current = new CssClassManager(() => eGui.current);\n    }\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current || !isAlive) {\n            return;\n        }\n\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n            addOrRemoveCssClass: (name, on) => cssClassManager.current!.addOrRemoveCssClass(name, on),\n            setAriaSort: sort => {\n                if (eGui.current) {\n                    sort ? _.setAriaSort(eGui.current, sort) : _.removeAriaSort(eGui.current)\n                }\n            },\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: () => userCompRef.current || undefined\n        };\n\n        ctrl.setComp(compProxy, eGui.current, eResize.current!, eHeaderCompWrapper.current!);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.current?.insertAdjacentElement('afterend', selectAllGui);\n    }, []);\n\n    // js comps\n    useLayoutEffect(() => showJsComp(userCompDetails, context, eHeaderCompWrapper.current!, userCompRef), [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(() => {\n        ctrl.setDragSource(eGui.current!);\n    }, [userCompDetails]);\n\n    const userCompStateless = useMemo(() => {\n        const res = userCompDetails?.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div\n            ref={setRef}\n            className=\"ag-header-cell\"\n            col-id={colId}\n            role=\"columnheader\"\n        >\n            <div ref={eResize} className=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref={eHeaderCompWrapper} className=\"ag-header-cell-comp-wrapper\" role=\"presentation\">\n            { reactUserComp && userCompStateless && <UserCompClass { ...userCompDetails!.params } /> }\n            { reactUserComp && !userCompStateless && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef }/> }\n            </div>\n        </div>\n    );\n};\n\nexport default memo(HeaderCellComp);\n", "import { HeaderGroupCellCtrl, IHeaderGroupCellComp, IHeaderGroupComp, UserCompDetails } from '@ag-grid-community/core';\nimport React, { memo, useCallback, useContext, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { showJsComp } from '../jsComp';\nimport { CssClasses, isComponentStateless } from '../utils';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n\n    const {context} = useContext(BeansContext);\n    const { ctrl } = props;\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [cssResizableClasses, setResizableCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [resizableAriaHidden, setResizableAriaHidden] = useState<\"true\" | \"false\">(\"false\");\n    const [ariaExpanded, setAriaExpanded] = useState<'true'|'false'|undefined>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n    const colId = useMemo(() => ctrl.getColId(), []);\n\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n    const userCompRef = useRef<IHeaderGroupComp>();\n\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n            return;\n        }\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            setResizableDisplayed: (displayed) => {\n                setResizableCssClasses(prev => prev.setClass('ag-hidden', !displayed))\n                setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setAriaExpanded: expanded => setAriaExpanded(expanded),\n            getUserCompInstance: () => userCompRef.current || undefined,\n        };\n\n        ctrl.setComp(compProxy, eGui.current, eResize.current!);\n\n    }, []);\n\n    // js comps\n    useLayoutEffect(() => showJsComp(userCompDetails, context, eGui.current!), [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(()=> {\n        if (eGui.current) {\n            ctrl.setDragSource(eGui.current);\n        }\n    }, [userCompDetails]);\n\n    const userCompStateless = useMemo(() => {\n        const res = userCompDetails?.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n    const className = useMemo( ()=> 'ag-header-group-cell ' + cssClasses.toString(), [cssClasses] );\n    const resizableClassName = useMemo( ()=> 'ag-header-cell-resize ' + cssResizableClasses.toString(), [cssResizableClasses] );\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={setRef} className={className} col-id={colId} \n                    role=\"columnheader\" aria-expanded={ariaExpanded}>\n            { reactUserComp && userCompStateless && <UserCompClass { ...userCompDetails!.params } /> }\n            { reactUserComp && !userCompStateless && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef } /> }\n            <div ref={eResize} aria-hidden={resizableAriaHidden} className={resizableClassName}></div>\n        </div>\n    );\n};\n\nexport default memo(HeaderGroupCellComp);", "import React, { memo, useCallback, useContext, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { CssClasses, isComponentStateless } from '../utils';\nimport { showJsComp } from '../jsComp';\nimport { FloatingFilterComponentProxy } from '../../shared/customComp/floatingFilterComponentProxy';\nimport { CustomContext } from '../../shared/customComp/customContext';\nimport { CustomFloatingFilterCallbacks } from '../../shared/customComp/interfaces';\nimport { warnReactiveCustomComponents } from '../../shared/customComp/util';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const { context, gridOptionsService } = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(() => new CssClasses('ag-header-cell', 'ag-floating-filter'));\n    const [cssBodyClasses, setBodyCssClasses] = useState<CssClasses>(() => new CssClasses());\n    const [cssButtonWrapperClasses, setButtonWrapperCssClasses] = useState<CssClasses>(() => new CssClasses('ag-floating-filter-button', 'ag-hidden'));\n    const [buttonWrapperAriaHidden, setButtonWrapperAriaHidden] = useState<\"true\" | \"false\">(\"false\");\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails | null>();\n    const [renderKey, setRenderKey] = useState<number>(1);\n\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const eFloatingFilterBody = useRef<HTMLDivElement>(null);\n    const eButtonWrapper = useRef<HTMLDivElement>(null);\n    const eButtonShowMainFilter = useRef<HTMLButtonElement>(null);\n\n    const userCompResolve = useRef<(value: IFloatingFilter)=>void>();  \n    const userCompPromise = useRef<AgPromise<IFloatingFilter>>();\n    \n    const userCompRef = (value: IFloatingFilter) => {\n\n        // We skip when it's un-setting\n        if (value == null) {\n            return;\n        }\n\n        userCompResolve.current && userCompResolve.current(value);\n    };\n\n    const { ctrl } = props;\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n            return;\n        }\n\n        userCompPromise.current = new AgPromise<IFloatingFilter>(resolve => {\n            userCompResolve.current = resolve;\n        });\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            setButtonWrapperDisplayed: (displayed) => {\n                setButtonWrapperCssClasses(prev => prev.setClass('ag-hidden', !displayed))\n                setButtonWrapperAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setWidth: width => {\n                if (eGui.current) {\n                    eGui.current.style.width = width;\n                }\n            },\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompPromise.current ? userCompPromise.current :  null,\n            setMenuIcon: eIcon => eButtonShowMainFilter.current?.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui.current, eButtonShowMainFilter.current!, eFloatingFilterBody.current!);\n\n    }, []);\n\n\n    // js comps\n    useLayoutEffect(() => showJsComp(userCompDetails, context, eFloatingFilterBody.current!, userCompRef), [userCompDetails]);\n\n    const className = useMemo(() => cssClasses.toString(), [cssClasses] );\n    const bodyClassName = useMemo(() => cssBodyClasses.toString(), [cssBodyClasses] );\n    const buttonWrapperClassName = useMemo(() => cssButtonWrapperClasses.toString(), [cssButtonWrapperClasses] );\n\n    const userCompStateless = useMemo(() => {\n        const res = userCompDetails \n                    && userCompDetails.componentFromFramework \n                    && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n\n    const reactiveCustomComponents = useMemo(() => gridOptionsService.get('reactiveCustomComponents'), []);\n    const floatingFilterCompProxy = useMemo(() => {\n        if (userCompDetails) {\n            if (reactiveCustomComponents) {\n                const compProxy = new FloatingFilterComponentProxy(userCompDetails!.params, () => setRenderKey(prev => prev + 1));\n                userCompRef(compProxy);\n                return compProxy;\n            } else if (userCompDetails.componentFromFramework) {\n                warnReactiveCustomComponents();\n            }\n        }\n        return undefined;\n    }, [userCompDetails]);\n    const floatingFilterProps = floatingFilterCompProxy?.getProps();\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={setRef} className={className} role=\"gridcell\">\n            <div ref={eFloatingFilterBody} className={bodyClassName} role=\"presentation\">\n                { reactUserComp && !reactiveCustomComponents && <UserCompClass { ...userCompDetails!.params } ref={ userCompStateless ? () => {} : userCompRef }/> }\n                { reactUserComp && reactiveCustomComponents && <CustomContext.Provider value={{\n                    setMethods: (methods: CustomFloatingFilterCallbacks) => floatingFilterCompProxy!.setMethods(methods)\n                }}>\n                    <UserCompClass { ...floatingFilterProps! }/>\n                </CustomContext.Provider> }\n            </div>\n            <div ref={eButtonWrapper} aria-hidden={buttonWrapperAriaHidden} className={buttonWrapperClassName} role=\"presentation\">\n                <button ref={eButtonShowMainFilter} type=\"button\" className=\"ag-button ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(HeaderFilterCellComp);", "import { AgPromise, ICellEditor, IFilter, IStatusPanel, IToolPanel, _ } from \"@ag-grid-community/core\";\n\n/**\n * Function to retrieve the React component from an instance returned by the grid.\n * @param wrapperComponent Instance component from the grid\n * @param callback Callback which is provided the underlying React custom component\n */\nexport function getInstance<\n    TGridComponent extends IFilter | IToolPanel | ICellEditor | IStatusPanel = IFilter | IToolPanel | ICellEditor | IStatusPanel,\n    TCustomComponent extends TGridComponent = TGridComponent\n>(wrapperComponent: TGridComponent, callback: (customComponent: TCustomComponent | undefined) => void): void {\n    const promise = (wrapperComponent as any)?.getInstance?.() ?? AgPromise.resolve(undefined);\n    promise.then((comp: TCustomComponent | undefined) => callback(comp));\n}\n\nexport function warnReactiveCustomComponents(): void {\n    _.warnOnce('Using custom components without `reactiveCustomComponents = true` is deprecated.');\n}\n", "import { RefObject, useEffect } from 'react';\n\nconst useReactCommentEffect = (comment: string, eForCommentRef: RefObject<HTMLElement>) => {\n    useEffect(() => {\n        const eForComment = eForCommentRef.current;\n        if (eForComment) {\n            const eParent = eForComment.parentElement;\n            if (eParent) {\n                const eComment = document.createComment(comment);\n                eParent.insertBefore(eComment, eForComment);\n\n                return () => {\n                    eParent.removeChild(eComment);\n                };\n            }\n        }\n    }, [comment]);\n};\n\nexport default useReactCommentEffect;", "import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport React, { useMemo, useRef, useState, memo, useContext, useCallback } from 'react';\nimport { agFlushSync, classesList, getNextValueIfDifferent } from '../utils';\nimport useReactCommentEffect from '../reactComment';\nimport RowComp from './rowComp';\nimport { BeansContext } from '../beansContext';\n\nconst RowContainerComp = (params: {name: RowContainerName}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const { name } = params;\n    const containerType = useMemo(() => getRowContainerTypeForName(name), [name]);\n\n    const eViewport = useRef<HTMLDivElement | null>(null);\n    const eContainer = useRef<HTMLDivElement | null>(null);\n\n    const rowCtrlsRef = useRef<RowCtrl[]>([]);\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = useState<RowCtrl[]>(() => []);\n    const domOrderRef = useRef<boolean>(false);\n    const rowContainerCtrlRef = useRef<RowContainerCtrl | null>();\n\n    const cssClasses = useMemo(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n    const viewportClasses = useMemo(() => classesList(cssClasses.viewport), [cssClasses]);\n    const containerClasses = useMemo(() => classesList(cssClasses.container), [cssClasses]);\n\n    // no need to useMemo for boolean types\n    const centerTemplate = name === RowContainerName.CENTER\n        || name === RowContainerName.TOP_CENTER\n        || name === RowContainerName.BOTTOM_CENTER\n        || name === RowContainerName.STICKY_TOP_CENTER;\n\n    const topLevelRef = centerTemplate ? eViewport : eContainer;\n\n    useReactCommentEffect(' AG Row Container ' + name + ' ', topLevelRef);\n\n    const areElementsReady = useCallback(() => {\n        if (centerTemplate) {\n            return eViewport.current != null && eContainer.current != null;\n        }\n        return eContainer.current != null;\n    }, []);\n\n    const areElementsRemoved = useCallback(() => {\n        if (centerTemplate) {\n            return eViewport.current == null && eContainer.current == null;\n        }\n        return eContainer.current == null;\n    }, []);\n\n    const setRef = useCallback(() => {\n        if (areElementsRemoved()) {\n            context.destroyBean(rowContainerCtrlRef.current);\n            rowContainerCtrlRef.current = null;\n        }\n        if (areElementsReady()) {\n\n            const updateRowCtrlsOrdered = (useFlushSync: boolean) => {\n                agFlushSync(useFlushSync, () => {\n                    setRowCtrlsOrdered(prev => getNextValueIfDifferent(prev, rowCtrlsRef.current, domOrderRef.current)!);\n                });\n            }\n\n            const compProxy: IRowContainerComp = {\n                setViewportHeight: (height: string) => {\n                    if (eViewport.current) {\n                        eViewport.current.style.height = height;\n                    }\n                },\n                setRowCtrls: ({ rowCtrls, useFlushSync }) => {\n                    const useFlush = !!useFlushSync && rowCtrlsRef.current.length > 0 && rowCtrls.length > 0;\n                    // Keep a record of the rowCtrls in case we need to reset the Dom order.\n                    rowCtrlsRef.current = rowCtrls;\n                    updateRowCtrlsOrdered(useFlush);\n                },\n                setDomOrder: domOrder => {\n                    if (domOrderRef.current != domOrder) {\n                        domOrderRef.current = domOrder;\n                        updateRowCtrlsOrdered(false);\n                    }\n                },\n                setContainerWidth: width => {\n                    if (eContainer.current) {\n                        eContainer.current.style.width = width;\n                    }\n                }\n            }\n\n            rowContainerCtrlRef.current = context.createBean(new RowContainerCtrl(name));\n            rowContainerCtrlRef.current.setComp(compProxy, eContainer.current!, eViewport.current!);\n        }\n\n    }, [areElementsReady, areElementsRemoved]);\n\n    const setContainerRef = useCallback((e: HTMLDivElement) => { eContainer.current = e; setRef(); }, [setRef]);\n    const setViewportRef = useCallback((e: HTMLDivElement) => { eViewport.current = e; setRef(); }, [setRef]);\n\n    const buildContainer = () => (\n        <div\n            className={ containerClasses }\n            ref={setContainerRef}\n            role={ \"rowgroup\" }\n        >\n            {\n                rowCtrlsOrdered.map(rowCtrl =>\n                    <RowComp rowCtrl={ rowCtrl } containerType={ containerType } key={ rowCtrl.getInstanceId() }></RowComp>\n                )\n            }\n        </div>\n    );\n\n    return (\n        <>\n            {\n                centerTemplate ?\n                <div className={viewportClasses} ref={setViewportRef} role=\"presentation\">\n                    { buildContainer() }\n                </div> :\n                buildContainer()\n            }\n        </>\n    );\n};\n\nexport default memo(RowContainerComp);\n", "import React, { useEffect, useRef, useState, useMemo, memo, useContext, useLayoutEffect, useCallback } from 'react';\nimport { CellCtrl, RowContainerType, IRowComp, RowCtrl, UserCompDetails, ICellRenderer, CssClassManager, RowStyle } from '@ag-grid-community/core';\nimport { showJsComp } from '../jsComp';\nimport { isComponentStateless, getNextValueIfDifferent, agFlushSync } from '../utils';\nimport { BeansContext } from '../beansContext';\nimport CellComp from '../cells/cellComp';\n\nconst RowComp = (params: { rowCtrl: RowCtrl, containerType: RowContainerType }) => {\n\n    const { context, gridOptionsService } = useContext(BeansContext);\n    const { rowCtrl, containerType } = params;\n\n    const tabIndex = rowCtrl.getTabIndex();\n    const domOrderRef = useRef<boolean>(rowCtrl.getDomOrder());\n    const isFullWidth = rowCtrl.isFullWidth();\n    \n    // Flag used to avoid problematic initialState setter funcs being called on a dead / non displayed row. \n    // Due to async rendering its possible for the row to be destroyed before React has had a chance to render it.\n    const isDisplayed = rowCtrl.getRowNode().displayed; \n    const [rowIndex, setRowIndex] = useState<string | null>(() => isDisplayed ? rowCtrl.getRowIndex() : null);\n    const [rowId, setRowId] = useState<string | null>(() => rowCtrl.getRowId());\n    const [rowBusinessKey, setRowBusinessKey] = useState<string | null>(() => rowCtrl.getBusinessKey());\n\n    const [userStyles, setUserStyles] = useState<RowStyle | undefined>(() => rowCtrl.getRowStyles());\n    const [cellCtrls, setCellCtrls] = useState<CellCtrl[] | null>(() => null);\n    const [fullWidthCompDetails, setFullWidthCompDetails] = useState<UserCompDetails>();\n\n    // these styles have initial values, so element is placed into the DOM with them,\n    // rather than an transition getting applied.\n    const [top, setTop] = useState<string | undefined>(() => isDisplayed ? rowCtrl.getInitialRowTop(containerType) : undefined);\n    const [transform, setTransform] = useState<string | undefined>(() => isDisplayed ? rowCtrl.getInitialTransform(containerType) : undefined);\n\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const fullWidthCompRef = useRef<ICellRenderer>();\n\n    const autoHeightSetup = useRef<boolean>(false);\n    const [autoHeightSetupAttempt, setAutoHeightSetupAttempt] = useState<number>(0);\n\n    // puts autoHeight onto full with detail rows. this needs trickery, as we need\n    // the HTMLElement for the provided Detail Cell Renderer, however the Detail Cell Renderer\n    // could be a stateless React Func Comp which won't work with useRef, so we need\n    // to poll (we limit to 10) looking for the Detail HTMLElement (which will be the only\n    // child) after the fullWidthCompDetails is set.\n    // I think this looping could be avoided if we use a ref Callback instead of useRef,\n    useEffect(() => {\n        if (autoHeightSetup.current) { return; }\n        if (!fullWidthCompDetails) { return; }\n        if (autoHeightSetupAttempt > 10) { return; }\n\n        const eChild = eGui.current?.firstChild as HTMLElement;\n        if (eChild) {\n            rowCtrl.setupDetailRowAutoHeight(eChild);\n            autoHeightSetup.current = true;\n        } else {\n            setAutoHeightSetupAttempt(prev => prev + 1);\n        }\n\n    }, [fullWidthCompDetails, autoHeightSetupAttempt]);\n\n    let cssClassManager = useRef<CssClassManager>();\n    if (!cssClassManager.current) {\n        cssClassManager.current = new CssClassManager(() => eGui.current);\n    }\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n\n        if (!eGui.current) {\n            rowCtrl.unsetComp(containerType);\n            return;\n        }\n        \n        // because React is asynchronous, it's possible the RowCtrl is no longer a valid RowCtrl. This can\n        // happen if user calls two API methods one after the other, with the second API invalidating the rows\n        // the first call created. Thus the rows for the first call could still get created even though no longer needed.\n        if (!rowCtrl.isAlive()) { return; }\n        \n        const compProxy: IRowComp = {\n            // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n            // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n            setTop,\n            setTransform,\n\n            // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n            // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n            addOrRemoveCssClass: (name, on) => cssClassManager.current!.addOrRemoveCssClass(name, on),\n\n            setDomOrder: domOrder => domOrderRef.current = domOrder,\n            setRowIndex,\n            setRowId,\n            setRowBusinessKey,\n            setUserStyles,\n            // if we don't maintain the order, then cols will be ripped out and into the dom\n            // when cols reordered, which would stop the CSS transitions from working\n            setCellCtrls: (next, useFlushSync) => {\n                agFlushSync(useFlushSync, () => {\n                    setCellCtrls(prev => getNextValueIfDifferent(prev, next, domOrderRef.current));\n                });\n            },\n            showFullWidth: compDetails => setFullWidthCompDetails(compDetails),\n            getFullWidthCellRenderer: () => fullWidthCompRef.current,\n            refreshFullWidth: getUpdatedParams => {\n                if (canRefreshFullWidthRef.current) {\n                    setFullWidthCompDetails(prevFullWidthCompDetails => ({\n                        ...prevFullWidthCompDetails!,\n                        params: getUpdatedParams()\n                    }));\n                    return true;\n                } else {\n                    if (!fullWidthCompRef.current || !fullWidthCompRef.current.refresh) {\n                        return false;\n                    }\n                    return fullWidthCompRef.current.refresh(getUpdatedParams());\n                }\n            }\n        };\n        rowCtrl.setComp(compProxy, eGui.current, containerType);\n\n    }, []);\n\n    useLayoutEffect(() => showJsComp(fullWidthCompDetails, context, eGui.current!, fullWidthCompRef), [fullWidthCompDetails]);\n\n    const rowStyles = useMemo(() => {\n        const res = { top, transform };\n\n        Object.assign(res, userStyles);\n        return res;\n    }, [top, transform, userStyles]);\n\n    const showFullWidthFramework = isFullWidth && fullWidthCompDetails && fullWidthCompDetails.componentFromFramework;\n    const showCells = !isFullWidth && cellCtrls != null;\n\n    const reactFullWidthCellRendererStateless = useMemo(() => {\n        const res = fullWidthCompDetails?.componentFromFramework && isComponentStateless(fullWidthCompDetails.componentClass);\n        return !!res;\n    }, [fullWidthCompDetails]);\n\n    // needs to be a ref to avoid stale closure, as used in compProxy passed to row ctrl\n    const canRefreshFullWidthRef = useRef(false);\n    useEffect(() => {\n        canRefreshFullWidthRef.current = reactFullWidthCellRendererStateless && !!fullWidthCompDetails && !!gridOptionsService.get('reactiveCustomComponents');\n    }, [reactFullWidthCellRendererStateless, fullWidthCompDetails]);\n\n    const showCellsJsx = () => cellCtrls?.map(cellCtrl => (\n        <CellComp\n            cellCtrl={cellCtrl}\n            editingRow={rowCtrl.isEditing()}\n            printLayout={rowCtrl.isPrintLayout()}\n            key={cellCtrl.getInstanceId()}\n        />\n    ));\n\n    const showFullWidthFrameworkJsx = () => {\n        const FullWidthComp = fullWidthCompDetails!.componentClass;\n        return (\n            <>\n                {\n                    reactFullWidthCellRendererStateless\n                    && <FullWidthComp  {...fullWidthCompDetails!.params} />\n                }\n                {\n                    !reactFullWidthCellRendererStateless\n                    && <FullWidthComp  {...fullWidthCompDetails!.params} ref={fullWidthCompRef} />\n                }\n            </>\n        );\n    };\n\n    return (\n        <div\n            ref={setRef}\n            role={'row'}\n            style={rowStyles}\n            row-index={ rowIndex }\n            row-id={ rowId }\n            row-business-key={ rowBusinessKey }\n            tabIndex={tabIndex}\n        >\n            {showCells && showCellsJsx()}\n            {showFullWidthFramework && showFullWidthFrameworkJsx()}\n        </div>\n    );\n};\n\nexport default memo(RowComp);\n", "import { CellCtrl, Component, ICellComp, ICellEditor, ICellRendererComp, UserCompDetails, _, ICellEditorComp, CssClassManager, CellStyle } from '@ag-grid-community/core';\nimport React, { MutableRefObject, useCallback, useRef, useState, useMemo, memo, useContext, useLayoutEffect } from 'react';\nimport { isComponentStateless } from '../utils';\nimport PopupEditorComp from './popupEditorComp';\nimport useJsCellRenderer from './showJsRenderer';\nimport { BeansContext } from '../beansContext';\nimport { createSyncJsComp } from '../jsComp';\nimport { CellEditorComponentProxy } from '../../shared/customComp/cellEditorComponentProxy';\nimport { CustomContext } from '../../shared/customComp/customContext';\nimport { CustomCellEditorCallbacks } from '../../shared/customComp/interfaces';\nimport { warnReactiveCustomComponents } from '../../shared/customComp/util';\n\nexport enum CellCompState { ShowValue, EditValue }\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using React, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid React cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as React needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using React, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid React cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as React needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\nconst jsxEditorProxy = (\n    editDetails: EditDetails,\n    CellEditorClass: any,\n    setRef: (cellEditor: ICellEditor | undefined) => void,\n) => {\n    const { compProxy } = editDetails;\n    setRef(compProxy);\n\n    const props = compProxy!.getProps();\n\n    const isStateless = isComponentStateless(CellEditorClass);\n\n    return (\n        <CustomContext.Provider value={{\n            setMethods: (methods: CustomCellEditorCallbacks) => compProxy!.setMethods(methods)\n        }}>\n            {isStateless && <CellEditorClass {...props}/>}\n            {!isStateless && <CellEditorClass {...props} ref={(ref: any) => compProxy!.setRef(ref)}/>}\n        </CustomContext.Provider>\n    );\n}\n\nconst jsxEditor = (\n    editDetails: EditDetails,\n    CellEditorClass: any,\n    setRef: (cellEditor: ICellEditor | undefined) => void,\n) => {\n    const newFormat = editDetails.compProxy;\n\n    return (\n        <>\n            {\n                !newFormat && <CellEditorClass {...editDetails.compDetails.params} ref={ setRef } />\n            }\n            {\n                newFormat && jsxEditorProxy(editDetails, CellEditorClass, setRef)\n            }\n        </>\n    );\n}\n\nconst jsxEditValue = (\n        editDetails: EditDetails, \n        setInlineCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        setPopupCellEditorRef: (cellEditor: ICellEditor | undefined)=>void,\n        eGui: HTMLElement, \n        cellCtrl: CellCtrl,\n        jsEditorComp: ICellEditorComp | undefined ) => {\n\n    const compDetails = editDetails.compDetails;\n    const CellEditorClass = compDetails.componentClass;\n\n    const reactInlineEditor = compDetails.componentFromFramework && !editDetails.popup;\n    const reactPopupEditor = compDetails.componentFromFramework && editDetails.popup;\n    const jsPopupEditor = !compDetails.componentFromFramework && editDetails.popup;\n\n    return (\n        <>\n            { \n                reactInlineEditor && jsxEditor(editDetails, CellEditorClass, setInlineCellEditorRef)\n            }\n\n            { \n                reactPopupEditor &&\n                <PopupEditorComp\n                    editDetails={ editDetails }\n                    cellCtrl={cellCtrl}\n                    eParentCell={eGui}\n                    wrappedContent={\n                        jsxEditor(editDetails, CellEditorClass, setPopupCellEditorRef)\n                    }\n                />\n            }\n\n            { \n                jsPopupEditor &&\n                jsEditorComp &&\n                <PopupEditorComp\n                    editDetails={editDetails}\n                    cellCtrl={cellCtrl}\n                    eParentCell={eGui}\n                    jsChildComp={ jsEditorComp } \n                /> \n            }\n        </>\n    )\n}\n\nconst jsxShowValue = (\n    showDetails: RenderDetails,\n    key: number,\n    parentId: string,\n    cellRendererRef: MutableRefObject<any>,\n    showCellWrapper: boolean,\n    reactCellRendererStateless: boolean,\n    setECellValue: (ref:any) => void\n) => {\n    const { compDetails, value } = showDetails;\n\n    const noCellRenderer = !compDetails;\n    const reactCellRenderer = compDetails && compDetails.componentFromFramework;\n\n    const CellRendererClass = compDetails && compDetails.componentClass;\n\n    // if we didn't do this, objects would cause React error. we depend on objects for things\n    // like the aggregation functions avg and count, which return objects and depend on toString()\n    // getting called.\n    const valueForNoCellRenderer = (value?.toString) ? value.toString() : value;\n\n    const bodyJsxFunc = () => (\n        <>\n            { noCellRenderer && <>{ valueForNoCellRenderer }</> }\n            { reactCellRenderer && !reactCellRendererStateless && <CellRendererClass { ...compDetails!.params } key={key} ref={ cellRendererRef }/> }\n            { reactCellRenderer && reactCellRendererStateless && <CellRendererClass { ...compDetails!.params } key={key}/> }\n        </>\n    );\n\n    return (\n        <>\n            {\n                showCellWrapper\n                ? (\n                    <span role=\"presentation\" id={`cell-${parentId}`} className=\"ag-cell-value\" ref={ setECellValue }>\n                        { bodyJsxFunc() }\n                    </span>\n                )\n                : bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport interface RenderDetails {\n    compDetails: UserCompDetails | undefined;\n    value?: any;\n    force?: boolean;\n}\nexport interface EditDetails {\n    compDetails: UserCompDetails;\n    popup?: boolean;\n    popupPosition?: 'over' | 'under';\n    compProxy?: CellEditorComponentProxy;\n}\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const { context } = useContext(BeansContext);\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const tabIndex = cellCtrl.getTabIndex();\n    const colId = cellCtrl.getColumnIdSanitised();\n    const cellInstanceId = cellCtrl.getInstanceId();\n\n    // Only provide an initial state when not using a Cell Renderer so that we do not display a raw value before the cell renderer is created.\n    const [renderDetails, setRenderDetails] = useState<RenderDetails | undefined>(() => cellCtrl.isCellRenderer() ? undefined : { compDetails: undefined, value: cellCtrl.getValueToDisplay(), force: false });\n    const [editDetails, setEditDetails ] = useState<EditDetails>();\n    const [renderKey, setRenderKey] = useState<number>(1);\n\n    const [userStyles, setUserStyles] = useState<CellStyle>();\n\n    const [includeSelection, setIncludeSelection] = useState<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = useState<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = useState<boolean>(false);\n\n    const [jsEditorComp, setJsEditorComp] = useState<ICellEditorComp>();\n\n    // useMemo as more then just accessing a boolean on the cellCtrl\n    const forceWrapper = useMemo(() => cellCtrl.isForceWrapper(), [cellCtrl]);\n    const cellAriaRole = useMemo(() => cellCtrl.getCellAriaRole(), [cellCtrl]);\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const cellRendererRef = useRef<any>(null);\n    const jsCellRendererRef = useRef<ICellRendererComp>();\n    const cellEditorRef = useRef<ICellEditor>();\n\n    const eCellWrapper = useRef<HTMLDivElement>();\n    const cellWrapperDestroyFuncs = useRef<(() => void)[]>([]);\n\n    // when setting the ref, we also update the state item to force a re-render\n    const eCellValue = useRef<HTMLDivElement>();\n    const [cellValueVersion, setCellValueVersion] = useState(0);\n    const setCellValueRef = useCallback( (ref: HTMLDivElement) => {\n        eCellValue.current = ref;\n        setCellValueVersion( v => v+1 );\n    }, []);\n    \n    const showTools = renderDetails != null && (includeSelection || includeDndSource || includeRowDrag);\n    const showCellWrapper = forceWrapper || showTools;\n\n    const setCellEditorRef = useCallback((popup: boolean, cellEditor: ICellEditor | undefined) => {\n        cellEditorRef.current = cellEditor;\n        if (cellEditor) {\n            checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n            const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n            if (editingCancelledByUserComp) {\n                // we cannot set state inside render, so hack is to do it in next VM turn\n                setTimeout(() => {\n                    cellCtrl.stopEditing(true);\n                    cellCtrl.focusCell(true);\n                });\n            }\n        }\n    }, [cellCtrl]);\n\n    const setPopupCellEditorRef = useCallback(\n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(true, cellRenderer),\n        [setCellEditorRef]\n    );\n\n    const setInlineCellEditorRef = useCallback(\n        (cellRenderer: ICellEditor | undefined) => setCellEditorRef(false, cellRenderer), \n        [setCellEditorRef]\n    );\n\n    let cssClassManager = useRef<CssClassManager>();\n\n    if (!cssClassManager.current) {\n        cssClassManager.current = new CssClassManager(() => eGui.current);\n    }\n\n    useJsCellRenderer(renderDetails, showCellWrapper, eCellValue.current, cellValueVersion, jsCellRendererRef, eGui);\n\n    // if RenderDetails changed, need to call refresh. This is not our preferred way (the preferred\n    // way for React is just allow the new props to propagate down to the React Cell Renderer)\n    // however we do this for backwards compatibility, as having refresh used to be supported.\n    const lastRenderDetails = useRef<RenderDetails>();\n    useLayoutEffect(() => {\n        const oldDetails = lastRenderDetails.current;\n        const newDetails = renderDetails;\n        lastRenderDetails.current = renderDetails;\n\n        // if not updating renderDetails, do nothing\n        if (\n            oldDetails == null ||\n            oldDetails.compDetails == null ||\n            newDetails == null ||\n            newDetails.compDetails==null\n        ) { return; }\n\n        const oldCompDetails = oldDetails.compDetails;\n        const newCompDetails = newDetails.compDetails;\n\n        // if different Cell Renderer, then do nothing, as renderer will be recreated\n        if (oldCompDetails.componentClass != newCompDetails.componentClass) { return; }\n\n        // if no refresh method, do nothing\n        if (cellRendererRef.current == null || cellRendererRef.current.refresh == null) {  return; }\n\n        const result = cellRendererRef.current.refresh(newCompDetails.params);\n        if (result != true) {\n            // increasing the render key forces the refresh. this is undocumented (for React users,\n            // we don't document the refresh method, instead we tell them to act on new params).\n            // however the GroupCellRenderer has this logic in it and would need a small refactor\n            // to get it working without using refresh() returning false. so this hack staying in,\n            // in React if refresh() is implemented and returns false (or undefined), we force a refresh\n            setRenderKey( prev => prev + 1 );\n        }\n\n    }, [renderDetails]);\n\n    useLayoutEffect(() => {\n        const doingJsEditor = editDetails && !editDetails.compDetails.componentFromFramework;\n        if (!doingJsEditor) { return; }\n\n        const compDetails = editDetails!.compDetails;\n        const isPopup = editDetails!.popup === true;\n    \n        const cellEditor = createSyncJsComp(compDetails) as ICellEditorComp;\n        if (!cellEditor) { return; }\n\n        const compGui = cellEditor.getGui();\n\n        setCellEditorRef(isPopup, cellEditor);\n\n        if (!isPopup) {\n            const parentEl = (forceWrapper ? eCellWrapper : eGui).current;\n            parentEl?.appendChild(compGui);\n\n            cellEditor.afterGuiAttached && cellEditor.afterGuiAttached();\n        }\n\n        setJsEditorComp(cellEditor);\n\n        return () => {\n            context.destroyBean(cellEditor);\n            setCellEditorRef(isPopup, undefined);\n            setJsEditorComp(undefined);\n\n            if (compGui && compGui.parentElement) {\n                compGui.parentElement.removeChild(compGui);\n            }\n        };\n    }, [editDetails]);\n\n    // tool widgets effect\n    const setCellWrapperRef = useCallback((ref: HTMLDivElement) => {\n        eCellWrapper.current = ref;\n\n        if (!eCellWrapper.current) {\n            cellWrapperDestroyFuncs.current.forEach(f => f());\n            cellWrapperDestroyFuncs.current = [];\n            return;\n        }\n\n        const addComp = (comp: Component | undefined) => {\n            if (comp) {\n                const eGui = comp.getGui();\n                eCellWrapper.current?.insertAdjacentElement('afterbegin', eGui);\n                cellWrapperDestroyFuncs.current.push(() => {\n                    context.destroyBean(comp);\n                    _.removeFromParent(eGui);\n                });\n            }\n            return comp;\n        }\n\n        if (includeSelection) {\n            const checkboxSelectionComp = cellCtrl.createSelectionCheckbox();\n            addComp(checkboxSelectionComp);\n        }\n\n        if (includeDndSource) {\n            addComp(cellCtrl.createDndSource());\n        }\n\n        if (includeRowDrag) {\n            addComp(cellCtrl.createRowDragComp());\n        }\n    }, [cellCtrl, context, includeDndSource, includeRowDrag, includeSelection]);\n\n    // we use layout effect here as we want to synchronously process setComp and it's side effects\n    // to ensure the component is fully initialised prior to the first browser paint. See AG-7018.\n\n    const setRef = useCallback((ref: HTMLDivElement | null) => {\n        eGui.current = ref;\n        if (!eGui.current) {\n            return;\n        }\n\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => cssClassManager.current!.addOrRemoveCssClass(name, on),\n            setUserStyles: (styles: CellStyle) => setUserStyles(styles),\n            getFocusableElement: () => eGui.current!,\n\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            \n            getCellEditor: () => cellEditorRef.current || null,\n            getCellRenderer: () => cellRendererRef.current ? cellRendererRef.current : jsCellRendererRef.current,\n            getParentOfValue: () => eCellValue.current ? eCellValue.current : eCellWrapper.current ? eCellWrapper.current : eGui.current,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails(prev => {\n\n\n                    if (prev?.compDetails !== compDetails || prev?.value !== value || prev?.force !== force) {\n                        return {\n                            value,\n                            compDetails,\n                            force\n                        }\n                    } else {\n                        return prev;\n                    }\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition, reactiveCustomComponents) => {\n                if (compDetails) {\n                    let compProxy = undefined;\n                    if (reactiveCustomComponents) {\n                        compProxy = new CellEditorComponentProxy(compDetails.params!, () => setRenderKey( prev => prev + 1 ));\n                    } else if (compDetails.componentFromFramework) {\n                        warnReactiveCustomComponents();\n                    }\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition,\n                        compProxy\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(editDetails => {\n                        if (editDetails?.compProxy) {\n                            // if we're using the proxy, we have to manually clear the ref\n                            cellEditorRef.current = undefined;\n                        }\n                        return undefined;\n                    });\n                }\n            }\n        };\n\n        const cellWrapperOrUndefined = eCellWrapper.current || undefined;\n        cellCtrl.setComp(compProxy, eGui.current, cellWrapperOrUndefined, printLayout, editingRow);\n\n    }, []);\n\n    const reactCellRendererStateless = useMemo(() => {\n        const res =\n            renderDetails &&\n            renderDetails.compDetails &&\n            renderDetails.compDetails.componentFromFramework &&\n            isComponentStateless(renderDetails.compDetails.componentClass);\n\n        return !!res;\n    }, [renderDetails]);\n\n    useLayoutEffect(() => {\n        if (!eGui.current) { return; }\n        cssClassManager.current!.addOrRemoveCssClass('ag-cell-value', !showCellWrapper);\n        cssClassManager.current!.addOrRemoveCssClass('ag-cell-inline-editing', !!editDetails && !editDetails.popup);\n        cssClassManager.current!.addOrRemoveCssClass('ag-cell-popup-editing', !!editDetails && !!editDetails.popup);\n        cssClassManager.current!.addOrRemoveCssClass('ag-cell-not-inline-editing', !editDetails || !!editDetails.popup);\n        cellCtrl.getRowCtrl()?.setInlineEditingCss(!!editDetails);\n\n        if (cellCtrl.shouldRestoreFocus() && !cellCtrl.isEditing()) {\n            // Restore focus to the cell if it was focused before and not editing.\n            // If it is editing then it is likely the focus was moved to the editor and we should not move it back.\n            eGui.current.focus({ preventScroll: true });\n        }\n    });\n\n\n    const showContents = () => (\n        <>\n            {\n                (renderDetails != null && jsxShowValue(\n                    renderDetails,\n                    renderKey,\n                    cellInstanceId,\n                    cellRendererRef,\n                    showCellWrapper,\n                    reactCellRendererStateless,\n                    setCellValueRef\n                ))\n            }\n            {\n                (editDetails != null && jsxEditValue(\n                    editDetails,\n                    setInlineCellEditorRef,\n                    setPopupCellEditorRef,\n                    eGui.current!,\n                    cellCtrl,\n                    jsEditorComp\n                ))\n            }\n        </>\n    );\n\n    return (\n        <div\n            ref={setRef}\n            style={ userStyles }\n            tabIndex={ tabIndex }\n            role={ cellAriaRole }\n            col-id={colId}\n        >\n            { showCellWrapper\n                ? (\n                    <div className=\"ag-cell-wrapper\" role=\"presentation\" ref={ setCellWrapperRef }>\n                        { showContents() }\n                    </div>\n                )\n                : showContents()\n            }\n        </div>\n    );\n}\n\nexport default memo(CellComp);\n", "import { CellCtrl, PopupEditorWrapper } from '@ag-grid-community/core';\nimport React, { useState, memo, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { EditDetails } from './cellComp';\nimport { BeansContext } from '../beansContext';\nimport { useEffectOnce } from '../useEffectOnce';\n\nconst PopupEditorComp = (props: {\n            editDetails: EditDetails, \n            cellCtrl: CellCtrl, \n            eParentCell: HTMLElement,\n            wrappedContent?: any,\n            jsChildComp?: any\n        }) => {\n\n    const [popupEditorWrapper, setPopupEditorWrapper] = useState<PopupEditorWrapper>();\n\n    const { context, popupService, localeService, gridOptionsService } = useContext(BeansContext);\n\n    useEffectOnce(() => {\n        const {editDetails, cellCtrl, eParentCell} = props;\n        const {compDetails} = editDetails;\n\n        const useModelPopup = gridOptionsService.get('stopEditingWhenCellsLoseFocus');\n        \n        const wrapper = context.createBean(new PopupEditorWrapper(compDetails.params));\n        const ePopupGui = wrapper.getGui();\n\n        if (props.jsChildComp) {\n            const eChildGui = props.jsChildComp.getGui();\n            if (eChildGui) {\n                ePopupGui.appendChild(eChildGui);\n            }\n        }\n\n        const positionParams = {\n            column: cellCtrl.getColumn(),\n            rowNode: cellCtrl.getRowNode(),\n            type: 'popupCellEditor',\n            eventSource: eParentCell,\n            ePopup: ePopupGui,\n            position: editDetails!.popupPosition,\n            keepWithinBounds: true\n        };\n\n        const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n\n        const translate = localeService.getLocaleTextFunc();\n    \n        const addPopupRes = popupService.addPopup({\n            modal: useModelPopup,\n            eChild: ePopupGui,\n            closeOnEsc: true,\n            closedCallback: () => { cellCtrl.onPopupEditorClosed(); },\n            anchorToElement: eParentCell,\n            positionCallback,\n            ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n        });\n    \n        const hideEditorPopup: (()=>void) | undefined = addPopupRes ? addPopupRes.hideFunc : undefined;\n\n        setPopupEditorWrapper(wrapper);\n\n        props.jsChildComp && props.jsChildComp.afterGuiAttached && props.jsChildComp.afterGuiAttached();\n\n        return ()=> {\n            if (hideEditorPopup!=null) {\n                hideEditorPopup();\n            }\n            context.destroyBean(wrapper);\n        };\n\n    });\n\n    return (\n        <>\n            { popupEditorWrapper && props.wrappedContent \n                                 && createPortal(props.wrappedContent, popupEditorWrapper.getGui()) }\n        </>\n    );\n};\n\nexport default memo(PopupEditorComp);\n", "import { useEffect, useRef, useState } from 'react';\n\n/** This should only be used a last resort for working around StrictMode!\n * Currently only used for Popup Editor due to our approach of showing a popup.\n */\nexport const useEffectOnce = (effect: () => void | (() => void)) => {\n\n    const effectFn = useRef<() => void | (() => void)>(effect);\n    const destroyFn = useRef<void | (() => void)>();\n    const effectCalled = useRef(false);\n    const rendered = useRef(false);\n    const [, setVal] = useState<number>(0);\n  \n    if (effectCalled.current) {\n      rendered.current = true;\n    }\n  \n    useEffect(() => {\n      // only execute the effect first time around\n      if (!effectCalled.current) {\n        destroyFn.current = effectFn.current();\n        effectCalled.current = true;\n      }\n\n      // this forces one render after the effect is run\n      setVal((val) => val + 1);\n\n      return () => {\n        // if the comp didn't render since the useEffect was called,\n        // we know it's the dummy React cycle\n        if (!rendered.current) { return; }\n\n        // otherwise this is not a dummy destroy, so call the destroy func\n        if (destroyFn.current) { destroyFn.current(); }\n      };\n    }, []);\n  };", "import { ICellRendererComp } from '@ag-grid-community/core';\nimport { MutableRefObject, useCallback, useContext, useEffect } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { RenderDetails } from './cellComp';\n\nconst useJsCellRenderer = (\n    showDetails: RenderDetails | undefined,\n    showTools: boolean,\n    eCellValue: HTMLElement | undefined,\n    cellValueVersion: number,\n    jsCellRendererRef: MutableRefObject<ICellRendererComp|undefined>,\n    eGui: MutableRefObject<any>) => {\n\n        const {context} = useContext(BeansContext);\n\n        const destroyCellRenderer = useCallback(() => {\n            const comp = jsCellRendererRef.current;\n            if (!comp) { return; }\n\n            const compGui = comp.getGui();\n\n            if (compGui && compGui.parentElement) {\n                compGui.parentElement.removeChild(compGui);\n            }\n\n            context.destroyBean(comp);\n            jsCellRendererRef.current = undefined;\n        }, []);\n\n        // create or refresh JS cell renderer\n        useEffect(() => {\n            const showValue = showDetails != null;\n            const jsCompDetails = showDetails && showDetails.compDetails && !showDetails.compDetails.componentFromFramework;\n            const waitingForToolsSetup = showTools && eCellValue == null;\n            const showComp = showValue && jsCompDetails && !waitingForToolsSetup;\n\n            // if not showing comp, destroy any existing one and return\n            if (!showComp) {\n                destroyCellRenderer();\n                return;\n            }\n\n            const compDetails = showDetails!.compDetails;\n\n            if (jsCellRendererRef.current) {\n                // attempt refresh if refresh method exists\n                const comp = jsCellRendererRef.current;\n                const attemptRefresh = comp.refresh != null && showDetails!.force == false;\n                const refreshResult = attemptRefresh ? comp.refresh(compDetails!.params) : false;\n                const refreshWorked = refreshResult === true || refreshResult === undefined;\n\n                // if refresh worked, nothing else to do\n                if (refreshWorked) { return; }\n\n                // if refresh didn't work, we destroy it and continue, so new cell renderer created below\n                destroyCellRenderer();\n            }\n\n            const promise = compDetails!.newAgStackInstance();;\n            if (!promise) { return; }\n\n            const comp = promise.resolveNow(null, x => x); // js comps are never async\n            if (!comp) { return; }\n\n            const compGui = comp.getGui();\n            if (!compGui) { return; }\n\n            const parent = showTools ? eCellValue! : eGui.current!;\n            parent.appendChild(compGui);\n\n            jsCellRendererRef.current = comp;\n            // We do not return the destroy here as we want to keep the comp alive for our custom refresh approach above\n\n        }, [showDetails, showTools, cellValueVersion]);\n\n        // this effect makes sure destroyCellRenderer gets called when the\n        // component is destroyed. as the other effect only updates when there\n        // is a change in state\n        useEffect(() => {\n            return destroyCellRenderer;\n        }, []);\n}\n\nexport default useJsCellRenderer;\n", "import { AgPromise, ICellEditor, ICellEditorParams } from \"@ag-grid-community/core\";\nimport { addOptionalMethods } from \"./customComponentWrapper\";\nimport { CustomCellEditorCallbacks, CustomCellEditorProps } from \"./interfaces\";\n\nexport class CellEditorComponentProxy implements ICellEditor {\n    private value: any;\n    private componentInstance?: any;\n    private resolveInstanceCreated?: () => void;\n    private instanceCreated: AgPromise<void> = new AgPromise(resolve => {\n        this.resolveInstanceCreated = resolve;\n    });\n    private readonly onValueChange = (value: any) => this.updateValue(value);\n\n    constructor(private cellEditorParams: ICellEditorParams, private readonly refreshProps: () => void) {\n        this.value = cellEditorParams.value;\n    }\n\n    public getProps(): CustomCellEditorProps {\n        return {\n            ...this.cellEditorParams,\n            initialValue: this.cellEditorParams.value,\n            value: this.value,\n            onValueChange: this.onValueChange\n        };\n    }\n\n    public getValue(): any {\n        return this.value;\n    }\n\n    public refresh(params: ICellEditorParams): void {\n        this.cellEditorParams = params;\n        this.refreshProps();\n    }\n\n    public setMethods(methods: CustomCellEditorCallbacks): void {\n        addOptionalMethods(this.getOptionalMethods(), methods, this);\n    }\n\n    public getInstance(): AgPromise<any> {\n        return this.instanceCreated.then(() => this.componentInstance);\n    }\n\n    public setRef(componentInstance: any): void {\n        this.componentInstance = componentInstance;\n        this.resolveInstanceCreated?.();\n        this.resolveInstanceCreated = undefined;\n    }\n\n    private getOptionalMethods(): string[] {\n        return ['isPopup', 'isCancelBeforeStart', 'isCancelAfterEnd', 'getPopupPosition', 'focusIn', 'focusOut', 'afterGuiAttached'];\n    }\n\n    private updateValue(value: any): void {\n        this.value = value;\n        this.refreshProps();\n    }\n}\n", "import React, { ForwardRefRenderFunction, forwardRef, memo, useCallback, useContext, useImperativeHandle, useRef } from 'react';\n\nimport {\n    GridCtrl,\n    ITabGuard,\n    TabGuardClassNames,\n    TabGuardCtrl\n} from '@ag-grid-community/core';\nimport { BeansContext } from './beansContext';\n\nexport interface TabGuardCompCallback {\n    forceFocusOutOfContainer(up?: boolean): void;\n}\n\ninterface TabGuardProps {\n    children: React.ReactNode,\n    eFocusableElement: HTMLDivElement,\n    forceFocusOutWhenTabGuardsAreEmpty?: boolean;\n    gridCtrl: GridCtrl,\n    onTabKeyDown: (e: KeyboardEvent) => void,\n}\n\nconst TabGuardCompRef: ForwardRefRenderFunction<TabGuardCompCallback, TabGuardProps> = (props: any, forwardRef: any) => {\n\n    const { children, eFocusableElement, onTabKeyDown, gridCtrl, forceFocusOutWhenTabGuardsAreEmpty } = props;\n    const { context } = useContext(BeansContext);\n\n    const topTabGuardRef = useRef<HTMLDivElement | null>(null);\n    const bottomTabGuardRef = useRef<HTMLDivElement | null>(null);\n    const tabGuardCtrlRef = useRef<TabGuardCtrl | null>();\n\n    const setTabIndex = (value?: string | null) => {\n        const processedValue = value == null ? undefined : parseInt(value, 10).toString();\n\n        [topTabGuardRef, bottomTabGuardRef].forEach(tabGuard => {\n            if (processedValue === undefined) {\n                tabGuard.current?.removeAttribute('tabindex');\n            } else {\n                tabGuard.current?.setAttribute('tabindex', processedValue);\n            }\n            \n        })\n    }\n\n    useImperativeHandle(forwardRef, () => ({\n        forceFocusOutOfContainer(up?: boolean) {\n            tabGuardCtrlRef.current?.forceFocusOutOfContainer(up);\n        }\n    }));\n\n    const setupCtrl = useCallback(() => {\n\n        if (!topTabGuardRef.current && !bottomTabGuardRef.current) {\n            // Clean up after both refs have been removed\n            context.destroyBean(tabGuardCtrlRef.current);\n            tabGuardCtrlRef.current = null;\n            return;\n        } \n\n        if (topTabGuardRef.current && bottomTabGuardRef.current) {\n            const compProxy: ITabGuard = {\n                setTabIndex\n            };\n\n            tabGuardCtrlRef.current = context.createBean(new TabGuardCtrl({\n                comp: compProxy,\n                eTopGuard: topTabGuardRef.current,\n                eBottomGuard: bottomTabGuardRef.current,\n                eFocusableElement: eFocusableElement,\n                onTabKeyDown: onTabKeyDown,\n                forceFocusOutWhenTabGuardsAreEmpty: forceFocusOutWhenTabGuardsAreEmpty,\n                focusInnerElement: (fromBottom: any) => gridCtrl.focusInnerElement(fromBottom)\n            }));\n        }\n    }, []);\n\n    const setTopRef = useCallback((e: HTMLDivElement) => {\n        topTabGuardRef.current = e;\n        setupCtrl();\n    }, [setupCtrl]);\n    const setBottomRef = useCallback((e: HTMLDivElement) => {\n        bottomTabGuardRef.current = e;\n        setupCtrl();\n    }, [setupCtrl]);\n\n    const createTabGuard = (side: 'top' | 'bottom') => {\n        const className = side === 'top' ? TabGuardClassNames.TAB_GUARD_TOP : TabGuardClassNames.TAB_GUARD_BOTTOM;\n\n        return (\n            <div \n                className={ `${TabGuardClassNames.TAB_GUARD} ${className}` }\n                role=\"presentation\"\n                ref={side === 'top' ? setTopRef : setBottomRef}\n            ></div>\n        );\n    }\n\n    return (\n        <>\n            {createTabGuard('top')}\n            { children }\n            {createTabGuard('bottom')}\n        </>\n    )\n};\n\nconst TabGuardComp = forwardRef(TabGuardCompRef);\n\nexport default memo(TabGuardComp);\n", "import {\n    ColumnApi,\n    GridApi,\n    GridOptions,\n    ICellEditor,\n    ICellRenderer,\n    IDate,\n    IFilter,\n    IFloatingFilter,\n    IHeader,\n    IHeaderGroup,\n    ILoadingOverlay,\n    IMenuItem,\n    INoRowsOverlay,\n    IStatusPanel,\n    IToolPanel,\n    Module\n} from '@ag-grid-community/core';\n\n/** @deprecated v29 ChangeDetectionStrategyType has been deprecated. IdentityCheck will always be used now for a more consistent approach. */\nexport enum ChangeDetectionStrategyType {\n    IdentityCheck = 'IdentityCheck',\n    DeepValueCheck = 'DeepValueCheck',\n    NoCheck = 'NoCheck'\n}\n\nexport interface SharedProps<TData = any> extends GridOptions<TData> {\n    gridOptions?: GridOptions<TData>;\n    /**\n     * Used to register AG Grid Modules directly with this instance of the grid. \n     * See [Providing Modules To Individual Grids](https://www.ag-grid.com/react-data-grid/modules/#providing-modules-to-individual-grids) for more information. \n     */\n    modules?: Module[];\n    containerStyle?: any;\n    className?: string;\n    setGridApi?: (gridApi: GridApi<TData>, columnApi: ColumnApi) => void;\n    componentWrappingElement?: string; // only used when putting React into JS\n    maxComponentCreationTimeMs?: number; // only used when putting React into JS\n    children?: any;\n}\n\n/** @deprecated v31.1 Use `AgGridReactProps` instead. */\nexport interface AgReactUiProps<TData = any> extends SharedProps<TData> {\n}\n\nexport interface AgGridReactProps<TData = any> extends SharedProps<TData> {\n    /** @deprecated v31.1 No longer used. */\n    disableStaticMarkup?: boolean;\n    /** @deprecated v31.1 No longer used. */\n    legacyComponentRendering?: boolean,\n}\n\nexport interface AgReactComponent {\n    /** @deprecated v31.1 Apply styling directly to `.ag-react-container` if needed */\n    getReactContainerStyle?: () => {};\n    /** @deprecated v31.1 Apply styling directly to `.ag-react-container` if needed */\n    getReactContainerClasses?: () => string[];\n}\n\n/** @deprecated v31.1 Use `IHeaderGroup` instead. */\nexport interface IHeaderGroupReactComp extends IHeaderGroup, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `IHeader` instead. */\nexport interface IHeaderReactComp extends IHeader, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `IDate` instead. */\nexport interface IDateReactComp extends IDate, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `IFilter` instead. */\nexport interface IFilterReactComp extends IFilter, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `IFloatingFilter` instead. */\nexport interface IFloatingFilterReactComp extends IFloatingFilter, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `ICellRenderer` instead. */\nexport interface ICellRendererReactComp extends ICellRenderer, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `ICellEditor` instead. */\nexport interface ICellEditorReactComp extends ICellEditor, AgReactComponent {\n}\n\n/** @deprecated v31.1 No interface required. */\nexport interface ILoadingCellRendererReactComp extends AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `ILoadingOverlay` instead. */\nexport interface ILoadingOverlayReactComp extends ILoadingOverlay, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `INoRowsOverlay` instead. */\nexport interface INoRowsOverlayReactComp extends INoRowsOverlay, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `IStatusPanel` instead. */\nexport interface IStatusPanelReactComp extends IStatusPanel, AgReactComponent {\n}\n\n/** @deprecated v31.1 Use `IToolPanel` instead. */\nexport interface IToolPanelReactComp extends IToolPanel, AgReactComponent {\n}\n\n/** @deprecated v31.1 No interface required. */\nexport interface ITooltipReactComp extends AgReactComponent {\n}\n", "import {\n    BaseCellEditor,\n    BaseDate,\n    BaseDateParams,\n    BaseFilter,\n    BaseFilterParams,\n    BaseFloatingFilter,\n    BaseMenuItem,\n    BaseMenuItemParams,\n    BaseToolPanelParams,\n    ICellEditorParams,\n    ICellRendererParams,\n    IDetailCellRendererParams,\n    IFilter,\n    IFloatingFilterParams,\n    IGroupCellRendererParams,\n    IHeaderGroupParams,\n    IHeaderParams,\n    ILoadingCellRendererParams,\n    ILoadingOverlayParams,\n    INoRowsOverlayParams,\n    IStatusPanelParams,\n    ITooltipParams\n} from \"@ag-grid-community/core\";\nimport { useContext } from \"react\";\nimport { CustomContext } from \"./customContext\";\n\n// *** Props ***\n\n/** Props provided to custom cell editor components */\nexport interface CustomCellEditorProps<TData = any, TValue = any, TContext = any> extends ICellEditorParams<TData, TValue, TContext> {\n    /** The value in the cell when editing started. */\n    initialValue: TValue | null | undefined;\n    /** The current value for the editor. */\n    value: TValue | null | undefined;\n    /** Callback that should be called every time the value in the editor changes. */\n    onValueChange: (value: TValue | null | undefined) => void;\n}\n\n/** Props provided to custom date components */\nexport interface CustomDateProps<TData = any, TContext = any> extends BaseDateParams<TData, TContext> {\n    /** The current date for the component. */\n    date: Date | null,\n    /** Callback that should be called every time the date in the component changes. */\n    onDateChange: (date: Date | null) => void,\n}\n\n/** Props provided to custom filter components */\nexport interface CustomFilterProps<TData = any, TContext = any, TModel = any> extends BaseFilterParams<TData, TContext> {\n    /** The current filter model for the component. */\n    model: TModel | null,\n    /** Callback that should be called every time the model in the component changes. */\n    onModelChange: (model: TModel | null) => void,\n    /**\n     * Callback that can be optionally called every time the filter UI changes.\n     * The grid will respond with emitting a FilterModifiedEvent.\n     * Apart from emitting the event, the grid takes no further action.\n     */\n    onUiChange: () => void,\n}\n\n/** Props provided to custom floating filter components */\nexport interface CustomFloatingFilterProps<P = IFilter, TData = any, TContext = any, TModel = any> extends IFloatingFilterParams<P, TData, TContext> {\n    /** The current filter model for the component. */\n    model: TModel | null;\n    /** Callback that should be called every time the model in the component changes. */\n    onModelChange: (model: TModel | null) => void;\n}\n\n/** Props provided to custom tool panel components */\nexport interface CustomToolPanelProps<TData = any, TContext = any, TState = any> extends BaseToolPanelParams<TData, TContext, TState> {\n    /**\n     * The current state for the component (used in grid state).\n     * Initially set to the same value as `initialState`\n     */\n    state: TState | undefined,\n    /**\n     * If using grid state, callback that should be called every time the state in the component changes.\n     * If not using grid state, not required.\n     */\n    onStateChange: (model: TState | undefined) => void;\n}\n\n/** Props provided to custom menu item components */\nexport interface CustomMenuItemProps<TData = any, TContext = any> extends BaseMenuItemParams<TData, TContext> {\n    /** The active status of the item (is it currently hovered with the mouse, or navigated to via the keyboard). */\n    active: boolean;\n    /** If the item is a sub menu, whether it is currently opened or closed. */\n    expanded: boolean;\n    /** Callback that should be called every time the active status is updated (if providing custom behaviour). */\n    onActiveChange: (active: boolean) => void;\n}\n\n/** Props provided to custom loading overlay component */\nexport interface CustomLoadingOverlayProps<TData = any, TContext = any> extends ILoadingOverlayParams<TData, TContext> {}\n\n/** Props provided to custom no rows overlay component */\nexport interface CustomNoRowsOverlayProps<TData = any, TContext = any> extends INoRowsOverlayParams<TData, TContext> {}\n\n/** Props provided to custom status panel components */\nexport interface CustomStatusPanelProps<TData = any, TContext = any> extends IStatusPanelParams<TData, TContext> {}\n\n/** Props provided to custom cell renderer components */\nexport interface CustomCellRendererProps<TData = any, TValue = any, TContext = any> extends ICellRendererParams<TData, TValue, TContext> {}\n\n/** Props provided to custom detail cell renderer components */\nexport interface CustomDetailCellRendererProps<TData = any, TDetail = any> extends IDetailCellRendererParams<TData, TDetail> {}\n\n/** Props provided to custom group cell renderer components */\nexport interface CustomGroupCellRendererProps<TData = any, TValue = any> extends IGroupCellRendererParams<TData, TValue> {}\n\n/** Props provided to custom header components */\nexport interface CustomHeaderProps<TData = any, TContext = any> extends IHeaderParams<TData, TContext> {}\n\n/** Props provided to custom header group components */\nexport interface CustomHeaderGroupProps<TData = any, TContext = any> extends IHeaderGroupParams<TData, TContext> {}\n\n/** Props provided to custom loading cell renderer components */\nexport interface CustomLoadingCellRendererProps<TData = any, TContext = any> extends ILoadingCellRendererParams<TData, TContext> {}\n\n/** Props provided to custom tooltip components */\nexport interface CustomTooltipProps<TData = any, TValue = any, TContext = any> extends ITooltipParams<TData, TValue, TContext> {}\n\n// *** Callbacks ***\n\n/** Callbacks for custom cell editor components */\nexport interface CustomCellEditorCallbacks extends BaseCellEditor {\n    /** @deprecated v27 Use `colDef.cellEditorPopup` instead. */\n    isPopup?(): boolean;\n    \n    /** @deprecated v27 Use `colDef.cellEditorPopupPosition` instead. */\n    getPopupPosition?(): 'over' | 'under' | undefined;\n}\n\n/** Callbacks for custom date components */\nexport interface CustomDateCallbacks extends BaseDate {}\n\n/** Callbacks for custom filter components */\nexport interface CustomFilterCallbacks extends BaseFilter {}\n\n/** Callbacks for custom floating filter components */\nexport interface CustomFloatingFilterCallbacks extends BaseFloatingFilter {}\n\n/** Callbacks for custom menu item components */\nexport interface CustomMenuItemCallbacks extends BaseMenuItem {}\n\n// *** Hooks ***\n\nfunction useGridCustomComponent<M>(methods: M): void {\n    const { setMethods } = useContext(CustomContext);\n    setMethods(methods);\n}\n\n/** Hook to allow custom cell editor component callbacks to be provided to the grid */\nexport function useGridCellEditor(callbacks: CustomCellEditorCallbacks): void {\n    useGridCustomComponent(callbacks);\n}\n\n/** Hook to allow custom date component callbacks to be provided to the grid */\nexport function useGridDate(callbacks: CustomDateCallbacks): void {\n    return useGridCustomComponent(callbacks);\n}\n\n/** Hook to allow custom filter component callbacks to be provided to the grid */\nexport function useGridFilter(callbacks: CustomFilterCallbacks): void {\n    return useGridCustomComponent(callbacks);\n}\n\n/** Hook to allow custom floating filter component callbacks to be provided to the grid */\nexport function useGridFloatingFilter(callbacks: CustomFloatingFilterCallbacks): void {\n    useGridCustomComponent(callbacks);\n}\n\n/** Hook to allow custom menu item component callbacks to be provided to the grid */\nexport function useGridMenuItem(callbacks: CustomMenuItemCallbacks): void {\n    useGridCustomComponent(callbacks);\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_core", "import_react", "import_core", "import_react", "React", "import_react", "Component", "import_core", "import_react", "React", "import_react_dom", "Component", "ReactDOM", "import_core", "import_react", "setRef", "ref", "React", "import_core", "import_react", "import_core", "import_react", "import_react", "import_core", "import_react", "import_core", "import_core", "import_react", "import_react", "import_core", "setRef", "React", "import_react", "setRef", "React", "import_react", "import_core", "import_core", "setRef", "React", "setRef", "height", "top", "React", "setRef", "React", "setRef", "height", "React", "import_react", "import_core", "import_react", "import_react", "import_core", "import_core", "import_react", "import_core", "import_react", "import_react_dom", "import_react", "React", "import_react", "comp", "import_core", "setRef", "React", "eGui", "compProxy", "editDetails", "setRef", "React", "setRef", "React", "setRef", "React", "import_react", "import_core", "forwardRef", "React", "setRef", "React", "setRef", "_a", "context", "React", "React", "ChangeDetectionStrategyType", "import_react"]
}
