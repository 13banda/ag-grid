{"version":3,"sources":["reactUi/rows/rowContainerComp.tsx"],"names":[],"mappings":"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","file":"rowContainerComp.js","sourcesContent":["import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport React, { useEffect, useMemo, useRef, useState, memo, useContext, useCallback } from 'react';\nimport { classesList } from '../utils';\nimport useReactCommentEffect from '../reactComment';\nimport RowComp from './rowComp';\nimport { BeansContext } from '../beansContext';\n\nconst RowContainerComp = (params: {name: RowContainerName}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = useState<string>('');\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = useState<RowCtrl[]>([]);\n    const [rowCtrls, setRowCtrls] = useState<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = useState<boolean>(false);\n    const [containerWidth, setContainerWidth] = useState<string>('');\n\n    const { name } = params;\n    const containerType = useMemo(() => getRowContainerTypeForName(name), [name]);\n\n    const eWrapper = useRef<HTMLDivElement>(null);\n    const eViewport = useRef<HTMLDivElement>(null);\n    const eContainer = useRef<HTMLDivElement>(null);\n\n    const cssClasses = useMemo(() => RowContainerCtrl.getRowContainerCssClasses(name), [name]);\n    const wrapperClasses = useMemo( ()=> classesList(cssClasses.wrapper), []);\n    const viewportClasses = useMemo( ()=> classesList(cssClasses.viewport), []);\n    const containerClasses = useMemo( ()=> classesList(cssClasses.container), []);\n\n    // no need to useMemo for boolean types\n    const template1 = name === RowContainerName.CENTER;\n    const template2 = name === RowContainerName.TOP_CENTER || name === RowContainerName.BOTTOM_CENTER;\n    const template3 = !template1 && !template2;\n\n    const topLevelRef = template1 ? eWrapper : template2 ? eViewport : eContainer;\n\n    useReactCommentEffect(' AG Row Container ' + name + ' ', topLevelRef);\n\n    // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n    // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n    useEffect( () => {\n        setRowCtrlsOrdered( prev => {\n            if (domOrder) {\n                return rowCtrls;\n            }\n            // if dom order not important, we don't want to change the order\n            // of the elements in the dom, as this would break transition styles\n            const oldRows = prev.filter(r => rowCtrls.indexOf(r) >= 0);\n            const newRows = rowCtrls.filter(r => oldRows.indexOf(r) < 0);\n            const next = [...oldRows, ...newRows];\n            return next;\n        });\n    }, [domOrder, rowCtrls]);\n\n    useEffect(() => {\n        const beansToDestroy: any[] = [];\n\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: rowCtrls => setRowCtrls(rowCtrls),\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => setContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        beansToDestroy.push(ctrl);\n        ctrl.setComp(compProxy, eContainer.current!, eViewport.current!, eWrapper.current!);\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n        };\n\n    }, []);\n\n    const viewportStyle = useMemo(() => ({\n        height: viewportHeight\n    }), [viewportHeight]);\n\n    const containerStyle = useMemo(() => ({\n        width: containerWidth\n    }), [containerWidth]);\n\n    const buildContainer = () => (\n        <div\n            className={ containerClasses }\n            ref={ eContainer }\n            role=\"rowgroup\" \n            style={ containerStyle }>\n            {\n                rowCtrlsOrdered.map(rowCtrl => <RowComp rowCtrl={ rowCtrl } containerType={ containerType } key={ rowCtrl.getInstanceId() }></RowComp>)\n            }\n        </div>\n    );\n\n    return (\n        <>\n            {\n                template1 &&\n                <div className={ wrapperClasses } ref={ eWrapper } role=\"presentation\">\n                    <div className={ viewportClasses } ref= { eViewport } role=\"presentation\" style={ viewportStyle }>\n                        { buildContainer() }\n                    </div>\n                </div>\n            }\n            {\n                template2 &&\n                <div className={ viewportClasses } ref= { eViewport } role=\"presentation\" style={ viewportStyle }>\n                    { buildContainer() }\n                </div>\n            }\n            {\n                template3 && buildContainer()\n            }\n        </>\n    );\n};\n\nexport default memo(RowContainerComp);\n"]}