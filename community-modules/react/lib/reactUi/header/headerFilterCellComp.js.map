{"version":3,"sources":["reactUi/header/headerFilterCellComp.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,+CAAsF;AACtF,kDAA+C;AAC/C,kDAAmI;AACnI,oCAA4D;AAC5D,sCAAuC;AAEvC,MAAM,oBAAoB,GAAG,CAAC,KAAmC,EAAE,EAAE;IAEjE,MAAM,EAAC,OAAO,EAAC,GAAG,kBAAU,CAAC,2BAAY,CAAC,CAAC;IAE3C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,EAAE,CAAC,CAAC;IAC3E,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,EAAE,CAAC,CAAC;IACnF,MAAM,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,EAAE,CAAC,CAAC;IACrG,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,gBAAQ,EAAU,CAAC;IAC7C,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,gBAAQ,EAAmB,CAAC;IAE1E,MAAM,IAAI,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAC1C,MAAM,mBAAmB,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IACzD,MAAM,cAAc,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IACpD,MAAM,qBAAqB,GAAG,cAAM,CAAoB,IAAI,CAAC,CAAC;IAC9D,MAAM,WAAW,GAAG,cAAM,EAAmB,CAAC;IAE9C,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAEvB,iBAAS,CAAC,GAAG,EAAE;QAEX,MAAM,SAAS,GAA0B;YACrC,mBAAmB,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACjF,uBAAuB,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACzF,gCAAgC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC3G,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;YAClC,cAAc,EAAE,WAAW,CAAC,EAAE,CAAC,kBAAkB,CAAC,WAAW,CAAC;YAC9D,qBAAqB,EAAE,GAAE,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,gBAAS,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;YAC/F,WAAW,EAAE,KAAK,CAAC,EAAE,CAAC,qBAAqB,CAAC,OAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;SAC1E,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAQ,EAAE,qBAAqB,CAAC,OAAQ,EAAE,mBAAmB,CAAC,OAAQ,CAAC,CAAC;IAEzG,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,WAAW;IACX,iBAAS,CAAC,GAAG,EAAE;QACX,OAAO,mBAAU,CAAC,eAAe,EAAE,OAAO,EAAE,mBAAmB,CAAC,OAAQ,EAAE,WAAW,CAAC,CAAC;IAC3F,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,MAAM,KAAK,GAAG,eAAO,CAAE,GAAE,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,KAAK;KACf,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEb,MAAM,SAAS,GAAG,eAAO,CAAE,GAAE,EAAE,CAAC,oCAAoC,GAAG,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,CAAE,CAAC;IAC7G,MAAM,aAAa,GAAG,eAAO,CAAE,GAAE,EAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,CAAC,cAAc,CAAC,CAAE,CAAC;IAClF,MAAM,sBAAsB,GAAG,eAAO,CAAE,GAAE,EAAE,CAAC,4BAA4B,GAAG,uBAAuB,CAAC,QAAQ,EAAE,EAAE,CAAC,cAAc,CAAC,CAAE,CAAC;IAEnI,MAAM,iBAAiB,GAAG,eAAO,CAAE,GAAE,EAAE;QACnC,MAAM,GAAG,GAAG,eAAe;eACZ,eAAe,CAAC,sBAAsB;eACtC,4BAAoB,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QACpE,OAAO,CAAC,CAAC,GAAG,CAAC;IACjB,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,MAAM,aAAa,GAAG,eAAe,IAAI,eAAe,CAAC,sBAAsB,CAAC;IAChF,MAAM,aAAa,GAAG,eAAe,IAAI,eAAe,CAAC,cAAc,CAAC;IAExE,OAAO,CACH,uCAAK,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,CAAC,CAAC;QAC5E,uCAAK,GAAG,EAAE,mBAAmB,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EAAC,cAAc;YACtE,aAAa,IAAI,iBAAiB,IAAI,8BAAC,aAAa,oBAAM,eAAgB,CAAC,MAAM,EAAK;YACtF,aAAa,IAAI,CAAC,iBAAiB,IAAI,8BAAC,aAAa,oBAAM,eAAgB,CAAC,MAAM,IAAG,GAAG,EAAG,WAAW,IAAI,CAC1G;QACN,uCAAK,GAAG,EAAE,cAAc,EAAE,SAAS,EAAE,sBAAsB,EAAE,IAAI,EAAC,cAAc;YAC5E,0CAAQ,GAAG,EAAE,qBAAqB,EAAE,IAAI,EAAC,QAAQ,gBAAY,kBAAkB,EAAC,SAAS,EAAC,kCAAkC,EAAC,QAAQ,EAAE,CAAC,CAAC,GAAW,CAClJ,CACJ,CACT,CAAC;AACN,CAAC,CAAC;AAEF,kBAAe,YAAI,CAAC,oBAAoB,CAAC,CAAC","file":"headerFilterCellComp.js","sourcesContent":["import React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { CssClasses, isComponentStateless } from '../utils';\nimport { showJsComp } from '../jsComp';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [cssBodyClasses, setBodyCssClasses] = useState<CssClasses>(new CssClasses());\n    const [cssButtonWrapperClasses, setButtonWrapperCssClasses] = useState<CssClasses>(new CssClasses());\n    const [width, setWidth] = useState<string>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const eFloatingFilterBody = useRef<HTMLDivElement>(null);\n    const eButtonWrapper = useRef<HTMLDivElement>(null);\n    const eButtonShowMainFilter = useRef<HTMLButtonElement>(null);\n    const userCompRef = useRef<IFloatingFilter>();\n\n    const { ctrl } = props;\n\n    useEffect(() => {\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveButtonWrapperCssClass: (name, on) => setButtonWrapperCssClasses(prev => prev.setClass(name, on)),\n            setWidth: width => setWidth(width),\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompRef.current ? AgPromise.resolve(userCompRef.current) : null,\n            setMenuIcon: eIcon => eButtonShowMainFilter.current!.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui.current!, eButtonShowMainFilter.current!, eFloatingFilterBody.current!);\n\n    }, []);\n\n    // js comps\n    useEffect(() => {\n        return showJsComp(userCompDetails, context, eFloatingFilterBody.current!, userCompRef);\n    }, [userCompDetails]);\n\n    const style = useMemo( ()=> ({\n        width: width\n    }), [width]);\n    \n    const className = useMemo( ()=> 'ag-header-cell ag-floating-filter ' + cssClasses.toString(), [cssClasses] );\n    const bodyClassName = useMemo( ()=> cssBodyClasses.toString(), [cssBodyClasses] );\n    const buttonWrapperClassName = useMemo( ()=> 'ag-floating-filter-button ' + cssButtonWrapperClasses.toString(), [cssBodyClasses] );\n\n    const userCompStateless = useMemo( ()=> {\n        const res = userCompDetails \n                    && userCompDetails.componentFromFramework \n                    && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={eGui} className={className} style={style} role=\"gridcell\" tabIndex={-1}>\n            <div ref={eFloatingFilterBody} className={bodyClassName} role=\"presentation\">\n                { reactUserComp && userCompStateless && <UserCompClass { ...userCompDetails!.params } /> }\n                { reactUserComp && !userCompStateless && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef }/> }\n            </div>\n            <div ref={eButtonWrapper} className={buttonWrapperClassName} role=\"presentation\">\n                <button ref={eButtonShowMainFilter} type=\"button\" aria-label=\"Open Filter Menu\" className=\"ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(HeaderFilterCellComp);"]}