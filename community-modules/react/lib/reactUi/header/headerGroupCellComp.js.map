{"version":3,"sources":["reactUi/header/headerGroupCellComp.tsx"],"names":[],"mappings":";;;;;;;;;;AACA,+CAAsF;AACtF,kDAA+C;AAC/C,sCAAuC;AACvC,oDAAiD;AACjD,oCAAsC;AAEtC,MAAM,mBAAmB,GAAG,CAAC,KAAkC,EAAE,EAAE;IAE/D,MAAM,EAAC,OAAO,EAAC,GAAG,kBAAU,CAAC,2BAAY,CAAC,CAAC;IAE3C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,EAAE,CAAC,CAAC;IAC3E,MAAM,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,GAAG,gBAAQ,CAAa,IAAI,kBAAU,EAAE,CAAC,CAAC;IAC7F,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,gBAAQ,EAAU,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,gBAAQ,EAAU,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,gBAAQ,EAAU,CAAC;IAC7C,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,gBAAQ,EAA4B,CAAC;IAC7E,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,gBAAQ,EAAmB,CAAC;IAE1E,MAAM,IAAI,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAC1C,MAAM,OAAO,GAAG,cAAM,CAAiB,IAAI,CAAC,CAAC;IAE7C,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAEvB,6BAAa,CAAC,GAAG,EAAE;QAEf,MAAM,SAAS,GAAyB;YACpC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;YAClC,mBAAmB,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACjF,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC5B,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC;YAClC,kBAAkB,EAAE,WAAW,CAAC,EAAE,CAAC,kBAAkB,CAAC,WAAW,CAAC;YAClE,4BAA4B,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACnG,eAAe,EAAE,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC;SACzD,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,OAAQ,EAAE,OAAO,CAAC,OAAQ,CAAC,CAAC;IAE7D,CAAC,CAAC,CAAC;IAEH,WAAW;IACX,iBAAS,CAAC,GAAG,EAAE;QACX,OAAO,mBAAU,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,OAAQ,CAAC,CAAC;IAC/D,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,sEAAsE;IACtE,iBAAS,CAAC,GAAE,EAAE;QACV,IAAI,kBAAkB,GAA4B,SAAS,CAAC;QAC5D,IAAI,CAAC,OAAQ,CAAC,UAAU,CAAC,OAAO,CAAE,IAAI,CAAC,EAAE;YACrC,IAAI,IAAI,IAAE,IAAI,IAAI,IAAI,KAAG,OAAO,CAAC,OAAO,EAAE;gBACtC,kBAAkB,GAAG,IAAmB,CAAC;aAC5C;QACL,CAAC,CAAC,CAAC;QAEH,kBAAkB,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IACjE,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,MAAM,KAAK,GAAG,eAAO,CAAE,GAAE,EAAE,CAAC,CAAC;QACzB,KAAK,EAAE,KAAK;KACf,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEb,MAAM,SAAS,GAAG,eAAO,CAAE,GAAE,EAAE,CAAC,uBAAuB,GAAG,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,CAAE,CAAC;IAChG,MAAM,kBAAkB,GAAG,eAAO,CAAE,GAAE,EAAE,CAAC,wBAAwB,GAAG,mBAAmB,CAAC,QAAQ,EAAE,EAAE,CAAC,mBAAmB,CAAC,CAAE,CAAC;IAE5H,MAAM,aAAa,GAAG,eAAe,IAAI,eAAe,CAAC,sBAAsB,CAAC;IAChF,MAAM,aAAa,GAAG,eAAe,IAAI,eAAe,CAAC,cAAc,CAAC;IAExE,OAAO,CACH,uCAAK,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,YAAU,KAAK,EACnE,IAAI,EAAC,cAAc,EAAC,QAAQ,EAAE,CAAC,CAAC,mBAAiB,YAAY;QACnE,aAAa,IAAI,8BAAC,aAAa,oBAAM,eAAgB,CAAC,MAAM,EAAK;QACnE,uCAAK,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,kBAAkB,GAAQ,CACtD,CACT,CAAC;AACN,CAAC,CAAC;AAEF,kBAAe,YAAI,CAAC,mBAAmB,CAAC,CAAC","file":"headerGroupCellComp.js","sourcesContent":["import { HeaderGroupCellCtrl, IHeaderGroupCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { showJsComp } from '../jsComp';\nimport { useEffectOnce } from '../useEffectOnce';\nimport { CssClasses } from '../utils';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const [cssClasses, setCssClasses] = useState<CssClasses>(new CssClasses());\n    const [cssResizableClasses, setResizableCssClasses] = useState<CssClasses>(new CssClasses());\n    const [width, setWidth] = useState<string>();\n    const [title, setTitle] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [ariaExpanded, setAriaExpanded] = useState<'true'|'false'|undefined>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n\n    const { ctrl } = props;\n\n    useEffectOnce(() => {\n\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            addOrRemoveResizableCssClass: (name, on) => setResizableCssClasses(prev => prev.setClass(name, on)),\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n\n        ctrl.setComp(compProxy, eGui.current!, eResize.current!);\n\n    });\n\n    // js comps\n    useEffect(() => {\n        return showJsComp(userCompDetails, context, eGui.current!);\n    }, [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(()=> {\n        let userCompDomElement: HTMLElement | undefined = undefined;\n        eGui.current!.childNodes.forEach( node => {\n            if (node!=null && node!==eResize.current) {\n                userCompDomElement = node as HTMLElement;\n            }\n        });\n\n        userCompDomElement && ctrl.setDragSource(userCompDomElement);\n    }, [userCompDetails]);\n\n    const style = useMemo( ()=> ({\n        width: width\n    }), [width]);\n    \n    const className = useMemo( ()=> 'ag-header-group-cell ' + cssClasses.toString(), [cssClasses] );\n    const resizableClassName = useMemo( ()=> 'ag-header-cell-resize ' + cssResizableClasses.toString(), [cssResizableClasses] );\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div ref={eGui} className={className} style={style} title={title} col-id={colId} \n                    role=\"columnheader\" tabIndex={-1} aria-expanded={ariaExpanded}>\n            { reactUserComp && <UserCompClass { ...userCompDetails!.params } /> }\n            <div ref={eResize} className={resizableClassName}></div>\n        </div>\n    );\n};\n\nexport default memo(HeaderGroupCellComp);"]}