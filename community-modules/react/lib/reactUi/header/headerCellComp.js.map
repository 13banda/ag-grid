{"version":3,"sources":["reactUi/header/headerCellComp.tsx"],"names":[],"mappings":"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","file":"headerCellComp.js","sourcesContent":["import React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport { ColumnSortState, CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { isComponentStateless } from '../utils';\nimport { showJsComp } from '../jsComp';\nimport { useEffectOnce } from '../useEffectOnce';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl}) => {\n\n    const { context } = useContext(BeansContext);\n    const [width, setWidth] = useState<string>();\n    const [title, setTitle] = useState<string>();\n    const [colId, setColId] = useState<string>();\n    const [ariaSort, setAriaSort] = useState<ColumnSortState>();\n    const [ariaLabel, setAriaLabel] = useState<string>();\n    const [ariaDescribedBy, setAriaDescribedBy] = useState<string>();\n    const [userCompDetails, setUserCompDetails] = useState<UserCompDetails>();\n\n    const eGui = useRef<HTMLDivElement>(null);\n    const eResize = useRef<HTMLDivElement>(null);\n    const userCompRef = useRef<IHeader>();\n\n    const { ctrl } = props;\n\n    const cssClassManager = useMemo(() => new CssClassManager(() => eGui.current!), []);\n\n    useEffectOnce(() => {\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setAriaLabel: label => setAriaLabel(label),\n            setAriaDescribedBy: value => setAriaDescribedBy(value),\n            setAriaSort: sort => setAriaSort(sort),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: ()=> userCompRef.current || undefined\n        };\n\n        ctrl.setComp(compProxy, eGui.current!, eResize.current!);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.current!.insertAdjacentElement('afterend', selectAllGui);\n    });\n\n    // js comps\n    useEffect(() => showJsComp(\n        userCompDetails, context, eGui.current!, userCompRef\n    ), [userCompDetails]);\n\n    // add drag handling, must be done after component is added to the dom\n    useEffect(() => {\n        let userCompDomElement: HTMLElement | undefined = undefined;\n        eGui.current!.childNodes.forEach( node => {\n            if (node != null && node !== eResize.current) {\n                userCompDomElement = node as HTMLElement;\n            }\n        });\n\n        ctrl.setDragSource(userCompDomElement);\n    }, [userCompDetails]);\n\n    const style = useMemo(() => ({ width }), [width]);\n\n    const userCompStateless = useMemo(() => {\n        const res = userCompDetails?.componentFromFramework && isComponentStateless(userCompDetails.componentClass);\n        return !!res;\n    }, [userCompDetails]);\n\n    const reactUserComp = userCompDetails && userCompDetails.componentFromFramework;\n    const UserCompClass = userCompDetails && userCompDetails.componentClass;\n\n    return (\n        <div\n            ref={eGui}\n            className=\"ag-header-cell\"\n            style={ style }\n            title={ title }\n            col-id={ colId }\n            aria-sort={ariaSort}\n            role=\"columnheader\"\n            tabIndex={-1}\n            aria-describedby={ariaDescribedBy}\n            aria-label={ariaLabel}\n        >\n            <div ref={eResize} className=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            { reactUserComp && userCompStateless && <UserCompClass { ...userCompDetails!.params } /> }\n            { reactUserComp && !userCompStateless && <UserCompClass { ...userCompDetails!.params } ref={ userCompRef }/> }\n        </div>\n    );\n};\n\nexport default memo(HeaderCellComp);\n"]}