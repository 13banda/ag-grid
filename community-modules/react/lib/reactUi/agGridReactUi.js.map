{"version":3,"sources":["reactUi/agGridReactUi.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,kDAAoO;AACpO,+CAAyC;AACzC,yDAAsD;AACtD,6EAAuG;AAEvG,mEAAgE;AAChE,2DAAwD;AACxD,0DAAkC;AAClC,+EAA4E;AAE5E,MAAa,aAAc,SAAQ,iBAA2D;IAgB1F,YAAmB,KAAU;QACzB,KAAK,CAAC,KAAK,CAAC,CAAC;QADE,UAAK,GAAL,KAAK,CAAK;QATrB,iBAAY,GAAmB,EAAE,CAAC;QAClC,2BAAsB,GAAG,IAAI,+CAAsB,EAAE,CAAC;QACtD,SAAI,GAAG,eAAK,CAAC,SAAS,EAAkB,CAAC;QAIzC,mBAAc,GAAiB,EAAE,CAAC;QAClC,UAAK,GAAG,KAAK,CAAC;QAIlB,IAAI,CAAC,KAAK,GAAG,EAAC,OAAO,EAAE,SAAS,EAAC,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAa,CAAC,IAAI,EAAE,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,0BAA0B,CAAC,CAAC;IACnH,CAAC;IAEM,MAAM;QACT,OAAO,CACH,uCAAK,KAAK,EAAG,IAAI,CAAC,iBAAiB,EAAE,EAAG,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAG,GAAG,EAAG,IAAI,CAAC,IAAI;YACpF,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,8BAAC,kBAAQ,IAAC,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI;YAChE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAC/B,CACT,CAAC;IACN,CAAC;IAEO,iBAAiB;QACrB,uBACI,MAAM,EAAE,MAAM,IACX,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,EAAE,CAAC,EACtC;IACN,CAAC;IAEM,iBAAiB;QAEpB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;QACzC,MAAM,UAAU,GAAe;YAC3B,qBAAqB,EAAE;gBACnB,yBAAyB,EAAE,IAAI,8BAA8B,CAAC,IAAI,CAAC,aAAa,CAAC;aACpF;YACD,OAAO;YACP,kBAAkB,EAAE,IAAI,iDAAuB,CAAC,IAAI,CAAC;SACxD,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC;QAChD,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAE9B,IAAI,2BAAY,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;YACxC,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,2BAAY,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SAC3E;QAED,IAAI,CAAC,WAAW,GAAG,oBAAa,CAAC,2BAA2B,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAE3F,MAAM,gBAAgB,GAAG,CAAC,OAAgB,EAAE,EAAE;YAC1C,IAAI,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;YAElC,iGAAiG;YACjG,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,mBAAY,CAAC,IAAI,CAAiB,CAAC;YACxE,YAAY,CAAC,SAAS,CAAE,GAAE,EAAE;gBACxB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAI,CAAC;gBACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAU,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,wGAAwG;QACxG,0GAA0G;QAC1G,kHAAkH;QAClH,MAAM,qBAAqB,GAAG,CAAC,OAAgB,EAAC,EAAE;YAC9C,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,mBAAY,CAAC,IAAI,CAAiB,CAAC;YACxE,YAAY,CAAC,SAAS,CAAE,GAAE,EAAE;gBACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAE,CAAC;gBACxC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC,CAAA;QAED,8BAA8B;QAC9B,MAAM,eAAe,GAAG,IAAI,sBAAe,EAAE,CAAC;QAC9C,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,UAAU,CAAC,CAAC;IACtH,CAAC;IAEM,oBAAoB;QACvB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAEM,kBAAkB,CAAC,SAAc;QACpC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAEM,mBAAmB,CAAC,SAAc,EAAE,SAAc;QACrD,MAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC/D,IAAI,CAAC,+BAA+B,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAEO,+BAA+B,CAAC,SAAc,EAAE,OAAY;QAChE,kFAAkF;QAClF,4EAA4E;QAC5E,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YACxF,OAAO;SACV;QAED,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;QACvC,MAAM,OAAO,GAAG,YAAY,CAAC;QAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAEnD,IAAI,2BAAY,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClD,MAAM,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;YACxG,MAAM,UAAU,GAAG,2BAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAEvE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,cAAc,EAAE,UAAU,CAAC,EAAE;gBACzD,IAAI,YAAY,EAAE;oBACd,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;iBAC3D;gBAED,OAAO,CAAC,OAAO,CAAC;oBACZ;wBACI,aAAa,EAAE,cAAc;wBAC7B,YAAY,EAAE,UAAU;qBAC3B,CAAC;aACT;SACJ;aAAM,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YACpD,OAAO,CAAC,OAAO,CAAC;gBACZ;oBACI,aAAa,EAAE,cAAc;oBAC7B,YAAY,EAAE,EAAE;iBACnB,CAAC;SACT;IACL,CAAC;IAEO,0BAA0B,CAAC,SAAc,EAAE,SAAc,EAAE,OAAY;QAC3E,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;QAEvC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACrC,IAAI,QAAC,CAAC,QAAQ,CAAC,oBAAa,CAAC,cAAc,EAAE,OAAO,CAAC,EAAE;gBACnD,MAAM,uBAAuB,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;gBAE9G,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE;oBAC3E,IAAI,YAAY,EAAE;wBACd,OAAO,CAAC,GAAG,CAAC,iBAAiB,OAAO,oBAAoB,CAAC,CAAC;qBAC7D;oBAED,OAAO,CAAC,OAAO,CAAC,GAAG;wBACf,aAAa,EAAE,SAAS,CAAC,OAAO,CAAC;wBACjC,YAAY,EAAE,SAAS,CAAC,OAAO,CAAC;qBACnC,CAAC;iBACL;aACJ;QACL,CAAC,CAAC,CAAC;QAEH,oBAAa,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACjD,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC7C,IAAI,YAAY,EAAE;oBACd,OAAO,CAAC,GAAG,CAAC,iBAAiB,QAAQ,0BAA0B,CAAC,CAAC;iBACpE;gBAED,OAAO,CAAC,QAAQ,CAAC,GAAG;oBAChB,aAAa,EAAE,SAAS,CAAC,QAAQ,CAAC;oBAClC,YAAY,EAAE,SAAS,CAAC,QAAQ,CAAC;iBACpC,CAAC;aACL;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,cAAc,CAAC,OAAW;QAC9B,IAAI,CAAC,gBAAgB,CAAE,GAAE,EAAE,CACvB,oBAAa,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CACrF,CAAC;IACN,CAAC;IAEO,gBAAgB,CAAC,IAAc;QACnC,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,EAAE,CAAC;SACV;aAAM;YACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;IACL,CAAC;IAEO,sBAAsB,CAAC,OAAe;QAC1C,IAAI,OAAO,KAAK,SAAS,EAAE;YACvB,IAAI,IAAI,CAAC,KAAK,CAAC,8BAA8B,EAAE;gBAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,8BAA8B,CAAC;aACpD;YACD,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;gBAC9B,OAAO,oDAA2B,CAAC,aAAa,CAAC;aACpD;SACJ;QAED,iDAAiD;QACjD,OAAO,oDAA2B,CAAC,cAAc,CAAC;IACtD,CAAC;IAEO,qBAAqB;QACzB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;YAC5D,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;IACtH,CAAC;CACJ;AA9MD,sCA8MC;AAED,MAAM,8BAA+B,SAAQ,2BAAwC;IAIjF,YAAY,MAAqB;QAC7B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,kBAAmC,EAAE,aAA4B;QAC3E,OAAO,IAAI,qCAAiB,CAAC,kBAAkB,EAAE,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IACjF,CAAC;CACJ","file":"agGridReactUi.js","sourcesContent":["import { BaseComponentWrapper, CtrlsService, ColumnApi, ComponentType, ComponentUtil, Context, FrameworkComponentWrapper, GridApi, GridCoreCreator, GridOptions, GridParams, WrappableInterface, _ } from '@ag-grid-community/core';\nimport React, { Component } from 'react';\nimport { AgGridColumn } from '../shared/agGridColumn';\nimport { ChangeDetectionService, ChangeDetectionStrategyType } from '../shared/changeDetectionService';\nimport { AgReactUiProps } from '../shared/interfaces';\nimport { NewReactComponent } from '../shared/newReactComponent';\nimport { PortalManager } from '../shared/portalManager';\nimport GridComp from './gridComp';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides';\n\nexport class AgGridReactUi extends Component<AgReactUiProps, { context: Context | undefined }> {\n\n    public api!: GridApi;\n    public columnApi!: ColumnApi;\n\n    private gridOptions!: GridOptions;\n\n    private destroyFuncs: (() => void)[] = [];\n    private changeDetectionService = new ChangeDetectionService();\n    private eGui = React.createRef<HTMLDivElement>();\n\n    private portalManager: PortalManager;\n\n    private whenReadyFuncs: (()=>void)[] = [];\n    private ready = false;\n\n    constructor(public props: any) {\n        super(props);\n        this.state = {context: undefined};\n        this.portalManager = new PortalManager(this, props.componentWrappingElement, props.maxComponentCreationTimeMs);\n    }\n\n    public render() {\n        return (\n            <div style={ this.createStyleForDiv() } className={ this.props.className } ref={ this.eGui }>\n                { this.state.context && <GridComp context={ this.state.context }/> }\n                { this.portalManager.getPortals() }\n            </div>\n        );\n    }\n\n    private createStyleForDiv() {\n        return {\n            height: '100%',\n            ...(this.props.containerStyle || {})\n        };\n    }\n\n    public componentDidMount() {\n\n        const modules = this.props.modules || [];\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this.portalManager)\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(true)\n        };\n\n        this.gridOptions = this.props.gridOptions || {};\n        const {children} = this.props;\n\n        if (AgGridColumn.hasChildColumns(children)) {\n            this.gridOptions.columnDefs = AgGridColumn.mapChildColumnDefs(children);\n        }\n\n        this.gridOptions = ComponentUtil.copyAttributesToGridOptions(this.gridOptions, this.props);\n\n        const createUiCallback = (context: Context) => {\n            this.setState({context: context});\n\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady( ()=> {\n                this.api = this.gridOptions.api!;\n                this.columnApi = this.gridOptions.columnApi!;\n                this.props.setGridApi(this.api, this.columnApi);    \n                this.destroyFuncs.push(() => this.api.destroy());\n            });\n        };\n\n        // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n        // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n        // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n        const acceptChangesCallback = (context: Context)=> {\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady( ()=> {\n                this.whenReadyFuncs.forEach( f => f() );\n                this.whenReadyFuncs.length = 0;\n                this.ready = true;\n            });\n        }\n\n        // don't need the return value\n        const gridCoreCreator = new GridCoreCreator();\n        gridCoreCreator.create(this.eGui.current!, this.gridOptions, createUiCallback, acceptChangesCallback, gridParams);\n    }\n\n    public componentWillUnmount() {\n        this.destroyFuncs.forEach(f => f());\n    }\n\n    public componentDidUpdate(prevProps: any) {\n        this.processPropsChanges(prevProps, this.props);\n    }\n\n    public processPropsChanges(prevProps: any, nextProps: any) {\n        const changes = {};\n\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n        this.extractDeclarativeColDefChanges(nextProps, changes);\n\n        this.processChanges(changes);\n    }\n\n    private extractDeclarativeColDefChanges(nextProps: any, changes: any) {\n        // if columnDefs are provided on gridOptions we use those - you can't combine both\n        // we also skip if columnDefs are provided as a prop directly on AgGridReact\n        if ((this.props.gridOptions && this.props.gridOptions.columnDefs) || this.props.columnDefs) {\n            return;\n        }\n\n        const debugLogging = !!nextProps.debug;\n        const propKey = 'columnDefs';\n        const currentColDefs = this.gridOptions.columnDefs;\n\n        if (AgGridColumn.hasChildColumns(nextProps.children)) {\n            const detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n            const newColDefs = AgGridColumn.mapChildColumnDefs(nextProps.children);\n\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n                if (debugLogging) {\n                    console.log(`agGridReact: colDefs definitions changed`);\n                }\n\n                changes[propKey] =\n                    {\n                        previousValue: currentColDefs,\n                        currentValue: newColDefs\n                    };\n            }\n        } else if (currentColDefs && currentColDefs.length > 0) {\n            changes[propKey] =\n                {\n                    previousValue: currentColDefs,\n                    currentValue: []\n                };\n        }\n    }\n\n    private extractGridPropertyChanges(prevProps: any, nextProps: any, changes: any) {\n        const debugLogging = !!nextProps.debug;\n\n        Object.keys(nextProps).forEach(propKey => {\n            if (_.includes(ComponentUtil.ALL_PROPERTIES, propKey)) {\n                const changeDetectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n\n                if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n                    if (debugLogging) {\n                        console.log(`agGridReact: [${propKey}] property changed`);\n                    }\n\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n\n        ComponentUtil.getEventCallbacks().forEach(funcName => {\n            if (prevProps[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(`agGridReact: [${funcName}] event callback changed`);\n                }\n\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    }\n\n    private processChanges(changes: {}) {\n        this.processWhenReady( ()=>\n            ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi)\n        );\n    }\n\n    private processWhenReady(func: ()=>void): void {\n        if (this.ready) {\n            func();\n        } else {\n            this.whenReadyFuncs.push(func);\n        }\n    }\n\n    private getStrategyTypeForProp(propKey: string) {\n        if (propKey === 'rowData') {\n            if (this.props.rowDataChangeDetectionStrategy) {\n                return this.props.rowDataChangeDetectionStrategy;\n            }\n            if (this.isImmutableDataActive()) {\n                return ChangeDetectionStrategyType.IdentityCheck;\n            }\n        }\n\n        // all other cases will default to DeepValueCheck\n        return ChangeDetectionStrategyType.DeepValueCheck;\n    }\n\n    private isImmutableDataActive() {\n        return (this.props.deltaRowDataMode || this.props.immutableData) ||\n            (this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData));\n    }\n}\n\nclass ReactFrameworkComponentWrapper extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private readonly parent: PortalManager;    \n\n    constructor(parent: PortalManager) {\n        super();\n        this.parent = parent;\n    }\n\n    createWrapper(UserReactComponent: { new(): any; }, componentType: ComponentType): WrappableInterface {\n        return new NewReactComponent(UserReactComponent, this.parent, componentType);\n    }\n}\n"]}