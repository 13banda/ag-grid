{"version":3,"sources":["reactUi/gridBodyComp.tsx"],"names":[],"mappings":"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","file":"gridBodyComp.js","sourcesContent":["import { GridBodyCtrl, IGridBodyComp, RowContainerName } from '@ag-grid-community/core';\nimport React, { memo, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from './beansContext';\nimport GridHeaderComp from './header/gridHeaderComp';\nimport useReactCommentEffect from './reactComment';\nimport RowContainerComp from './rows/rowContainerComp';\nimport { useEffectOnce } from './useEffectOnce';\nimport { classesList } from './utils';\n\ninterface SectionProperties {\n    section: React.RefObject<HTMLDivElement>;\n    className: string;\n    style?: React.CSSProperties;\n}\n\nconst GridBodyComp = () => {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [rowAnimationClass, setRowAnimationClass] = useState<string>('');\n    const [ariaColCount, setAriaColCount] = useState<number>(0);\n    const [ariaRowCount, setAriaRowCount] = useState<number>(0);\n    const [topHeight, setTopHeight] = useState<number>(0);\n    const [bottomHeight, setBottomHeight] = useState<number>(0);\n    const [topDisplay, setTopDisplay] = useState<string>('');\n    const [bottomDisplay, setBottomDisplay] = useState<string>('');\n    const [movingCss, setMovingCss] = useState<string | null>(null);\n    const [forceVerticalScrollClass, setForceVerticalScrollClass] = useState<string | null>(null);\n    const [topAndBottomOverflowY, setTopAndBottomOverflowY] = useState<string>('');\n    const [cellSelectableCss, setCellSelectableCss] = useState<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [layoutClass, setLayoutClass] = useState<string>('ag-layout-normal');\n\n    const eRoot = useRef<HTMLDivElement>(null);\n    const eTop = useRef<HTMLDivElement>(null);\n    const eBodyViewport = useRef<HTMLDivElement>(null);\n    const eBottom = useRef<HTMLDivElement>(null);\n\n    useReactCommentEffect(' AG Grid Body ', eRoot);\n    useReactCommentEffect(' AG Pinned Top ', eTop);\n    useReactCommentEffect(' AG Middle ', eBodyViewport);\n    useReactCommentEffect(' AG Pinned Bottom ', eBottom);\n\n    useEffectOnce( () => {\n        const beansToDestroy: any[] = [];\n        const destroyFuncs: (() => void)[] = [];\n\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            beansToDestroy.push(comp);\n            return comp;\n        };\n\n        eRoot.current!.appendChild(document.createComment(' AG Fake Horizontal Scroll '));\n        eRoot.current!.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n\n        eRoot.current!.appendChild(document.createComment(' AG Overlay Wrapper '));\n        eRoot.current!.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight: setTopHeight,\n            setBottomHeight: setBottomHeight,\n            setTopDisplay: setTopDisplay,\n            setBottomDisplay: setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: setCellSelectableCss,\n\n            registerBodyViewportResizeListener: listener => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport.current!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        beansToDestroy.push(ctrl);\n        ctrl.setComp(compProxy, eRoot.current!, eBodyViewport.current!, eTop.current!, eBottom.current!);\n\n        return () => {\n            context.destroyBeans(beansToDestroy);\n            destroyFuncs.forEach(f => f());\n        };\n\n    });\n\n    const rootClasses = useMemo( ()=> \n        classesList('ag-root','ag-unselectable', movingCss, layoutClass), \n        [movingCss, layoutClass]\n    );\n    const bodyViewportClasses = useMemo( ()=> \n        classesList('ag-body-viewport', rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss), \n        [rowAnimationClass, layoutClass, forceVerticalScrollClass, cellSelectableCss]\n    );\n    const topClasses = useMemo( ()=> \n        classesList('ag-floating-top', cellSelectableCss), \n        [cellSelectableCss]\n    );\n    const bottomClasses = useMemo( ()=> \n        classesList('ag-floating-bottom', cellSelectableCss), \n        [cellSelectableCss]\n    );\n\n    const topStyle: React.CSSProperties = useMemo( () => ({\n        height: topHeight,\n        minHeight: topHeight,\n        display: topDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [topHeight, topDisplay, topAndBottomOverflowY]);\n\n    const bottomStyle: React.CSSProperties = useMemo( ()=> ({\n        height: bottomHeight,\n        minHeight: bottomHeight,\n        display: bottomDisplay,\n        overflowY: (topAndBottomOverflowY as any)\n    }), [bottomHeight, bottomDisplay, topAndBottomOverflowY]);\n\n    const createRowContainer = (container: RowContainerName) => <RowContainerComp name={ container } key={`${container}-container`} />;\n    const createSection = ({\n        section, \n        children,\n        className, \n        style\n    }: SectionProperties & { children: RowContainerName[] } ) => (\n        <div ref={ section } className={ className } role=\"presentation\" style={ style }>\n            { children.map(createRowContainer) }\n        </div>\n    );\n\n    return (\n        <div ref={ eRoot } className={ rootClasses } role=\"grid\" aria-colcount={ ariaColCount } aria-rowcount={ ariaRowCount }>\n            <GridHeaderComp/>\n            { createSection({ section: eTop, className: topClasses, style: topStyle, children: [\n                RowContainerName.TOP_LEFT,\n                RowContainerName.TOP_CENTER,\n                RowContainerName.TOP_RIGHT,\n                RowContainerName.TOP_FULL_WIDTH,\n            ]}) }\n            { createSection({ section: eBodyViewport, className: bodyViewportClasses, children: [\n                RowContainerName.LEFT,\n                RowContainerName.CENTER,\n                RowContainerName.RIGHT,\n                RowContainerName.FULL_WIDTH,\n            ]}) }\n            { createSection({ section: eBottom, className: bottomClasses, style: bottomStyle, children: [\n                RowContainerName.BOTTOM_LEFT,\n                RowContainerName.BOTTOM_CENTER,\n                RowContainerName.BOTTOM_RIGHT,\n                RowContainerName.BOTTOM_FULL_WIDTH,\n            ]}) }\n        </div>\n    );\n};\n\nexport default memo(GridBodyComp);\n"]}