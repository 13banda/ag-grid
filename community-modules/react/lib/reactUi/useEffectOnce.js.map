{"version":3,"sources":["reactUi/useEffectOnce.tsx"],"names":[],"mappings":";;;AAAA,iCAA0C;AAE1C,SAAS,KAAK,CAAC,GAAW;IACtB,oDAAoD;IACpD,oBAAoB;AACxB,CAAC;AAEY,QAAA,aAAa,GAAG,CAAE,MAAiC,EAAE,QAAgB,EAAE,EAAE;IAClF,MAAM,WAAW,GAAG,cAAM,EAAyB,CAAC;IACpD,MAAM,UAAU,GAAG,cAAM,CAAC,KAAK,CAAC,CAAC;IACjC,MAAM,iBAAiB,GAAG,cAAM,CAAC,KAAK,CAAC,CAAC;IAExC,IAAI,UAAU,CAAC,OAAO,EAAE;QACpB,iBAAiB,CAAC,OAAO,GAAG,IAAI,CAAC;KACpC;IAED,iBAAS,CAAE,GAAE,EAAE;QACX,IAAI,UAAU,CAAC,OAAO,EAAE;YACpB,KAAK,CAAC,8BAA8B,QAAQ,EAAE,CAAC,CAAC;YAChD,OAAO;SACV;QAED,KAAK,CAAC,yBAAyB,QAAQ,EAAE,CAAC,CAAC;QAE3C,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;QAC1B,WAAW,CAAC,OAAO,GAAG,MAAM,EAAE,CAAC;QAE/B,OAAO,GAAE,EAAE;YACP,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;gBAC5B,KAAK,CAAC,8BAA8B,QAAQ,EAAE,CAAC,CAAC;gBAChD,OAAO;aACV;YAED,KAAK,CAAC,yBAAyB,QAAQ,EAAE,CAAC,CAAC;YAE3C,IAAI,WAAW,CAAC,OAAO,EAAE;gBACrB,WAAW,CAAC,OAAO,EAAE,CAAC;aACzB;QACL,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC,CAAC;AACX,CAAC,CAAC","file":"useEffectOnce.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction debug(msg: string) {\n    // uncomment this out to get debugging for this file\n    // console.log(msg);\n}\n\nexport const useEffectOnce = ( effect: ()=>( void | (()=>void) ), location: string )=> {\n    const destroyFunc = useRef<( void | (()=>void) )>();\n    const calledOnce = useRef(false);\n    const renderAfterCalled = useRef(false);\n\n    if (calledOnce.current) {\n        renderAfterCalled.current = true;\n    }\n\n    useEffect( ()=> {\n        if (calledOnce.current) { \n            debug(`useEffectOnce skip execute ${location}`);\n            return; \n        }\n\n        debug(`useEffectOnce execute ${location}`);\n\n        calledOnce.current = true;\n        destroyFunc.current = effect();\n\n        return ()=> {\n            if (!renderAfterCalled.current) {\n                debug(`useEffectOnce skip destroy ${location}`);\n                return;\n            }\n\n            debug(`useEffectOnce destroy ${location}`);\n\n            if (destroyFunc.current) {\n                destroyFunc.current();\n            }\n        };\n    }, []);\n};\n"]}