{"version":3,"sources":["../../../src/ts/widgets/agAbstractField.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,eAAe,EAAY,MAAM,mBAAmB,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAG7C;IAA2F,mCAAwB;IAM/G,yBAAY,MAAgB,EAAE,QAAiB,EAAqB,SAAkB;QAAtF,YACI,kBAAM,MAAM,EAAE,QAAQ,CAAC,SAC1B;QAFmE,eAAS,GAAT,SAAS,CAAS;;IAEtF,CAAC;IAES,uCAAa,GAAvB;QACI,iBAAM,aAAa,WAAE,CAAC;QAEtB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;IACL,CAAC;IAEM,uCAAa,GAApB,UAAqB,UAA8C;QAAnE,iBAIC;QAHG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,eAAe,CAAC,aAAa,EAAE,cAAM,OAAA,UAAU,CAAC,KAAI,CAAC,QAAQ,EAAE,CAAC,EAA3B,CAA2B,CAAC,CAAC;QAEhG,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,kCAAQ,GAAf;QACI,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC;IACrC,CAAC;IAEM,kCAAQ,GAAf,UAAgB,KAAa;QACzB,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,0CAAgB,GAAvB;QACI,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEM,kCAAQ,GAAf;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,kCAAQ,GAAf,UAAgB,KAAqB,EAAE,MAAgB;QACnD,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACtB,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,MAAM,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,eAAe,CAAC,aAAa,EAAE,CAAC,CAAC;SAC/D;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAtDa,6BAAa,GAAG,aAAa,CAAC;IAuDhD,sBAAC;CAxDD,AAwDC,CAxD0F,eAAe,GAwDzG;SAxDqB,eAAe","file":"agAbstractField.js","sourcesContent":["import { AgAbstractLabel, IAgLabel } from './agAbstractLabel';\nimport { setFixedWidth } from '../utils/dom';\n\nexport type FieldElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\nexport abstract class AgAbstractField<TValue, TConfig extends IAgLabel = IAgLabel> extends AgAbstractLabel<TConfig> {\n    public static EVENT_CHANGED = 'valueChange';\n\n    protected previousValue: TValue | null | undefined;\n    protected value: TValue | null | undefined;\n\n    constructor(config?: TConfig, template?: string, protected readonly className?: string) {\n        super(config, template);\n    }\n\n    protected postConstruct(): void {\n        super.postConstruct();\n\n        if (this.className) {\n            this.addCssClass(this.className);\n        }\n    }\n\n    public onValueChange(callbackFn: (newValue?: TValue | null) => void) {\n        this.addManagedListener(this, AgAbstractField.EVENT_CHANGED, () => callbackFn(this.getValue()));\n\n        return this;\n    }\n\n    public getWidth(): number {\n        return this.getGui().clientWidth;\n    }\n\n    public setWidth(width: number): this {\n        setFixedWidth(this.getGui(), width);\n\n        return this;\n    }\n\n    public getPreviousValue(): TValue | null | undefined {\n        return this.previousValue;\n    }\n\n    public getValue(): TValue | null | undefined {\n        return this.value;\n    }\n\n    public setValue(value?: TValue | null, silent?: boolean): this {\n        if (this.value === value) {\n            return this;\n        }\n\n        this.previousValue = this.value;\n        this.value = value;\n\n        if (!silent) {\n            this.dispatchEvent({ type: AgAbstractField.EVENT_CHANGED });\n        }\n\n        return this;\n    }\n}\n"]}