{"version":3,"sources":["../../../src/ts/rendering/cssClassManager.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM,OAAO,eAAe;IAQxB,YAAY,MAAyB;QAJrC,8GAA8G;QAC9G,6DAA6D;QACrD,mBAAc,GAAoC,EAAE,CAAC;QAGzD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,SAAiB;QAChC,MAAM,IAAI,GAAG,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3C,OAAO;SACV;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC;QAC7D,IAAI,YAAY,IAAI,SAAS,CAAC,MAAM,EAAE;YAClC,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;SACzC;IACL,CAAC;IAEM,cAAc,CAAC,SAAiB;QACnC,MAAM,IAAI,GAAG,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,OAAO;SACV;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC;QAC9D,IAAI,YAAY,IAAI,SAAS,CAAC,MAAM,EAAE;YAClC,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;SAC1C;IACL,CAAC;IAEM,gBAAgB,CAAC,SAAiB;QACrC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAEM,mBAAmB,CAAC,SAAiB,EAAE,WAAoB;QAC9D,IAAI,CAAC,SAAS,EAAE;YAAE,OAAO;SAAE;QAE3B,iEAAiE;QACjE,+DAA+D;QAC/D,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC7B,MAAM,IAAI,GAAG,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC;gBAChE,OAAO;aACV;SACJ;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC;QACpE,IAAI,YAAY,IAAI,SAAS,CAAC,MAAM,EAAE;YAClC,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;YACvD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;SAChD;IACL,CAAC;CACJ","file":"cssClassManager.js","sourcesContent":["export class CssClassManager {\n\n    private getGui: () => HTMLElement;\n\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\n    // there, or removing one that wasn't present, all takes CPU.\n    private cssClassStates: { [cssClass: string]: boolean } = {};\n\n    constructor(getGui: () => HTMLElement) {\n        this.getGui = getGui;\n    }\n\n    public addCssClass(className: string): void {\n        const list = (className || '').split(' ');\n\n        if (list.length > 1) {\n            list.forEach(cls => this.addCssClass(cls));\n            return;\n        }\n\n        const updateNeeded = this.cssClassStates[className] !== true;\n        if (updateNeeded && className.length) {\n            this.getGui().classList.add(className);\n            this.cssClassStates[className] = true;\n        }\n    }\n\n    public removeCssClass(className: string): void {\n        const list = (className || '').split(' ');\n\n        if (list.length > 1) {\n            list.forEach(cls => this.removeCssClass(cls));\n            return;\n        }\n\n        const updateNeeded = this.cssClassStates[className] !== false;\n        if (updateNeeded && className.length) {\n            this.getGui().classList.remove(className);\n            this.cssClassStates[className] = false;\n        }\n    }\n\n    public containsCssClass(className: string): boolean {\n        return this.getGui().classList.contains(className);\n    }\n\n    public addOrRemoveCssClass(className: string, addOrRemove: boolean): void {\n        if (!className) { return; }\n\n        // we check for spaces before doing the split, as doing the split\n        // created a performance problem (on windows only, see AG-6765)\n        if (className.indexOf(' ') >= 0) {\n            const list = (className || '').split(' ');\n            if (list.length > 1) {\n                list.forEach(cls => this.addOrRemoveCssClass(cls, addOrRemove));\n                return;\n            }\n        }\n\n        const updateNeeded = this.cssClassStates[className] !== addOrRemove;\n        if (updateNeeded && className.length) {\n            this.getGui().classList.toggle(className, addOrRemove);\n            this.cssClassStates[className] = addOrRemove;\n        }\n    }\n}"]}