{"version":3,"file":"index.js","sources":["../../src/grid/core/solidCompWrapper.tsx","../../src/grid/core/solidCompWrapperFactory.tsx","../../src/grid/core/beansContext.tsx","../../src/grid/core/utils.tsx","../../src/grid/cellRenderer/detailCellRenderer.tsx","../../src/grid/userComps/jsUserComp.tsx","../../src/grid/userComps/solidUserComp.tsx","../../src/grid/userComps/userComp.tsx","../../src/grid/cellRenderer/groupCellRenderer.tsx","../../src/grid/core/solidFrameworkOverrides.tsx","../../src/grid/header/headerCellComp.tsx","../../src/grid/header/headerFilterCellComp.tsx","../../src/grid/header/headerGroupCellComp.tsx","../../src/grid/header/headerRowComp.tsx","../../src/grid/header/headerRowContainerComp.tsx","../../src/grid/header/gridHeaderComp.tsx","../../src/grid/cells/popupEditorComp.tsx","../../src/grid/cells/showEditDetails.tsx","../../src/grid/cells/showRenderDetails.tsx","../../src/grid/cells/cellComp.tsx","../../src/grid/rows/rowComp.tsx","../../src/grid/rows/rowContainerComp.tsx","../../src/grid/gridBodyComp.tsx","../../src/grid/tabGuardComp.tsx","../../src/grid/gridComp.tsx","../../src/grid/agGridSolid.tsx","../../src/index.tsx"],"sourcesContent":["import { WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalInfo, PortalManager } from \"../agGridSolid\";\n\nexport default class SolidCompWrapper implements WrappableInterface {\n\n    private eGui?: HTMLElement;\n    private SolidCompClass: any;\n\n    private portalManager: PortalManager;\n    private portalInfo?: PortalInfo;\n\n    private instance: any;\n\n    constructor(SolidCompClass: any, portalManager: PortalManager) {\n        this.SolidCompClass = SolidCompClass;        \n        this.portalManager = portalManager;\n    }\n\n    public init(props: any): void {\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-solid-container';\n        this.portalInfo = {\n            mount: this.eGui,\n            SolidClass: this.SolidCompClass,\n            props,\n            ref: instance => {\n                this.instance = instance;\n            }\n        };\n        this.portalManager.addPortal(this.portalInfo);\n    }\n\n    public destroy(): void {\n        this.portalInfo && this.portalManager.removePortal(this.portalInfo);\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui!;\n    }\n\n    public hasMethod(name: string): boolean {\n        return this.instance[name] != null;\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this.instance;\n    }\n\n    public callMethod(name: string, args: IArguments): void {\n        return this.instance[name].apply(this.instance, args);\n    }\n\n    public addMethod(name: string, callback: Function): void {\n        (this as any)[name] = callback;\n    }\n\n}\n","import { BaseComponentWrapper, FrameworkComponentWrapper, WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalManager } from \"../agGridSolid\";\nimport SolidCompWrapper from \"./solidCompWrapper\";\n\nexport default class SolidCompWrapperFactory extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private portalManager: PortalManager;\n\n    constructor(portalManager: PortalManager) {\n        super();\n        this.portalManager = portalManager;\n    }\n\n    createWrapper(SolidComponentClass: any): WrappableInterface {\n        return new SolidCompWrapper(SolidComponentClass, this.portalManager);\n    }\n}\n","import { Beans } from '@ag-grid-community/core';\nimport { createContext } from \"solid-js\";\n\nexport const BeansContext = createContext<Beans>({} as Beans);\n","export const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    constructor(...initialClasses: string[]) {\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}\n\nexport interface RefPointer<T> {\n    instance?: T;\n    afterSet?: (ref: T)=>void;\n}","import { GridOptions, IDetailCellRenderer, IDetailCellRendererCtrl, IDetailCellRendererParams } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport AgGridSolid, { AgGridSolidRef } from '../agGridSolid';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\n\nconst DetailCellRenderer = (props: IDetailCellRendererParams) => {\n\n    const {ctrlsFactory, context, \n            gridOptionsWrapper, resizeObserverService, \n            clientSideRowModel, serverSideRowModel} = useContext(BeansContext);\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getGridCssClasses, setGridCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getDetailGridOptions, setDetailGridOptions] = createSignal<GridOptions>();\n    const [getDetailRowData, setDetailRowData] = createSignal<any[]>();\n\n    let ctrl: IDetailCellRendererCtrl;\n    let eGuiRef: HTMLDivElement;\n\n    const getCssClassesStr = createMemo(() => getCssClasses().toString() + ' ag-details-row');\n    const getGridCssClassesStr = createMemo(() => getGridCssClasses().toString() + ' ag-details-grid');\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return ctrl.refresh(); }\n    }));\n\n    onMount(() => {\n        if (props.template && typeof props.template === 'string') {\n            console.warn('AG Grid: detailCellRendererParams.template is not supported by Solid - this only works with frameworks that work against String templates. To change the template, please provide your own Solid Detail Cell Renderer.');\n        }\n\n        const compProxy: IDetailCellRenderer = {\n            addOrRemoveCssClass: (name: string, on: boolean) => setCssClasses(getCssClasses().setClass(name, on)),\n            addOrRemoveDetailGridCssClass: (name: string, on: boolean) => setGridCssClasses(getGridCssClasses().setClass(name, on)),\n            setDetailGrid: gridOptions => setDetailGridOptions(gridOptions),\n            setRowData: rowData => setDetailRowData(rowData),\n            getGui: () => eGuiRef\n        };\n\n        ctrl = ctrlsFactory.getInstance('detailCellRenderer') as IDetailCellRendererCtrl;\n        if (!ctrl) { return; } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n\n        ctrl.init(compProxy, props);\n\n        let resizeObserverDestroyFunc: () => void;\n\n        if (gridOptionsWrapper.isDetailRowAutoHeight()) {\n            const checkRowSizeFunc = () => {\n                // when disposed, current is null, so nothing to do, and the resize observer will\n                // be disposed of soon\n                if (eGuiRef==null) { return; }\n\n                const clientHeight = eGuiRef.clientHeight;\n\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    const updateRowHeightFunc = () => {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        } else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n    \n            resizeObserverDestroyFunc = resizeObserverService.observeResize(eGuiRef, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n\n        return () => {\n            context.destroyBean(ctrl);\n            if (resizeObserverDestroyFunc) {\n                resizeObserverDestroyFunc();\n            }\n        };\n    });\n\n    const setRef = (ref: AgGridSolidRef) => {\n        ctrl.registerDetailWithMaster(ref.api, ref.columnApi)\n    };\n\n    return (\n        <div class={getCssClassesStr()} ref={eGuiRef!}>\n            {\n                getDetailGridOptions() &&\n                <AgGridSolid class={getGridCssClassesStr()} {...getDetailGridOptions()} rowData={getDetailRowData()} ref={ setRef }></AgGridSolid> \n            }\n        </div>\n    );\n};\n\nexport default DetailCellRenderer;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\n\nconst JsUserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: (ref: any)=>void\n})=> {\n    const { context } = useContext(BeansContext);\n\n    const promise = p.compDetails.newAgStackInstance();\n    if (!promise) { return <></>; }\n\n    const comp = promise.resolveNow(null, (x: any) => x); // js comps are never async\n    if (!comp) { return <></>; }\n    p.ref && p.ref(comp);\n\n    const gui = comp.getGui();\n\n    onCleanup( ()=> {\n        comp && context.destroyBean(comp);\n        p.ref && p.ref(undefined);\n    });\n\n    return <>{gui}</>;\n};\n\nexport default JsUserComp;","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup } from 'solid-js';\n\nconst SolidUserComp = (props: {\n    compDetails: UserCompDetails, \n    ref?: any\n})=> {\n    const SolidClass = props.compDetails.componentClass;\n\n    let refSet = false;\n\n    const setRef = (ref: any)=> {\n        if (!props.ref) { return; }\n        props.ref(ref);\n        refSet = true;\n    };\n\n    onCleanup( ()=> {\n        if (refSet) {\n            props.ref && props.ref(undefined);\n        }\n    });\n\n    return <SolidClass ref={setRef} { ...props.compDetails.params }/>;\n};\n\nexport default SolidUserComp;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport JsUserComp from './jsUserComp';\nimport SolidUserComp from './solidUserComp';\n\nconst UserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: any\n})=> {\n    \n    const showSolidComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <>\n            { showSolidComp() \n                && <SolidUserComp compDetails={p.compDetails} ref={p.ref} /> }\n            { showJsComp() \n                && <JsUserComp compDetails={p.compDetails} ref={p.ref} /> }\n        </>\n    );\n};\n\nexport default UserComp;\n","import { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer, UserCompDetails, _ } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport { BeansContext } from \"../core/beansContext\";\nimport { CssClasses } from \"../core/utils\";\nimport UserComp from \"../userComps/userComp\";\n\nconst GroupCellRenderer = (props: GroupCellRendererParams) => {\n\n    const context = useContext(BeansContext).context!;\n\n    let eGui: HTMLElement;\n    let eValueRef: HTMLElement;\n    let eCheckboxRef: HTMLElement;\n    let eExpandedRef: HTMLElement;\n    let eContractedRef: HTMLElement;\n\n    const [getInnerCompDetails, setInnerCompDetails] = createSignal<UserCompDetails>();\n    const [getChildCount, setChildCount] = createSignal<string>();\n    const [getValue, setValue] = createSignal<any>();\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getExpandedCssClasses, setExpandedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getContractedCssClasses, setContractedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getCheckboxCssClasses, setCheckboxCssClasses] = createSignal<CssClasses>(new CssClasses('ag-invisible'));\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return false; }\n    }));\n\n    onMount( ()=> {\n\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (details, valueToDisplay) => {\n                setInnerCompDetails(details);\n                const escapedValue = _.escapeString(valueToDisplay, true);\n                setValue(escapedValue);\n            },\n            setChildCount: count => setChildCount(count),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setContractedDisplayed: displayed => setContractedCssClasses(getContractedCssClasses().setClass('ag-hidden', !displayed)),\n            setExpandedDisplayed: displayed => setExpandedCssClasses(getExpandedCssClasses().setClass('ag-hidden', !displayed)),\n            setCheckboxVisible: visible => setCheckboxCssClasses(getCheckboxCssClasses().setClass('ag-invisible', !visible))\n        };\n\n        const ctrl = context.createBean(new GroupCellRendererCtrl());\n        ctrl.init(compProxy, eGui, eCheckboxRef, eExpandedRef, eContractedRef, GroupCellRenderer, props);\n\n        return () => { context.destroyBean(ctrl);};\n    });\n\n    const getClassName = createMemo(() => `ag-cell-wrapper ${getCssClasses().toString()}`);\n    const getExpandedClassName = createMemo(() => `ag-group-expanded ${getExpandedCssClasses().toString()}`);\n    const getContractedClassName = createMemo(() => `ag-group-contracted ${getContractedCssClasses().toString()}`);\n    const getCheckboxClassName = createMemo(() => `ag-group-checkbox ${getCheckboxCssClasses().toString()}`);\n\n    const isShowUserComp = ()=> getInnerCompDetails() != null;\n    const isShowValue = ()=> getInnerCompDetails() == null && getValue() != null;\n\n    return (\n        <span class={getClassName()} ref={eGui!} {...(!props.colDef ? { role: 'gridcell' } : {})}>\n            <span class={getExpandedClassName()} ref={eExpandedRef!}></span>\n            <span class={getContractedClassName()} ref={eContractedRef!}></span>\n            <span class={getCheckboxClassName()} ref={eCheckboxRef!}></span>\n            <span class=\"ag-group-value\" ref={eValueRef!}>\n                { isShowUserComp() && <UserComp compDetails={getInnerCompDetails()!}></UserComp>}\n                { isShowValue() && <>{getValue()}</> }\n            </span>\n            <span class=\"ag-group-child-count\">{getChildCount()}</span>\n        </span>\n    );\n};\n\n// we do not memo() here, as it would stop the forwardRef working\nexport default GroupCellRenderer;\n","import { VanillaFrameworkOverrides } from \"@ag-grid-community/core\";\nimport DetailCellRenderer from \"../cellRenderer/detailCellRenderer\";\nimport GroupCellRenderer from \"../cellRenderer/groupCellRenderer\";\n\nexport class SolidFrameworkOverrides extends VanillaFrameworkOverrides {\n\n    constructor() {\n        super();\n    }\n\n    private frameworkComponents: any = {\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agDetailCellRenderer: DetailCellRenderer\n    };\n\n    public frameworkComponent(name: string): any {\n        return this.frameworkComponents[name];\n    }\n\n    isFrameworkComponent(comp: any): boolean {\n        if (!comp) { return false; }\n        const prototype = comp.prototype;\n        const isJsComp = prototype && 'getGui' in prototype;\n        return !isJsComp;\n    }\n}","import { ColumnSortState, CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl})=> {\n\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getTitle, setTitle] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>();\n    const [getAriaSort, setAriaSort] = createSignal<ColumnSortState>();\n    const [getAriaDescription, setAriaDescription] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement\n    let eHeaderCompWrapper: HTMLDivElement\n    \n    let userComp: IHeader | undefined;\n\n    const setRef = (ref: any) => {\n        userComp = ref;\n    }\n\n    const clearRef = (ref: any) => {\n        if (userComp===ref) {\n            userComp = undefined;\n        }\n    }\n\n    const { ctrl } = props;\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    onMount(() => {\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n\n            setAriaDescription: description => setAriaDescription(description),\n            setAriaSort: sort => setAriaSort(sort),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: () => userComp\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize, eHeaderCompWrapper);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.insertAdjacentElement('afterend', selectAllGui);\n        ctrl.setDragSource(eGui);\n    });\n\n    const style = createMemo(() => ({ width: getWidth() }));\n\n    const showSolidComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <div\n            ref={eGui!}\n            class=\"ag-header-cell\"\n            style={ style() }\n            title={ getTitle() }\n            col-id={ getColId() }\n            aria-sort={ getAriaSort() }\n            role=\"columnheader\"\n            tabIndex={-1}\n            aria-description={ getAriaDescription() }\n        >\n            <div ref={eResize!} class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref={eHeaderCompWrapper!} class=\"ag-header-cell-comp-wrapper\" role=\"presentation\">\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} ref={setRef} /> }\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderCellComp;\n","import { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssBodyClasses, setBodyCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssButtonWrapperClasses, setButtonWrapperCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eFloatingFilterBody: HTMLDivElement;\n    let eButtonWrapper: HTMLDivElement;\n    let eButtonShowMainFilter: HTMLButtonElement;\n\n    let alreadyResolved = false;\n    let userCompResolve: (value: IFloatingFilter)=>void;\n    let userCompPromise: AgPromise<IFloatingFilter>;\n    onMount( ()=> {\n        userCompPromise = new AgPromise<IFloatingFilter>( resolve => {\n            userCompResolve = resolve;\n        });\n    });\n    \n    const setRef = (value: IFloatingFilter) => {\n        // i don't know why, but react was calling this method multiple\n        // times, thus un-setting, them immediately setting the reference again.\n        // because we are resolving a promise, it's not good to be resolving\n        // the promise multiple times, so we only resolve the first time.\n        if (alreadyResolved) { return; }\n        // we also skip when it's un-setting\n        if (value==null) { return; }\n\n        userCompResolve && userCompResolve(value);\n        alreadyResolved = true;\n    };\n\n    const { ctrl } = props;\n\n    onMount(() => {\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveButtonWrapperCssClass: (name, on) => setButtonWrapperCssClasses(prev => prev.setClass(name, on)),\n            setWidth: width => setWidth(width),\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompPromise,\n            setMenuIcon: eIcon => eButtonShowMainFilter.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui, eButtonShowMainFilter, eFloatingFilterBody);\n\n    });\n\n    const getStyle = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getCssClassesString = createMemo( ()=> 'ag-header-cell ag-floating-filter ' + getCssClasses.toString() );\n    const getBodyCssClassesString = createMemo( ()=> getCssBodyClasses.toString(), );\n    const getButtonWrapperCssClassesString = createMemo( ()=> 'ag-floating-filter-button ' + getCssButtonWrapperClasses.toString() );\n    \n    return (\n        <div ref={eGui!} class={getCssClassesString()} style={getStyle()} role=\"gridcell\" tabIndex={-1}>\n            <div ref={eFloatingFilterBody!} class={getBodyCssClassesString()} role=\"presentation\">\n                { getUserCompDetails() && <UserComp compDetails={getUserCompDetails()!} ref={setRef}/> }\n            </div>\n            <div ref={eButtonWrapper!} class={getButtonWrapperCssClassesString()} role=\"presentation\">\n                <button ref={eButtonShowMainFilter!} type=\"button\" aria-label=\"Open Filter Menu\" class=\"ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderFilterCellComp;\n","import { HeaderGroupCellCtrl, IHeaderGroupCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssResizableClasses, setResizableCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getTitle, setTitle] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>();\n    const [getAriaExpanded, setAriaExpanded] = createSignal<'true'|'false'|undefined>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement;\n\n    const { ctrl } = props;\n\n    onMount( () => {\n\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            addOrRemoveResizableCssClass: (name, on) => setResizableCssClasses(prev => prev.setClass(name, on)),\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize);\n    });\n\n    // add drag handling, must be done after component is added to the dom\n    createEffect(()=> {\n        const userCompDetails = getUserCompDetails();\n        if (userCompDetails==null) { return; }\n\n        let userCompDomElement: HTMLElement | undefined = undefined;\n        eGui.childNodes.forEach( node => {\n            if (node!=null && node!==eResize) {\n                userCompDomElement = node as HTMLElement;\n            }\n        });\n\n        userCompDomElement && ctrl.setDragSource(userCompDomElement);\n    });\n\n    const style = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getClassName = createMemo( ()=> 'ag-header-group-cell ' + getCssClasses().toString() );\n    const getResizableClassName = createMemo( ()=> 'ag-header-cell-resize ' + getCssResizableClasses().toString() );\n\n    return (\n        <div ref={eGui!} class={getClassName()} style={style()} title={getTitle()} col-id={getColId()} \n                    role=\"columnheader\" tabIndex={-1} aria-expanded={getAriaExpanded()}>\n\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} /> }\n\n            <div ref={eResize!} class={getResizableClassName()}></div>\n        </div>\n    );\n};\n\nexport default HeaderGroupCellComp;","import { AbstractHeaderCellCtrl, HeaderCellCtrl, HeaderFilterCellCtrl, HeaderGroupCellCtrl, HeaderRowCtrl, HeaderRowType, IHeaderRowComp, _ } from '@ag-grid-community/core';\nimport { createMemo, createSignal, For, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport HeaderCellComp from './headerCellComp';\nimport HeaderFilterCellComp from './headerFilterCellComp';\nimport HeaderGroupCellComp from './headerGroupCellComp';\n\nconst HeaderRowComp = (props: {ctrl: HeaderRowCtrl}) => {\n\n    const { gridOptionsWrapper } = useContext(BeansContext);\n\n    const [ getTransform, setTransform ] = createSignal<string>();\n    const [ getHeight, setHeight ] = createSignal<string>();\n    const [ getTop, setTop ] = createSignal<string>();\n    const [ getWidth, setWidth ] = createSignal<string>();\n    const [ getAriaRowIndex, setAriaRowIndex ] = createSignal<number>();\n    const [ getCellCtrls, setCellCtrls ] = createSignal<AbstractHeaderCellCtrl[]>([]);\n\n    let eGui: HTMLDivElement;\n\n    const { ctrl } = props;\n\n    const typeColumn = ctrl.getType() === HeaderRowType.COLUMN;\n    const typeGroup = ctrl.getType() === HeaderRowType.COLUMN_GROUP;\n    const typeFilter = ctrl.getType() === HeaderRowType.FLOATING_FILTER;\n\n    const setCellCtrlsMaintainOrder = (next: AbstractHeaderCellCtrl[]) => {\n        const prev = getCellCtrls();\n\n        // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n        if (gridOptionsWrapper.isEnsureDomOrder()) {\n            return next;\n        }\n\n        // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n        // otherwise we will loose transition effects as elements are placed in different dom locations\n        const prevMap = _.mapById(prev, c => c.getInstanceId());\n        const nextMap = _.mapById(next, c => c.getInstanceId());\n\n        const oldCtrlsWeAreKeeping = prev.filter( c => nextMap.has(c.getInstanceId()) );\n        const newCtrls = next.filter( c => !prevMap.has(c.getInstanceId()) )\n\n        const nextOrderMaintained = [...oldCtrlsWeAreKeeping, ...newCtrls];\n        setCellCtrls(nextOrderMaintained);\n    };\n\n    onMount(() => {\n        const compProxy: IHeaderRowComp = {\n            setTransform: transform => setTransform(transform),\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: ctrls => setCellCtrlsMaintainOrder(ctrls),\n            setWidth: width => setWidth(width),\n            setAriaRowIndex: rowIndex => setAriaRowIndex(rowIndex)\n        };\n        ctrl.setComp(compProxy);\n    });\n\n    const style = createMemo( ()=> ({\n        transform: getTransform(),\n        height: getHeight(),\n        top: getTop(),\n        width: getWidth()\n    }));\n\n    const cssClassesList: string[] = [`ag-header-row`]\n    typeColumn && cssClassesList.push(`ag-header-row-column`);\n    typeGroup && cssClassesList.push(`ag-header-row-column-group`);\n    typeFilter && cssClassesList.push(`ag-header-row-column-filter`);\n    const cssClasses = cssClassesList.join(' ');\n\n    const createCellJsx = (cellCtrl: AbstractHeaderCellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP :\n                return <HeaderGroupCellComp ctrl={cellCtrl as HeaderGroupCellCtrl} />;\n\n            case HeaderRowType.FLOATING_FILTER :\n                return <HeaderFilterCellComp ctrl={cellCtrl as HeaderFilterCellCtrl} />;\n                \n            default :\n                return <HeaderCellComp ctrl={cellCtrl as HeaderCellCtrl} />;\n        }\n    };\n\n    // below, we are not doing floating filters, not yet\n    return (\n        <div ref={eGui!} class={cssClasses} role=\"row\" style={style()} aria-rowindex={getAriaRowIndex()}>\n            <For each={getCellCtrls()}>{(cellCtrl, i) => createCellJsx(cellCtrl) }</For>\n        </div>\n    );\n};\n\nexport default HeaderRowComp;\n","import { Constants, HeaderRowContainerCtrl, HeaderRowCtrl, IHeaderRowContainerComp } from '@ag-grid-community/core';\nimport { createMemo, createSignal, For, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowComp from './headerRowComp';\n\nconst HeaderRowContainerComp = (props: {pinned: string | null})=> {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCenterContainerWidth, setCenterContainerWidth] = createSignal<string>();\n    const [getCenterContainerTransform, setCenterContainerTransform] = createSignal<string>();\n    const [getPinnedContainerWidth, setPinnedContainerWidth] = createSignal<string>();\n    const [getHeaderRowCtrls, setHeaderRowCtrls] = createSignal<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const pinnedLeft = props.pinned === Constants.PINNED_LEFT;\n    const pinnedRight = props.pinned === Constants.PINNED_RIGHT;\n    const centre = !pinnedLeft && !pinnedRight;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount(() => {\n\n        const compProxy: IHeaderRowContainerComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => setCenterContainerWidth(width),\n            setContainerTransform: transform => setCenterContainerTransform(transform),\n\n            // pinned only\n            setPinnedContainerWidth: width => setPinnedContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const getClassName = createMemo( ()=> getCssClasses.toString() );\n\n    const insertRowsJsx = ()=> \n    <For each={getHeaderRowCtrls()}>{ ctrl =>\n        <HeaderRowComp ctrl={ctrl}/>\n    }</For>;    \n    \n    const eCenterContainerStyle = createMemo( ()=> ({\n        width: getCenterContainerWidth(),\n        transform: getCenterContainerTransform()\n    }));\n\n    const ePinnedStyle = createMemo( ()=> ({\n        width: getPinnedContainerWidth(),\n        'min-width': getPinnedContainerWidth(),\n        'max-width': getPinnedContainerWidth()\n    }));\n\n    return (\n        <>\n            { \n                pinnedLeft && \n                <div ref={eGui!} class={\"ag-pinned-left-header \" + getClassName()} role=\"presentation\" style={ePinnedStyle()}>\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={eGui!} class={\"ag-pinned-right-header \" + getClassName()} role=\"presentation\" style={ePinnedStyle()}>\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={eGui!} class={\"ag-header-viewport \" + getClassName()} role=\"presentation\">\n                    <div class=\"ag-header-container\" role=\"rowgroup\" style={eCenterContainerStyle()}>\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default HeaderRowContainerComp;\n","import { Constants, GridHeaderCtrl, IGridHeaderComp } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowContainerComp from './headerRowContainerComp';\n\nconst GridHeaderComp = ()=> {\n    \n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getHeight, setHeight] = createSignal<string>();\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setHeightAndMinHeight: height => setHeight(height)\n        };\n\n        const ctrl = context.createBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, eGui, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const className = createMemo( ()=> {\n        let res = getCssClasses().toString();\n        return 'ag-header ' + res;\n    });\n\n    const style = createMemo( ()=> ({\n        height: getHeight(),\n        'min-height': getHeight()\n    }));\n\n    return (\n        <div ref={eGui!} class={className()} style={style()} role=\"presentation\">\n            <HeaderRowContainerComp pinned={Constants.PINNED_LEFT}/>\n            <HeaderRowContainerComp pinned={null}/>\n            <HeaderRowContainerComp pinned={Constants.PINNED_RIGHT}/>\n        </div>\n    );\n};\n\nexport default GridHeaderComp;\n","import { CellCtrl, PopupEditorWrapper } from '@ag-grid-community/core';\nimport { JSX, onCleanup, useContext } from 'solid-js';\nimport { Portal } from \"solid-js/web\";\nimport { BeansContext } from '../core/beansContext';\nimport { EditDetails } from './common';\n\nconst PopupEditorComp = (props: {\n            editDetails: EditDetails, \n            cellCtrl: CellCtrl, \n            eParentCell: HTMLElement,\n            children?: JSX.Element\n        }) => {\n\n    const {context, popupService, gridOptionsWrapper} = useContext(BeansContext);\n\n    const {editDetails, cellCtrl, eParentCell} = props;\n    const {compDetails} = editDetails;\n\n    const useModelPopup = gridOptionsWrapper.isStopEditingWhenCellsLoseFocus();\n    \n    const wrapper = context.createBean(new PopupEditorWrapper(compDetails.params));\n    const ePopupGui = wrapper.getGui();\n\n    const positionParams = {\n        column: cellCtrl.getColumn(),\n        rowNode: cellCtrl.getRowNode(),\n        type: 'popupCellEditor',\n        eventSource: eParentCell,\n        ePopup: ePopupGui,\n        keepWithinBounds: true\n    };\n\n    const positionCallback = editDetails!.popupPosition === 'under' ?\n        popupService.positionPopupUnderComponent.bind(popupService, positionParams)\n        : popupService.positionPopupOverComponent.bind(popupService, positionParams);\n\n    const translate = gridOptionsWrapper.getLocaleTextFunc();\n\n    const addPopupRes = popupService.addPopup({\n        modal: useModelPopup,\n        eChild: ePopupGui,\n        closeOnEsc: true,\n        closedCallback: () => { cellCtrl.onPopupEditorClosed(); },\n        anchorToElement: eParentCell,\n        positionCallback,\n        ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n    });\n\n    const hideEditorPopup: (()=>void) | undefined = addPopupRes ? addPopupRes.hideFunc : undefined;\n\n    onCleanup( ()=> {\n        if (hideEditorPopup!=null) {\n            hideEditorPopup();\n        }\n        context.destroyBean(wrapper);\n    });\n\n    return (\n        <Portal mount={ePopupGui}>\n            { props.children }\n        </Portal>\n    );\n};\n\nexport default PopupEditorComp;\n","import { CellCtrl, ICellEditor } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport UserComp from '../userComps/userComp';\nimport { EditDetails } from './common';\nimport PopupEditorComp from './popupEditorComp';\n\nconst ShowEditDetails = (props: {\n    editDetails: EditDetails,\n    cellCtrl: CellCtrl,\n    eGuiFn: () => HTMLDivElement,\n    setInlineRef: (ref: ICellEditor) => void,\n    setPopupRef: (ref: ICellEditor) => void\n}\n) => {\n\n    const getCompDetails = createMemo(() => props.editDetails.compDetails);\n    const compDetails = props.editDetails.compDetails;\n\n    // when editing, we must have a comp, otherwise doesn't work\n    if (!compDetails) { return <></>; }\n\n    const inPopup = props.editDetails.popup;\n    const eGui = props.eGuiFn();\n\n    return (\n        <>\n            {inPopup &&\n                <PopupEditorComp cellCtrl={props.cellCtrl} eParentCell={eGui} editDetails={props.editDetails}>\n                    <UserComp compDetails={getCompDetails()!} ref={props.setPopupRef} />\n                </PopupEditorComp>\n            }\n            {!inPopup &&\n                <UserComp compDetails={getCompDetails()!} ref={props.setInlineRef} />\n            }\n        </>\n    );\n};\n\nexport default ShowEditDetails;\n","import { CellCtrl, Component, ICellRenderer } from '@ag-grid-community/core';\nimport { createMemo, onCleanup, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport UserComp from '../userComps/userComp';\nimport { RenderDetails } from './common';\n\nconst ToolsComp = (props: {\n    includeSelection: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    cellCtrl: CellCtrl\n}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const CompWrapper = (innerProps: {\n        createFn: ()=>Component|undefined\n    })=> {\n        const comp = innerProps.createFn();\n        if (!comp) { return <></>; }\n\n        onCleanup( ()=> context.destroyBean(comp) );\n        return <>{comp.getGui()}</>\n    };\n\n    return (\n        <>\n            { props.includeSelection && \n                <CompWrapper createFn={()=>props.cellCtrl.createSelectionCheckbox()}/> }\n            { props.includeDndSource && \n                <CompWrapper createFn={()=>props.cellCtrl.createDndSource()}/> }\n            { props.includeRowDrag && \n                <CompWrapper createFn={()=>props.cellCtrl.createRowDragComp()}/> }\n        </>\n    );\n};\n\nconst ShowRenderDetails = (props: {\n    showDetails: RenderDetails,\n    ref: any,\n    showCellWrapper: boolean,\n    showTools: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    includeSelection: boolean,\n    cellCtrl: CellCtrl,\n    cellInstanceId: string,\n    setECellValue: (eCellValue: HTMLElement) => void\n}) => {\n\n    const getCompDetails = createMemo(() => props.showDetails.compDetails);\n    const isNoCompDetails = createMemo(()=> props.showDetails.compDetails == null);\n\n    // if we didn't do this, objects would cause error. we depend on objects for things\n    // like the aggregation functions avg and count, which return objects and depend on toString()\n    // getting called.\n    const valueForNoCellRenderer = () => {\n        const value = props.showDetails.value;\n        return (value && value.toString) ? value.toString() : value;\n    };\n\n    const bodyJsxFunc = () => (\n        <>\n            {isNoCompDetails() && <>{valueForNoCellRenderer()}</>}\n            {getCompDetails() && <UserComp compDetails={getCompDetails()!}\n                ref={props.ref}/>}\n        </>\n    );\n\n    return (\n        <>\n            {\n                props.showTools &&\n                <ToolsComp\n                    includeDndSource={props.includeDndSource}\n                    includeRowDrag={props.includeRowDrag}\n                    includeSelection={props.includeSelection}\n                    cellCtrl={props.cellCtrl} />\n            }\n            {\n                props.showCellWrapper\n                    ? (\n                        <span role=\"presentation\" id={`cell-${props.cellInstanceId}`} class=\"ag-cell-value\" ref={props.setECellValue}>\n                            {bodyJsxFunc()}\n                        </span>\n                    )\n                    : bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport default ShowRenderDetails;\n","import { CellCtrl, CssClassManager, ICellComp, ICellEditor, ICellRenderer, _ } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onMount } from 'solid-js';\nimport { EditDetails, RenderDetails } from './common';\nimport ShowEditDetails from './showEditDetails';\nimport ShowRenderDetails from './showRenderDetails';\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid SolidJS cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid SolidJS cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\n\n\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = createSignal<RenderDetails>();\n    const [editDetails, setEditDetails ] = createSignal<EditDetails>();\n\n    let renderCompVersion = 0;\n    const [renderCompVersionList, setRenderCompVersionList] = createSignal<number[]>([renderCompVersion]);\n\n    const [userStyles, setUserStyles] = createSignal<any>();\n\n    const [tabIndex, setTabIndex] = createSignal<number>();\n    const [role, setRole] = createSignal<string>();\n    const [colId, setColId] = createSignal<string>();\n    const [title, setTitle] = createSignal<string | undefined>();\n    const [includeSelection, setIncludeSelection] = createSignal<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = createSignal<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = createSignal<boolean>(false);\n\n    const forceWrapper = cellCtrl.isForceWrapper();\n\n    let eCellWrapper: HTMLDivElement;\n    let eCellValue: HTMLElement;\n    const setECellValue = (val: HTMLElement)=> {\n        eCellValue = val;\n    };\n\n    let eGui: HTMLDivElement;\n    let cellRenderer: ICellRenderer | null = null;\n\n    let cellEditor: ICellEditor | null = null;\n    const setEditorRef = (popup: boolean, ref: ICellEditor)=> {\n        cellEditor = ref;\n        if (!cellEditor) { return; }\n\n        checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n            // we cannot set state inside render, so hack is to do it in next VM turn\n            setTimeout( ()=> cellCtrl.stopEditing(), 0);\n        }\n\n        const refAny = ref as any;\n        if (refAny.afterGuiAttached) {\n            setTimeout(()=> refAny.afterGuiAttached(), 0);\n        }\n    }\n    const setPopupEditorRef = (ref: ICellEditor) => setEditorRef(true, ref);\n    const setInlineEditorRef = (ref: ICellEditor) => setEditorRef(false, ref);\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    const showTools = createMemo( ()=> renderDetails() != null && (includeSelection() || includeDndSource() || includeRowDrag()) );\n    const showCellWrapper = createMemo( ()=> forceWrapper || showTools() );\n\n    const cellInstanceId = cellCtrl.getInstanceId();\n\n    const ariaDescribedBy = createMemo( ()=> showCellWrapper() ? `cell-${cellInstanceId}` : undefined);\n\n    onMount( () => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setUserStyles: styles => setUserStyles(styles),\n            getFocusableElement: () => eGui,\n            setTabIndex: tabIndex => setTabIndex(tabIndex),\n            setRole: role => setRole(role),\n            setColId: colId => setColId(colId),\n            setTitle: title => setTitle(title),\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            \n            getCellEditor: () => cellEditor,\n            getCellRenderer: () => cellRenderer ? cellRenderer : null,\n            getParentOfValue: () => eCellValue ? eCellValue : eCellWrapper ? eCellWrapper : eGui,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        cellCtrl.setComp(compProxy, eGui, eCellWrapper, printLayout, editingRow);\n    });\n\n    createEffect( ()=> {\n        cssClassManager.addOrRemoveCssClass('ag-cell-value', !showCellWrapper());\n    });\n\n    // we only do refreshing for JS Comps. for SolidJS, the props will change for the cell renderer.\n    let readyForRefresh = false;    \n    createEffect( ()=> {\n        const details = renderDetails();\n        const isJsCellRenderer = details!=null && details.compDetails!=null && !details.compDetails.componentFromFramework;\n        if (!isJsCellRenderer) {\n            readyForRefresh = false;\n            return;\n        }\n        if (!readyForRefresh) {\n            readyForRefresh = true;\n            return;\n        }\n\n        if (!cellRenderer) { return; }\n\n        const params = details.compDetails!.params;\n        const result = cellRenderer.refresh ? cellRenderer.refresh(params) : false;\n        if (result != true) {\n            // increasing the render key forces a new instance of ShowRenderDetails,\n            // as we iteration through renderCompVersion, if the contents of\n            // renderCompVersion changes, that maps to a new ShowRenderDetails instance.\n            renderCompVersion++;\n            setRenderCompVersionList([renderCompVersion]);\n        }\n    });\n\n    // we pass in eGui as a function below as eGui is not ready\n    // when the template is built, only after it. so we defer\n    // reading eGui variable until it's needed, after ShowEditDetails\n    // is created.\n    const eGuiFn = ()=> eGui;\n\n    const bodyJsxFunc = ()=> (\n        <>\n                <For each={renderCompVersionList()}>{ () =>\n                    <>\n                        { renderDetails() && <ShowRenderDetails \n                            showDetails={renderDetails()!}\n                            ref={cellRenderer}\n                            cellInstanceId={cellInstanceId}\n                            showCellWrapper={showCellWrapper()}\n                            cellCtrl={cellCtrl}\n                            includeDndSource={includeDndSource()}\n                            includeRowDrag={includeRowDrag()}\n                            includeSelection={includeSelection()}\n                            showTools={showTools()}\n                            setECellValue={setECellValue}\n                        /> }\n                    </>                \n                }</For>\n                { editDetails() && <ShowEditDetails \n                            editDetails={editDetails()!}\n                            cellCtrl={cellCtrl}\n                            eGuiFn={eGuiFn}\n                            setInlineRef={setInlineEditorRef}\n                            setPopupRef={setPopupEditorRef}\n                        /> }\n        </>);\n\n    return (\n        <div\n            ref={ eGui! }\n            style={ userStyles() }\n            tabIndex={ tabIndex() }\n            role={ role() as 'gridcell'} //fixme - why not hard code role to gridcell?\n            col-id={ colId() }\n            title={ title() }\n            aria-describedby={ ariaDescribedBy() }>            {\n                showCellWrapper()\n                ? (\n                    <div class=\"ag-cell-wrapper\" role=\"presentation\" ref={ eCellWrapper! }>\n                        { bodyJsxFunc() }\n                    </div>\n                )\n                : bodyJsxFunc()\n            }\n        </div>\n    );\n}\n\nexport default CellComp;\n","import { CellCtrl, CssClassManager, ICellRenderer, IRowComp, RowContainerType, RowCtrl, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onMount } from \"solid-js\";\nimport CellComp from '../cells/cellComp';\nimport UserComp from '../userComps/userComp';\n\ninterface CellCtrls {\n    list: CellCtrl[],\n    instanceIdMap: Map<string, CellCtrl>\n}\n\nconst maintainOrderOnColumns = (prev: CellCtrls, next: CellCtrl[], domOrder: boolean): CellCtrls => {\n    if (domOrder) {\n        const res: CellCtrls = { list: next, instanceIdMap: new Map() };\n        next.forEach(c => res.instanceIdMap.set(c.getInstanceId(), c));\n\n        return res;\n    }\n\n    // if dom order not important, we don't want to change the order\n    // of the elements in the dom, as this would break transition styles\n    const oldCellCtrls: CellCtrl[] = [];\n    const newCellCtrls: CellCtrl[] = [];\n    const newInstanceIdMap: Map<string, CellCtrl> = new Map();\n    const tempMap: Map<string, CellCtrl> = new Map();\n\n    next.forEach(c => tempMap.set(c.getInstanceId(), c));\n\n    prev.list.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (tempMap.has(instanceId)) {\n            oldCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    next.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (!prev.instanceIdMap.has(instanceId)) {\n            newCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    const res: CellCtrls = {\n        list: [...oldCellCtrls, ...newCellCtrls],\n        instanceIdMap: newInstanceIdMap\n    };\n\n    return res;\n}\n\nconst RowComp = (params: {rowCtrl: RowCtrl, containerType: RowContainerType}) => {\n\n    const { rowCtrl, containerType } = params;\n\n    const [getRowIndex, setRowIndex] = createSignal<string>();\n    const [getRowId, setRowId] = createSignal<string>();\n    const [getRole, setRole] = createSignal<string>();\n    const [getRowBusinessKey, setRowBusinessKey] = createSignal<string>();\n    const [getTabIndex, setTabIndex] = createSignal<number>();\n    const [getUserStyles, setUserStyles] = createSignal<any>();\n    const [getCellCtrls, setCellCtrls] = createSignal<CellCtrls>({ list: [], instanceIdMap: new Map() });\n    const [getFullWidthCompDetails, setFullWidthCompDetails] = createSignal<UserCompDetails>();\n    const [getDomOrder, setDomOrder] = createSignal<boolean>(false);\n\n    // these styles have initial values, so element is placed into the DOM with them,\n    // rather than an transition getting applied.\n    const [getTop, setTop] = createSignal<string | undefined>(rowCtrl.getInitialRowTop());\n    const [getTransform, setTransform] = createSignal<string | undefined>(rowCtrl.getInitialTransform());\n\n    let eGui: HTMLDivElement;\n    let fullWidthCompRef: ICellRenderer;\n\n    const setFullWidthRef = (newRef: ICellRenderer)=> {\n        fullWidthCompRef = newRef;\n    };\n\n    createEffect(() => {\n        const compDetails = getFullWidthCompDetails();\n        if (!compDetails) { return; }\n\n        let tryCount = 0;\n\n        // puts autoHeight onto full with detail rows. this needs trickery, as we need\n        // the HTMLElement for the provided Detail Cell Renderer. this pattern was copied\n        // from React, it's possible it's not needed here, however given it's hard to be\n        // sure on Solid's async behavious, keeping the patter here.\n        const trySetup = ()=> {\n            const eChild = eGui.firstChild as HTMLElement;\n            if (eChild) {\n                rowCtrl.setupDetailRowAutoHeight(eChild);\n                return;\n            }\n\n            if (tryCount>=10) { return; }\n\n            tryCount++;\n            setTimeout(trySetup, 0);\n        };\n\n        trySetup();\n    });\n\n    onMount(() => {\n        // because React is asychronous, it's possible the RowCtrl is no longer a valid RowCtrl. This can\n        // happen if user calls two API methods one after the other, with the second API invalidating the rows\n        // the first call created. Thus the rows for the first call could still get created even though no longer needed.\n        if (!rowCtrl.isAlive()) {  return; }\n\n        const cssClassManager = new CssClassManager(() => eGui);\n\n        const compProxy: IRowComp = {\n            // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n            // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n            setTop: value => setTop(value),\n            setTransform: value => setTransform(value),\n\n            // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n            // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setRowIndex: value => setRowIndex(value),\n            setRowId: value => setRowId(value),\n            setRowBusinessKey: value => setRowBusinessKey(value),\n            setTabIndex: value => setTabIndex(value),\n            setUserStyles: styles => setUserStyles(styles),\n            setRole: value => setRole(value),\n            // if we don't maintain the order, then cols will be ripped out and into the dom\n            // when cols reordered, which would stop the CSS transitions from working\n            setCellCtrls: next => setCellCtrls(maintainOrderOnColumns(getCellCtrls(), next, getDomOrder())),\n            showFullWidth: compDetails => setFullWidthCompDetails(compDetails),\n            getFullWidthCellRenderer: ()=> fullWidthCompRef,\n        };\n        rowCtrl.setComp(compProxy, eGui, containerType);\n    });\n\n    const getRowStyles = createMemo(() => {\n        const res = { \n            top: getTop(), \n            transform: getTransform(),\n        };\n\n        Object.assign(res, getUserStyles());\n        return res;\n    });\n\n    const isShowCells = createMemo( ()=> getCellCtrls()!=null );\n    const isShowFullWidth = createMemo( ()=> getFullWidthCompDetails()!=null );\n\n    const showCellsJsx = ()=> (\n            <For each={getCellCtrls().list}>{ cellCtrl =>\n                <CellComp\n                        cellCtrl={ cellCtrl }\n                        editingRow={ rowCtrl.isEditing() }\n                        printLayout={ rowCtrl.isPrintLayout() }\n                    />\n            }</For>\n    );\n\n    const showFullWidthJsx = ()=> (\n        <UserComp compDetails={ getFullWidthCompDetails()! } ref={setFullWidthRef}/>\n    );\n\n    return (\n        <div\n            ref={ eGui! }\n            // role={ role() } /// FIXME\n            style={ getRowStyles() }\n            row-index={ getRowIndex() }\n            row-id={ getRowId() }\n            row-business-key={ getRowBusinessKey() }\n            tabIndex={ getTabIndex() }\n        >\n            { isShowFullWidth() && showFullWidthJsx() }\n            { isShowCells() && showCellsJsx() }\n\n        </div>\n    );\n};\n\nexport default RowComp;\n","import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from '../core/beansContext';\nimport { classesList } from '../core/utils';\nimport RowComp from './rowComp';\n\nconst RowContainerComp = (props: {name: RowContainerName})=> {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = createSignal<string>('');\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = createSignal<RowCtrl[]>([]);\n    const [rowCtrls, setRowCtrls] = createSignal<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = createSignal<boolean>(false);\n    const [containerWidth, setContainerWidth] = createSignal<string>('');\n\n    const { name } = props;\n    const containerType = createMemo(() => getRowContainerTypeForName(name));\n\n    let eWrapper: HTMLDivElement;\n    let eViewport: HTMLDivElement;\n    let eContainer: HTMLDivElement;\n\n    const cssClasses = createMemo(() => RowContainerCtrl.getRowContainerCssClasses(name));\n    const wrapperClasses = createMemo( ()=> classesList(cssClasses().wrapper));\n    const viewportClasses = createMemo( ()=> classesList(cssClasses().viewport));\n    const containerClasses = createMemo( ()=> classesList(cssClasses().container));\n\n    // no need to useMemo for boolean types\n    const template1 = name === RowContainerName.CENTER;\n    const template2 = name === RowContainerName.TOP_CENTER \n                    || name === RowContainerName.BOTTOM_CENTER \n                    || name === RowContainerName.STICKY_TOP_CENTER;\n    const template3 = !template1 && !template2;\n\n    // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n    // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n    let rowCtrlsOrderedCopy: RowCtrl[] = [];\n    createEffect( () => {\n        if (domOrder()) {\n            setRowCtrlsOrdered(rowCtrls());\n            return;\n        }\n        // if dom order not important, we don't want to change the order\n        // of the elements in the dom, as this would break transition styles\n        // \n        // we use the rowCtrlsOrderedCopy, to avoid this effect depending on and\n        // setting the same value, hence causing an infinite loop\n        const prev = rowCtrlsOrderedCopy; \n        const oldRows = prev.filter(r => rowCtrls().indexOf(r) >= 0);\n        const newRows = rowCtrls().filter(r => oldRows.indexOf(r) < 0);\n        const next = [...oldRows, ...newRows];\n        setRowCtrlsOrdered(next);\n        rowCtrlsOrderedCopy = next;\n    });\n\n    onMount(() => {\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: rowCtrls => setRowCtrls(rowCtrls),\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => setContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        onCleanup( ()=> context.destroyBean(ctrl));\n\n        ctrl.setComp(compProxy, eContainer, eViewport, eWrapper);\n    });\n\n    const viewportStyle = createMemo(() => ({\n        height: viewportHeight()\n    }));\n\n    const containerStyle = createMemo(() => ({\n        width: containerWidth()\n    }));\n\n    const buildContainer = () => (\n        <div\n            class={ containerClasses() }\n            ref={ eContainer }\n            role={ rowCtrls().length ? \"rowgroup\" : \"presentation\" }\n            style={ containerStyle() }>\n                <For each={rowCtrlsOrdered()}>{(rowCtrl, i) =>\n                    <RowComp rowCtrl={ rowCtrl } containerType={ containerType() }></RowComp>\n                }</For>\n        </div>\n    );\n\n    return (\n        <>\n            {\n                template1 &&\n                <div class={ wrapperClasses() } ref={ eWrapper! } role=\"presentation\">\n                    <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                        { buildContainer() }\n                    </div>\n                </div>\n            }\n            {\n                template2 &&\n                <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                    { buildContainer() }\n                </div>\n            }\n            {\n                template3 && buildContainer()\n            }\n        </>\n    );\n\n};\n\nexport default RowContainerComp;\n","import { GridBodyCtrl, IGridBodyComp, RowContainerName } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridHeaderComp from \"./header/gridHeaderComp\";\nimport RowContainerComp from \"./rows/rowContainerComp\";\n\nconst GridBodyComp = ()=> {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [getRowAnimationClass, setRowAnimationClass] = createSignal<string>('');\n    const [getAriaColCount, setAriaColCount] = createSignal<number>(0);\n    const [getAriaRowCount, setAriaRowCount] = createSignal<number>(0);\n    const [getTopHeight, setTopHeight] = createSignal<number>(0);\n    const [getBottomHeight, setBottomHeight] = createSignal<number>(0);\n    const [getStickyTopHeight, setStickyTopHeight] = createSignal<string>('0px');\n    const [getStickyTopTop, setStickyTopTop] = createSignal<string>('0px');\n    const [getStickyTopWidth, setStickyTopWidth] = createSignal<string>('100%');\n    const [getTopDisplay, setTopDisplay] = createSignal<string>('');\n    const [getBottomDisplay, setBottomDisplay] = createSignal<string>('');\n    \n    const [getMovingCss, setMovingCss] = createSignal<string | null>(null);\n    const [getForceVerticalScrollClass, setForceVerticalScrollClass] = createSignal<string | null>(null);\n    const [getTopAndBottomOverflowY, setTopAndBottomOverflowY] = createSignal<string>('');\n    const [getCellSelectableCss, setCellSelectableCss] = createSignal<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [getLayoutClass, setLayoutClass] = createSignal<string>('ag-layout-normal');\n\n    let eRoot: HTMLDivElement;\n    let eTop: HTMLDivElement;\n    let eStickyTop: HTMLDivElement;\n    let eBodyViewport: HTMLDivElement;\n    let eBottom: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            onCleanup( ()=> context.destroyBean(comp) );\n            return comp;\n        };\n\n        eRoot.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n        eRoot.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight,\n            setBottomHeight,\n            setStickyTopHeight,\n            setStickyTopTop,\n            setStickyTopWidth,\n            setTopDisplay,\n            setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: setCellSelectableCss,\n\n            registerBodyViewportResizeListener: listener => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        onCleanup( ()=> context.destroyBean(ctrl) );\n\n        // fixme - should not be in a timeout,\n        // was becusae we need GridHeaderComp to be created first\n        setTimeout( ()=> \n            ctrl.setComp(\n                compProxy,\n                eRoot,\n                eBodyViewport,\n                eTop,\n                eBottom,\n                eStickyTop\n            ), 0);\n    });\n\n    const getRootClasses = createMemo(() =>\n        classesList('ag-root','ag-unselectable', getMovingCss(), getLayoutClass())\n    );\n    const getBodyViewportClasses = createMemo(() =>\n        classesList('ag-body-viewport', getRowAnimationClass(), getLayoutClass(), getForceVerticalScrollClass(), getCellSelectableCss())\n    );\n    const getTopClasses = createMemo(() =>\n        classesList('ag-floating-top', getCellSelectableCss())\n    );\n    const getStickyTopClasses = createMemo(() =>\n        classesList('ag-sticky-top', getCellSelectableCss())\n    );\n    const getBottomClasses = createMemo(() =>\n        classesList('ag-floating-bottom', getCellSelectableCss())\n    );\n\n    const getTopStyle = createMemo(() => ({\n        height: getTopHeight,\n        'min-height': getTopHeight,\n        display: getTopDisplay,\n        'overflow-y': (getTopAndBottomOverflowY as any)\n    }));\n\n    const getStickyTopStyle = createMemo(() => ({\n        height: getStickyTopHeight,\n        top: getStickyTopTop,\n        width: getStickyTopWidth\n    }));\n\n    const getBottomStyle = createMemo(()=> ({\n        height: getBottomHeight,\n        'min-height': getBottomHeight,\n        display: getBottomDisplay,\n        'overflow-y': (getTopAndBottomOverflowY as any)\n    }));\n\n    return (\n        <div ref={ eRoot! } class={ getRootClasses() } role=\"grid\" aria-colcount={ getAriaColCount() } aria-rowcount={ getAriaRowCount() }>\n            <GridHeaderComp/>\n            <div ref={ eTop! } class={ getTopClasses() } role=\"presentation\" style={ getTopStyle() }>\n                <RowContainerComp name={ RowContainerName.TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.TOP_FULL_WIDTH } />\n            </div>\n            <div ref={ eBodyViewport! } class={ getBodyViewportClasses() } role=\"presentation\">\n                <RowContainerComp name={ RowContainerName.LEFT } />\n                <RowContainerComp name={ RowContainerName.CENTER } />\n                <RowContainerComp name={ RowContainerName.RIGHT } />\n                <RowContainerComp name={ RowContainerName.FULL_WIDTH } />\n            </div>\n            <div ref={ eStickyTop! } class={ getStickyTopClasses() } role=\"presentation\" style={ getStickyTopStyle() }>\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_FULL_WIDTH } />\n            </div>\n            <div ref={ eBottom! } class={ getBottomClasses() } role=\"presentation\" style={ getBottomStyle() }>\n                <RowContainerComp name={ RowContainerName.BOTTOM_LEFT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_CENTER } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_RIGHT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_FULL_WIDTH } />\n            </div>\n        </div>\n    );\n};\n\nexport default GridBodyComp;\n","import { GridCtrl, ITabGuard, TabGuardCtrl } from '@ag-grid-community/core';\nimport { createSignal, JSX, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from \"./core/beansContext\";\n\ninterface TabGuardProps {\n    children: JSX.Element,\n    eFocusableElement: HTMLDivElement,\n    onTabKeyDown: (e: KeyboardEvent) => void,\n    gridCtrl: GridCtrl,\n    ref: (ref: TabGuardRef)=>void\n}\n\nexport interface TabGuardRef {\n    forceFocusOutOfContainer(): void;\n}\n\nconst TabGuardComp = (props: TabGuardProps)=> {\n\n    const { children, eFocusableElement, onTabKeyDown, gridCtrl } = props;\n    const [tabIndex, setTabIndex] = createSignal<number>();\n\n    let eTopGuard: HTMLDivElement;\n    let eBottomGuard: HTMLDivElement;\n    let ctrl: TabGuardCtrl;\n\n    const { context } = useContext(BeansContext);\n\n    onMount(() => {\n\n        const compProxy: ITabGuard = {\n            setTabIndex: value => value == null ? setTabIndex(undefined) : setTabIndex(parseInt(value, 10))\n        }\n\n        ctrl = context.createBean(new TabGuardCtrl({\n            comp: compProxy,\n            eTopGuard: eTopGuard,\n            eBottomGuard: eBottomGuard,\n            eFocusableElement: eFocusableElement,\n            \n            onTabKeyDown: onTabKeyDown,\n            focusInnerElement: fromBottom => gridCtrl.focusInnerElement(fromBottom)\n        }));\n\n        props.ref({\n            forceFocusOutOfContainer() {\n                ctrl.forceFocusOutOfContainer();\n            }\n        });\n    });\n\n    onCleanup( ()=> context.destroyBean(ctrl) );\n\n    return (\n        <>\n            <div class={ `ag-tab-guard ag-tab-guard-top` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eTopGuard! }></div>\n\n            { children }\n\n            <div class={ `ag-tab-guard ag-tab-guard-bottom` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eBottomGuard! }></div>\n        </>\n    )\n};\n\nexport default TabGuardComp;","import {\n    Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridBodyComp from './gridBodyComp';\nimport TabGuardComp, { TabGuardRef } from './tabGuardComp';\n\nconst GridComp = (props: {context: Context, class?: string})=> {\n\n    const [rtlClass, setRtlClass] = createSignal<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = createSignal<string>('');\n    const [layoutClass, setLayoutClass] = createSignal<string>('');\n    const [cursor, setCursor] = createSignal<string | null>(null);\n    const [userSelect, setUserSelect] = createSignal<string | null>(null);\n    const [initialised, setInitialised] = createSignal<boolean>(false);\n\n    const {context} = props;\n    const beans = context.getBean('beans');\n\n    let tabGuardRef: TabGuardRef;\n    const setTabGuardRef = (newRef: TabGuardRef)=> {\n        tabGuardRef = newRef;\n        tabGuardRef && tabGuardReady();\n    };\n\n    let eGui: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let gridCtrl: GridCtrl;\n\n    const onTabKeyDown = () => undefined;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    const tabGuardReady = ()=> {\n\n        const beansToDestroy: any[] = [];\n\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const el = headerDropZonesComp.getGui();\n            eGui.insertAdjacentElement('afterbegin', el);\n            additionalEls.push(el);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const el = sideBarComp.getGui();\n            const bottomTabGuard = eBody.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', el);\n                additionalEls.push(el);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const el = statusBarComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const el = paginationComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const el = watermarkComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        destroyFuncs.push( ()=> {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        });\n    };\n\n    onMount( ()=> {\n        gridCtrl = context.createBean(new GridCtrl());\n        destroyFuncs.push( ()=> context.destroyBean(gridCtrl) );\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            addOrRemoveKeyboardFocusClass:\n                (addOrRemove: boolean) => setKeyboardFocusClass(addOrRemove ? FocusService.AG_KEYBOARD_FOCUS : ''),\n            forceFocusOutOfContainer: () => {\n                tabGuardRef && tabGuardRef.forceFocusOutOfContainer();\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eGui.querySelector('.ag-root');\n                const sideBarEl = eGui.querySelector('.ag-side-bar')\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eGui, eGui);\n        setInitialised(true);\n    });\n    \n    const cssClasses = createMemo( () => classesList('ag-root-wrapper', rtlClass(), keyboardFocusClass(), layoutClass(), props.class) );\n    const bodyCssClasses = createMemo( () => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass()));\n\n    const topStyle = createMemo( () => ({\n        userSelect: userSelect != null ? (userSelect as any) : '',\n        WebkitUserSelect: userSelect != null ? (userSelect as any) : '',\n        cursor: cursor != null ? cursor : ''\n    }));\n\n    return (\n        <div ref={ eGui! } class={ cssClasses() } style={ topStyle() }>\n            <div class={ bodyCssClasses() } ref={ eBody! }>\n                { initialised() &&\n                    // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                    // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                    // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                    // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                    // hangs the UI)\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardRef }\n                            eFocusableElement= { eGui! }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrl! }>\n                            <GridBodyComp/>\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default GridComp;","import {ColumnApi, ComponentUtil, Context, CtrlsService, GridApi, GridCoreCreator, GridOptions, GridParams, Module} from '@ag-grid-community/core';\nimport {createEffect, createSignal, For, onCleanup, onMount} from \"solid-js\";\nimport {Portal} from 'solid-js/web';\nimport SolidCompWrapperFactory from './core/solidCompWrapperFactory';\nimport {SolidFrameworkOverrides} from './core/solidFrameworkOverrides';\nimport GridComp from './gridComp';\n\nexport interface AgGridSolidRef {\n    api: GridApi;\n    columnApi: ColumnApi;\n}\n\nexport interface AgGridSolidProps extends GridOptions {\n    gridOptions?: GridOptions;\n    ref?: AgGridSolidRef | ((ref: AgGridSolidRef) => void);\n    modules?: Module[];\n    class?: string;\n}\n\nexport interface PortalInfo {\n    mount: HTMLElement;\n    SolidClass: any;\n    props: any;\n    ref: (instance: any) => void;\n}\n\nexport interface PortalManager {\n    addPortal(info: PortalInfo): void;\n\n    removePortal(info: PortalInfo): void;\n}\n\nconst AgGridSolid = (props: AgGridSolidProps) => {\n    let eGui: HTMLDivElement;\n    let gridOptions: GridOptions;\n\n    const [context, setContext] = createSignal<Context>();\n    const [getPortals, setPortals] = createSignal<PortalInfo[]>([]);\n\n    const destroyFuncs: (() => void)[] = [];\n    onCleanup(() => {\n        destroyFuncs.forEach(f => f());\n        destroyFuncs.length = 0;\n    });\n\n    // we check for property changes. to get things started, we take a copy\n    // of all the properties at the start, and then compare against this for\n    // changes.\n    const propsCopy: any = {};\n    Object.keys(props).forEach(key => propsCopy[key] = (props as any)[key]);\n\n    createEffect(() => {\n        const keys = Object.keys(props);\n        const changes: { [key: string]: { currentValue: any, previousValue: any } } = {};\n        let changesExist = false;\n\n        keys.forEach(key => {\n            // this line reads from the prop, which in turn makes\n            // this prop a dependency for the effect.\n            const currentValue = (props as any)[key];\n\n            const previousValue = propsCopy[key];\n            if (previousValue !== currentValue) {\n                changes[key] = {\n                    currentValue,\n                    previousValue\n                };\n                propsCopy[key] = currentValue;\n                changesExist = true;\n            }\n        });\n\n        if (changesExist) {\n            ComponentUtil.processOnChange(changes, gridOptions, gridOptions.api!, gridOptions.columnApi!);\n        }\n    });\n\n    onMount(() => {\n\n        const modules = props.modules || [];\n\n        const portalManager: PortalManager = {\n            addPortal: info => {\n                setPortals([...getPortals(), info]);\n            },\n            removePortal: info => {\n                setPortals(getPortals().filter(item => item != info));\n            }\n        };\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new SolidCompWrapperFactory(portalManager)\n            },\n            modules,\n            frameworkOverrides: new SolidFrameworkOverrides()\n        };\n\n        gridOptions = props.gridOptions || {};\n        ComponentUtil.copyAttributesToGridOptions(gridOptions, props);\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                const refCallback = props.ref && (props.ref as (ref: AgGridSolidRef) => void);\n                if (refCallback) {\n                    const gridRef: AgGridSolidRef = {\n                        api: gridOptions.api!,\n                        columnApi: gridOptions.columnApi!\n                    };\n                    refCallback(gridRef);\n                }\n                destroyFuncs.push(() => gridOptions!.api!.destroy());\n            });\n        };\n\n        const acceptChangesCallback = () => {\n            // todo, what goes here?\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        gridCoreCreator.create(eGui, gridOptions, createUiCallback, acceptChangesCallback, gridParams);\n    });\n\n    return (\n        <div ref={eGui!} style={{height: '100%'}}>\n            {context() &&\n                <GridComp class={props.class} context={context()!}></GridComp>\n            }\n            <For each={getPortals()}>{(info, i) =>\n                <Portal mount={info.mount}>\n                    <info.SolidClass {...info.props} ref={info.ref}/>\n                </Portal>\n            }</For>\n        </div>\n    );\n}\n\nexport default AgGridSolid;\n","import AgGridSolid from \"./grid/agGridSolid\";\nexport default AgGridSolid;\n\nexport * from \"./grid/agGridSolid\";\n\n// /* @refresh reload */\n// import { render } from 'solid-js/web';\n//\n// import './index.css';\n// import App from './sampleApp/App';\n//\n// render(() => <App />, document.getElementById('root') as HTMLElement);\n"],"names":["SolidCompWrapper","constructor","SolidCompClass","portalManager","init","props","eGui","document","createElement","className","portalInfo","mount","SolidClass","ref","instance","addPortal","destroy","removePortal","getGui","hasMethod","name","getFrameworkComponentInstance","callMethod","args","apply","addMethod","callback","SolidCompWrapperFactory","BaseComponentWrapper","createWrapper","SolidComponentClass","BeansContext","createContext","classesList","list","filtered","filter","s","join","CssClasses","initialClasses","forEach","classesMap","setClass","on","nothingHasChanged","res","toString","Object","keys","key","DetailCellRenderer","ctrlsFactory","context","gridOptionsWrapper","resizeObserverService","clientSideRowModel","serverSideRowModel","useContext","getCssClasses","setCssClasses","createSignal","getGridCssClasses","setGridCssClasses","getDetailGridOptions","setDetailGridOptions","getDetailRowData","setDetailRowData","ctrl","eGuiRef","getCssClassesStr","createMemo","getGridCssClassesStr","refresh","onMount","template","console","warn","compProxy","addOrRemoveCssClass","addOrRemoveDetailGridCssClass","setDetailGrid","gridOptions","setRowData","rowData","getInstance","createBean","resizeObserverDestroyFunc","isDetailRowAutoHeight","checkRowSizeFunc","clientHeight","updateRowHeightFunc","node","setRowHeight","onRowHeightChanged","setTimeout","observeResize","destroyBean","setRef","registerDetailWithMaster","api","columnApi","_tmpl$","_$use","_$insert","_$memo","_$mergeProps","_$effect","_$className","JsUserComp","p","promise","compDetails","newAgStackInstance","comp","resolveNow","x","gui","onCleanup","undefined","SolidUserComp","componentClass","refSet","_$createComponent","params","UserComp","showSolidComp","details","componentFromFramework","showJsComp","GroupCellRenderer","eValueRef","eCheckboxRef","eExpandedRef","eContractedRef","getInnerCompDetails","setInnerCompDetails","getChildCount","setChildCount","getValue","setValue","getExpandedCssClasses","setExpandedCssClasses","getContractedCssClasses","setContractedCssClasses","getCheckboxCssClasses","setCheckboxCssClasses","setInnerRenderer","valueToDisplay","escapedValue","_","escapeString","count","setContractedDisplayed","displayed","setExpandedDisplayed","setCheckboxVisible","visible","GroupCellRendererCtrl","getClassName","getExpandedClassName","getContractedClassName","getCheckboxClassName","isShowUserComp","isShowValue","_$spread","colDef","role","SolidFrameworkOverrides","VanillaFrameworkOverrides","agGroupCellRenderer","agGroupRowRenderer","agDetailCellRenderer","frameworkComponent","frameworkComponents","isFrameworkComponent","prototype","isJsComp","HeaderCellComp","getWidth","setWidth","getTitle","setTitle","getColId","setColId","getAriaSort","setAriaSort","getAriaDescription","setAriaDescription","getUserCompDetails","setUserCompDetails","eResize","eHeaderCompWrapper","userComp","cssClassManager","CssClassManager","width","id","title","description","sort","getUserCompInstance","setComp","selectAllGui","getSelectAllGui","insertAdjacentElement","setDragSource","style","_$style","_$setAttribute","HeaderFilterCellComp","getCssBodyClasses","setBodyCssClasses","getCssButtonWrapperClasses","setButtonWrapperCssClasses","eFloatingFilterBody","eButtonWrapper","eButtonShowMainFilter","alreadyResolved","userCompResolve","userCompPromise","AgPromise","resolve","value","prev","addOrRemoveBodyCssClass","addOrRemoveButtonWrapperCssClass","setCompDetails","getFloatingFilterComp","setMenuIcon","eIcon","appendChild","getStyle","getCssClassesString","getBodyCssClassesString","getButtonWrapperCssClassesString","HeaderGroupCellComp","getCssResizableClasses","setResizableCssClasses","getAriaExpanded","setAriaExpanded","addOrRemoveResizableCssClass","expanded","createEffect","userCompDetails","userCompDomElement","childNodes","getResizableClassName","HeaderRowComp","getTransform","setTransform","getHeight","setHeight","getTop","setTop","getAriaRowIndex","setAriaRowIndex","getCellCtrls","setCellCtrls","typeColumn","getType","HeaderRowType","COLUMN","typeGroup","COLUMN_GROUP","typeFilter","FLOATING_FILTER","setCellCtrlsMaintainOrder","next","isEnsureDomOrder","prevMap","mapById","c","getInstanceId","nextMap","oldCtrlsWeAreKeeping","has","newCtrls","nextOrderMaintained","transform","height","top","setHeaderCtrls","ctrls","rowIndex","cssClassesList","push","cssClasses","createCellJsx","cellCtrl","i","HeaderRowContainerComp","getCenterContainerWidth","setCenterContainerWidth","getCenterContainerTransform","setCenterContainerTransform","getPinnedContainerWidth","setPinnedContainerWidth","getHeaderRowCtrls","setHeaderRowCtrls","pinnedLeft","pinned","Constants","PINNED_LEFT","pinnedRight","PINNED_RIGHT","centre","destroyFuncs","f","length","setCtrls","setCenterWidth","setContainerTransform","HeaderRowContainerCtrl","insertRowsJsx","eCenterContainerStyle","ePinnedStyle","_tmpl$2","GridHeaderComp","setHeightAndMinHeight","GridHeaderCtrl","PopupEditorComp","popupService","editDetails","eParentCell","useModelPopup","isStopEditingWhenCellsLoseFocus","wrapper","PopupEditorWrapper","ePopupGui","positionParams","column","getColumn","rowNode","getRowNode","type","eventSource","ePopup","keepWithinBounds","positionCallback","popupPosition","positionPopupUnderComponent","bind","positionPopupOverComponent","translate","getLocaleTextFunc","addPopupRes","addPopup","modal","eChild","closeOnEsc","closedCallback","onPopupEditorClosed","anchorToElement","ariaLabel","hideEditorPopup","hideFunc","children","ShowEditDetails","getCompDetails","inPopup","popup","eGuiFn","setPopupRef","setInlineRef","ToolsComp","CompWrapper","innerProps","createFn","includeSelection","createSelectionCheckbox","includeDndSource","createDndSource","includeRowDrag","createRowDragComp","ShowRenderDetails","showDetails","isNoCompDetails","valueForNoCellRenderer","bodyJsxFunc","showTools","showCellWrapper","setECellValue","cellInstanceId","checkCellEditorDeprecations","cellEditor","col","isPopup","msg","doOnce","getPopupPosition","CellComp","printLayout","editingRow","renderDetails","setRenderDetails","setEditDetails","renderCompVersion","renderCompVersionList","setRenderCompVersionList","userStyles","setUserStyles","tabIndex","setTabIndex","setRole","colId","setIncludeSelection","setIncludeRowDrag","setIncludeDndSource","forceWrapper","isForceWrapper","eCellWrapper","eCellValue","val","cellRenderer","setEditorRef","editingCancelledByUserComp","isCancelBeforeStart","stopEditing","refAny","afterGuiAttached","setPopupEditorRef","setInlineEditorRef","ariaDescribedBy","styles","getFocusableElement","include","getCellEditor","getCellRenderer","getParentOfValue","force","readyForRefresh","isJsCellRenderer","result","maintainOrderOnColumns","domOrder","instanceIdMap","Map","set","oldCellCtrls","newCellCtrls","newInstanceIdMap","tempMap","instanceId","RowComp","rowCtrl","containerType","getRowIndex","setRowIndex","getRowId","setRowId","getRole","getRowBusinessKey","setRowBusinessKey","getTabIndex","getUserStyles","getFullWidthCompDetails","setFullWidthCompDetails","getDomOrder","setDomOrder","getInitialRowTop","getInitialTransform","fullWidthCompRef","setFullWidthRef","newRef","tryCount","trySetup","firstChild","setupDetailRowAutoHeight","isAlive","showFullWidth","getFullWidthCellRenderer","getRowStyles","assign","isShowCells","isShowFullWidth","showCellsJsx","isEditing","isPrintLayout","showFullWidthJsx","RowContainerComp","viewportHeight","setViewportHeight","rowCtrlsOrdered","setRowCtrlsOrdered","rowCtrls","setRowCtrls","containerWidth","setContainerWidth","getRowContainerTypeForName","eWrapper","eViewport","eContainer","RowContainerCtrl","getRowContainerCssClasses","wrapperClasses","viewportClasses","viewport","containerClasses","container","template1","RowContainerName","CENTER","template2","TOP_CENTER","BOTTOM_CENTER","STICKY_TOP_CENTER","template3","rowCtrlsOrderedCopy","oldRows","r","indexOf","newRows","viewportStyle","containerStyle","buildContainer","GridBodyComp","agStackComponentsRegistry","getRowAnimationClass","setRowAnimationClass","getAriaColCount","setAriaColCount","getAriaRowCount","setAriaRowCount","getTopHeight","setTopHeight","getBottomHeight","setBottomHeight","getStickyTopHeight","setStickyTopHeight","getStickyTopTop","setStickyTopTop","getStickyTopWidth","setStickyTopWidth","getTopDisplay","setTopDisplay","getBottomDisplay","setBottomDisplay","getMovingCss","setMovingCss","getForceVerticalScrollClass","setForceVerticalScrollClass","getTopAndBottomOverflowY","setTopAndBottomOverflowY","getCellSelectableCss","setCellSelectableCss","getLayoutClass","setLayoutClass","eRoot","eTop","eStickyTop","eBodyViewport","eBottom","newComp","tag","CompClass","getComponentClass","setRowAnimationCssOnBodyViewport","setColumnCount","setRowCount","setColumnMovingCss","updateLayoutClasses","setAlwaysVerticalScrollClass","setPinnedTopBottomOverflowY","registerBodyViewportResizeListener","listener","unsubscribeFromResize","GridBodyCtrl","getRootClasses","getBodyViewportClasses","getTopClasses","getStickyTopClasses","getBottomClasses","getTopStyle","display","getStickyTopStyle","getBottomStyle","TOP_LEFT","TOP_RIGHT","TOP_FULL_WIDTH","LEFT","RIGHT","FULL_WIDTH","STICKY_TOP_LEFT","STICKY_TOP_RIGHT","STICKY_TOP_FULL_WIDTH","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_FULL_WIDTH","TabGuardComp","eFocusableElement","onTabKeyDown","gridCtrl","eTopGuard","eBottomGuard","parseInt","TabGuardCtrl","focusInnerElement","fromBottom","forceFocusOutOfContainer","GridComp","rtlClass","setRtlClass","keyboardFocusClass","setKeyboardFocusClass","layoutClass","cursor","setCursor","userSelect","setUserSelect","initialised","setInitialised","beans","getBean","tabGuardRef","setTabGuardRef","tabGuardReady","eBody","beansToDestroy","HeaderDropZonesClass","SideBarClass","StatusBarClass","WatermarkClass","PaginationClass","additionalEls","showDropZones","headerDropZonesComp","el","showSideBar","sideBarComp","bottomTabGuard","querySelector","showStatusBar","statusBarComp","paginationComp","showWatermark","watermarkComp","destroyBeans","parentElement","removeChild","GridCtrl","destroyGridUi","addOrRemoveKeyboardFocusClass","addOrRemove","FocusService","AG_KEYBOARD_FOCUS","getFocusableContainers","els","gridBodyCompEl","sideBarEl","class","bodyCssClasses","topStyle","WebkitUserSelect","AgGridSolid","setContext","getPortals","setPortals","propsCopy","changes","changesExist","currentValue","previousValue","ComponentUtil","processOnChange","modules","info","item","gridParams","providedBeanInstances","frameworkComponentWrapper","frameworkOverrides","copyAttributesToGridOptions","createUiCallback","ctrlsService","CtrlsService","NAME","whenReady","refCallback","gridRef","acceptChangesCallback","gridCoreCreator","GridCoreCreator","create"],"mappings":"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"}