{"version":3,"file":"index.js","sources":["../../src/grid/core/solidCompWrapper.tsx","../../src/grid/core/solidCompWrapperFactory.tsx","../../src/grid/core/beansContext.tsx","../../src/grid/core/utils.tsx","../../src/grid/cellRenderer/detailCellRenderer.tsx","../../src/grid/userComps/jsUserComp.tsx","../../src/grid/userComps/solidUserComp.tsx","../../src/grid/userComps/userComp.tsx","../../src/grid/cellRenderer/groupCellRenderer.tsx","../../src/grid/core/solidFrameworkOverrides.tsx","../../src/grid/header/headerCellComp.tsx","../../src/grid/header/headerFilterCellComp.tsx","../../src/grid/header/headerGroupCellComp.tsx","../../src/grid/header/headerRowComp.tsx","../../src/grid/header/headerRowContainerComp.tsx","../../src/grid/header/gridHeaderComp.tsx","../../src/grid/cells/popupEditorComp.tsx","../../src/grid/cells/showEditDetails.tsx","../../src/grid/cells/showRenderDetails.tsx","../../src/grid/cells/cellComp.tsx","../../src/grid/rows/rowComp.tsx","../../src/grid/rows/rowContainerComp.tsx","../../src/grid/gridBodyComp.tsx","../../src/grid/tabGuardComp.tsx","../../src/grid/gridComp.tsx","../../src/grid/agGridSolid.tsx","../../src/index.tsx"],"sourcesContent":["import { WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalInfo, PortalManager } from \"../agGridSolid\";\n\nexport default class SolidCompWrapper implements WrappableInterface {\n\n    private eGui?: HTMLElement;\n    private SolidCompClass: any;\n\n    private portalManager: PortalManager;\n    private portalInfo?: PortalInfo;\n\n    private instance: any;\n\n    constructor(SolidCompClass: any, portalManager: PortalManager) {\n        this.SolidCompClass = SolidCompClass;        \n        this.portalManager = portalManager;\n    }\n\n    public init(props: any): void {\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-solid-container';\n        this.portalInfo = {\n            mount: this.eGui,\n            SolidClass: this.SolidCompClass,\n            props,\n            ref: instance => {\n                this.instance = instance;\n            }\n        };\n        this.portalManager.addPortal(this.portalInfo);\n    }\n\n    public destroy(): void {\n        this.portalInfo && this.portalManager.removePortal(this.portalInfo);\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui!;\n    }\n\n    public hasMethod(name: string): boolean {\n        return this.instance[name] != null;\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this.instance;\n    }\n\n    public callMethod(name: string, args: IArguments): void {\n        return this.instance[name].apply(this.instance, args);\n    }\n\n    public addMethod(name: string, callback: Function): void {\n        (this as any)[name] = callback;\n    }\n\n}\n","import { BaseComponentWrapper, FrameworkComponentWrapper, WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalManager } from \"../agGridSolid\";\nimport SolidCompWrapper from \"./solidCompWrapper\";\n\nexport default class SolidCompWrapperFactory extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private portalManager: PortalManager;\n\n    constructor(portalManager: PortalManager) {\n        super();\n        this.portalManager = portalManager;\n    }\n\n    createWrapper(SolidComponentClass: any): WrappableInterface {\n        return new SolidCompWrapper(SolidComponentClass, this.portalManager);\n    }\n}\n","import { Beans } from '@ag-grid-community/core';\nimport { createContext } from \"solid-js\";\n\nexport const BeansContext = createContext<Beans>({} as Beans);\n","export const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    constructor(...initialClasses: string[]) {\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}\n\nexport interface RefPointer<T> {\n    instance?: T;\n    afterSet?: (ref: T)=>void;\n}","import { GridOptions, IDetailCellRenderer, IDetailCellRendererCtrl, IDetailCellRendererParams } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport AgGridSolid, { AgGridSolidRef } from '../agGridSolid';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\n\nconst DetailCellRenderer = (props: IDetailCellRendererParams) => {\n\n    const {ctrlsFactory, context, \n        gridOptionsService, resizeObserverService, \n            clientSideRowModel, serverSideRowModel} = useContext(BeansContext);\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getGridCssClasses, setGridCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getDetailGridOptions, setDetailGridOptions] = createSignal<GridOptions>();\n    const [getDetailRowData, setDetailRowData] = createSignal<any[]>();\n\n    let ctrl: IDetailCellRendererCtrl;\n    let eGuiRef: HTMLDivElement;\n\n    const getCssClassesStr = createMemo(() => getCssClasses().toString() + ' ag-details-row');\n    const getGridCssClassesStr = createMemo(() => getGridCssClasses().toString() + ' ag-details-grid');\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return ctrl.refresh(); }\n    }));\n\n    onMount(() => {\n        if (props.template && typeof props.template === 'string') {\n            console.warn('AG Grid: detailCellRendererParams.template is not supported by Solid - this only works with frameworks that work against String templates. To change the template, please provide your own Solid Detail Cell Renderer.');\n        }\n\n        const compProxy: IDetailCellRenderer = {\n            addOrRemoveCssClass: (name: string, on: boolean) => setCssClasses(getCssClasses().setClass(name, on)),\n            addOrRemoveDetailGridCssClass: (name: string, on: boolean) => setGridCssClasses(getGridCssClasses().setClass(name, on)),\n            setDetailGrid: gridOptions => setDetailGridOptions(gridOptions),\n            setRowData: rowData => setDetailRowData(rowData),\n            getGui: () => eGuiRef\n        };\n\n        ctrl = ctrlsFactory.getInstance('detailCellRenderer') as IDetailCellRendererCtrl;\n        if (!ctrl) { return; } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n\n        ctrl.init(compProxy, props);\n\n        let resizeObserverDestroyFunc: () => void;\n\n        if (gridOptionsService.is('detailRowAutoHeight')) {\n            const checkRowSizeFunc = () => {\n                // when disposed, current is null, so nothing to do, and the resize observer will\n                // be disposed of soon\n                if (eGuiRef==null) { return; }\n\n                const clientHeight = eGuiRef.clientHeight;\n\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    const updateRowHeightFunc = () => {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        } else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n    \n            resizeObserverDestroyFunc = resizeObserverService.observeResize(eGuiRef, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n\n        return () => {\n            context.destroyBean(ctrl);\n            if (resizeObserverDestroyFunc) {\n                resizeObserverDestroyFunc();\n            }\n        };\n    });\n\n    const setRef = (ref: AgGridSolidRef) => {\n        ctrl.registerDetailWithMaster(ref.api, ref.columnApi)\n    };\n\n    return (\n        <div class={getCssClassesStr()} ref={eGuiRef!}>\n            {\n                getDetailGridOptions() &&\n                <AgGridSolid class={getGridCssClassesStr()} {...getDetailGridOptions()} rowData={getDetailRowData()} ref={ setRef }></AgGridSolid> \n            }\n        </div>\n    );\n};\n\nexport default DetailCellRenderer;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\n\nconst JsUserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: (ref: any)=>void\n})=> {\n    const { context } = useContext(BeansContext);\n\n    const promise = p.compDetails.newAgStackInstance();\n    if (!promise) { return <></>; }\n\n    const comp = promise.resolveNow(null, (x: any) => x); // js comps are never async\n    if (!comp) { return <></>; }\n    p.ref && p.ref(comp);\n\n    const gui = comp.getGui();\n\n    onCleanup( ()=> {\n        comp && context.destroyBean(comp);\n        p.ref && p.ref(undefined);\n    });\n\n    return <>{gui}</>;\n};\n\nexport default JsUserComp;","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup } from 'solid-js';\n\nconst SolidUserComp = (props: {\n    compDetails: UserCompDetails, \n    ref?: any\n})=> {\n    const SolidClass = props.compDetails.componentClass;\n\n    let refSet = false;\n\n    const setRef = (ref: any)=> {\n        if (!props.ref) { return; }\n        props.ref(ref);\n        refSet = true;\n    };\n\n    onCleanup( ()=> {\n        if (refSet) {\n            props.ref && props.ref(undefined);\n        }\n    });\n\n    return <SolidClass ref={setRef} { ...props.compDetails.params }/>;\n};\n\nexport default SolidUserComp;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport JsUserComp from './jsUserComp';\nimport SolidUserComp from './solidUserComp';\n\nconst UserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: any\n})=> {\n    \n    const showSolidComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <>\n            { showSolidComp() \n                && <SolidUserComp compDetails={p.compDetails} ref={p.ref} /> }\n            { showJsComp() \n                && <JsUserComp compDetails={p.compDetails} ref={p.ref} /> }\n        </>\n    );\n};\n\nexport default UserComp;\n","import { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer, UserCompDetails, _ } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport { BeansContext } from \"../core/beansContext\";\nimport { CssClasses } from \"../core/utils\";\nimport UserComp from \"../userComps/userComp\";\n\nconst GroupCellRenderer = (props: GroupCellRendererParams) => {\n\n    const context = useContext(BeansContext).context!;\n\n    let eGui: HTMLElement;\n    let eValueRef: HTMLElement;\n    let eCheckboxRef: HTMLElement;\n    let eExpandedRef: HTMLElement;\n    let eContractedRef: HTMLElement;\n\n    const [getInnerCompDetails, setInnerCompDetails] = createSignal<UserCompDetails>();\n    const [getChildCount, setChildCount] = createSignal<string>();\n    const [getValue, setValue] = createSignal<any>();\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getExpandedCssClasses, setExpandedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getContractedCssClasses, setContractedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getCheckboxCssClasses, setCheckboxCssClasses] = createSignal<CssClasses>(new CssClasses('ag-invisible'));\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return false; }\n    }));\n\n    onMount( ()=> {\n\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (details, valueToDisplay) => {\n                setInnerCompDetails(details);\n                const escapedValue = _.escapeString(valueToDisplay, true);\n                setValue(escapedValue);\n            },\n            setChildCount: count => setChildCount(count),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setContractedDisplayed: displayed => setContractedCssClasses(getContractedCssClasses().setClass('ag-hidden', !displayed)),\n            setExpandedDisplayed: displayed => setExpandedCssClasses(getExpandedCssClasses().setClass('ag-hidden', !displayed)),\n            setCheckboxVisible: visible => setCheckboxCssClasses(getCheckboxCssClasses().setClass('ag-invisible', !visible))\n        };\n\n        const ctrl = context.createBean(new GroupCellRendererCtrl());\n        ctrl.init(compProxy, eGui, eCheckboxRef, eExpandedRef, eContractedRef, GroupCellRenderer, props);\n\n        return () => { context.destroyBean(ctrl);};\n    });\n\n    const getClassName = createMemo(() => `ag-cell-wrapper ${getCssClasses().toString()}`);\n    const getExpandedClassName = createMemo(() => `ag-group-expanded ${getExpandedCssClasses().toString()}`);\n    const getContractedClassName = createMemo(() => `ag-group-contracted ${getContractedCssClasses().toString()}`);\n    const getCheckboxClassName = createMemo(() => `ag-group-checkbox ${getCheckboxCssClasses().toString()}`);\n\n    const isShowUserComp = ()=> getInnerCompDetails() != null;\n    const isShowValue = ()=> getInnerCompDetails() == null && getValue() != null;\n\n    return (\n        <span class={getClassName()} ref={eGui!} {...(!props.colDef ? { role: 'gridcell' } : {})}>\n            <span class={getExpandedClassName()} ref={eExpandedRef!}></span>\n            <span class={getContractedClassName()} ref={eContractedRef!}></span>\n            <span class={getCheckboxClassName()} ref={eCheckboxRef!}></span>\n            <span class=\"ag-group-value\" ref={eValueRef!}>\n                { isShowUserComp() && <UserComp compDetails={getInnerCompDetails()!}></UserComp>}\n                { isShowValue() && <>{getValue()}</> }\n            </span>\n            <span class=\"ag-group-child-count\">{getChildCount()}</span>\n        </span>\n    );\n};\n\n// we do not memo() here, as it would stop the forwardRef working\nexport default GroupCellRenderer;\n","import { VanillaFrameworkOverrides } from \"@ag-grid-community/core\";\nimport DetailCellRenderer from \"../cellRenderer/detailCellRenderer\";\nimport GroupCellRenderer from \"../cellRenderer/groupCellRenderer\";\n\nexport class SolidFrameworkOverrides extends VanillaFrameworkOverrides {\n\n    constructor() {\n        super();\n    }\n\n    private frameworkComponents: any = {\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agDetailCellRenderer: DetailCellRenderer\n    };\n\n    public frameworkComponent(name: string): any {\n        return this.frameworkComponents[name];\n    }\n\n    isFrameworkComponent(comp: any): boolean {\n        if (!comp) { return false; }\n        const prototype = comp.prototype;\n        const isJsComp = prototype && 'getGui' in prototype;\n        return !isJsComp;\n    }\n}","import { ColumnSortState, CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl})=> {\n\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getTitle, setTitle] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>();\n    const [getAriaSort, setAriaSort] = createSignal<ColumnSortState>();\n    const [getAriaDescription, setAriaDescription] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement\n    let eHeaderCompWrapper: HTMLDivElement\n    \n    let userComp: IHeader | undefined;\n\n    const setRef = (ref: any) => {\n        userComp = ref;\n    }\n\n    const clearRef = (ref: any) => {\n        if (userComp===ref) {\n            userComp = undefined;\n        }\n    }\n\n    const { ctrl } = props;\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    onMount(() => {\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n\n            setAriaDescription: description => setAriaDescription(description),\n            setAriaSort: sort => setAriaSort(sort),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: () => userComp\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize, eHeaderCompWrapper);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.insertAdjacentElement('afterend', selectAllGui);\n        ctrl.setDragSource(eGui);\n    });\n\n    const style = createMemo(() => ({ width: getWidth() }));\n\n    const showSolidComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <div\n            ref={eGui!}\n            class=\"ag-header-cell\"\n            style={ style() }\n            title={ getTitle() }\n            col-id={ getColId() }\n            aria-sort={ getAriaSort() }\n            role=\"columnheader\"\n            tabIndex={-1}\n            aria-description={ getAriaDescription() }\n        >\n            <div ref={eResize!} class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref={eHeaderCompWrapper!} class=\"ag-header-cell-comp-wrapper\" role=\"presentation\">\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} ref={setRef} /> }\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderCellComp;\n","import { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssBodyClasses, setBodyCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssButtonWrapperClasses, setButtonWrapperCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getButtonWrapperAriaHidden, setButtonWrapperAriaHidden] = createSignal<\"true\" | \"false\">(\"false\");\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eFloatingFilterBody: HTMLDivElement;\n    let eButtonWrapper: HTMLDivElement;\n    let eButtonShowMainFilter: HTMLButtonElement;\n\n    let alreadyResolved = false;\n    let userCompResolve: (value: IFloatingFilter)=>void;\n    let userCompPromise: AgPromise<IFloatingFilter>;\n    onMount( ()=> {\n        userCompPromise = new AgPromise<IFloatingFilter>( resolve => {\n            userCompResolve = resolve;\n        });\n    });\n    \n    const setRef = (value: IFloatingFilter) => {\n        // i don't know why, but react was calling this method multiple\n        // times, thus un-setting, them immediately setting the reference again.\n        // because we are resolving a promise, it's not good to be resolving\n        // the promise multiple times, so we only resolve the first time.\n        if (alreadyResolved) { return; }\n        // we also skip when it's un-setting\n        if (value==null) { return; }\n\n        userCompResolve && userCompResolve(value);\n        alreadyResolved = true;\n    };\n\n    const { ctrl } = props;\n\n    onMount(() => {\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            setButtonWrapperDisplayed: (displayed) => {\n                setButtonWrapperCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setButtonWrapperAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setWidth: width => setWidth(width),\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompPromise,\n            setMenuIcon: eIcon => eButtonShowMainFilter.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui, eButtonShowMainFilter, eFloatingFilterBody);\n\n    });\n\n    const getStyle = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getCssClassesString = createMemo( ()=> 'ag-header-cell ag-floating-filter ' + getCssClasses.toString() );\n    const getBodyCssClassesString = createMemo( ()=> getCssBodyClasses.toString(), );\n    const getButtonWrapperCssClassesString = createMemo( ()=> 'ag-floating-filter-button ' + getCssButtonWrapperClasses.toString() );\n    \n    return (\n        <div ref={eGui!} class={getCssClassesString()} style={getStyle()} role=\"gridcell\" tabIndex={-1}>\n            <div ref={eFloatingFilterBody!} class={getBodyCssClassesString()} role=\"presentation\">\n                { getUserCompDetails() && <UserComp compDetails={getUserCompDetails()!} ref={setRef}/> }\n            </div>\n            <div ref={eButtonWrapper!} aria-hidden={getButtonWrapperAriaHidden()} class={getButtonWrapperCssClassesString()} role=\"presentation\">\n                <button ref={eButtonShowMainFilter!} type=\"button\" aria-label=\"Open Filter Menu\" class=\"ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderFilterCellComp;\n","import { HeaderGroupCellCtrl, IHeaderGroupCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssResizableClasses, setResizableCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getResizableAriaHidden, setResizableAriaHidden] = createSignal<\"true\" | \"false\">(\"false\");\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getTitle, setTitle] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>();\n    const [getAriaExpanded, setAriaExpanded] = createSignal<'true'|'false'|undefined>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement;\n\n    const { ctrl } = props;\n\n    onMount( () => {\n\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            setResizableDisplayed: (displayed) => {\n                setResizableCssClasses(prev => prev.setClass('ag-hidden', !displayed));\n                setResizableAriaHidden(!displayed ? \"true\" : \"false\");\n            },\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize);\n    });\n\n    // add drag handling, must be done after component is added to the dom\n    createEffect(()=> {\n        const userCompDetails = getUserCompDetails();\n        if (userCompDetails==null) { return; }\n\n        let userCompDomElement: HTMLElement | undefined = undefined;\n        eGui.childNodes.forEach( node => {\n            if (node!=null && node!==eResize) {\n                userCompDomElement = node as HTMLElement;\n            }\n        });\n\n        userCompDomElement && ctrl.setDragSource(userCompDomElement);\n    });\n\n    const style = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getClassName = createMemo( ()=> 'ag-header-group-cell ' + getCssClasses().toString() );\n    const getResizableClassName = createMemo( ()=> 'ag-header-cell-resize ' + getCssResizableClasses().toString() );\n\n    return (\n        <div ref={eGui!} class={getClassName()} style={style()} title={getTitle()} col-id={getColId()} \n                    role=\"columnheader\" tabIndex={-1} aria-expanded={getAriaExpanded()}>\n\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} /> }\n\n            <div ref={eResize!} aria-hidden={getResizableAriaHidden()} class={getResizableClassName()}></div>\n        </div>\n    );\n};\n\nexport default HeaderGroupCellComp;","import { AbstractHeaderCellCtrl, HeaderCellCtrl, HeaderFilterCellCtrl, HeaderGroupCellCtrl, HeaderRowCtrl, HeaderRowType, IHeaderRowComp, _ } from '@ag-grid-community/core';\nimport { createMemo, createSignal, For, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport HeaderCellComp from './headerCellComp';\nimport HeaderFilterCellComp from './headerFilterCellComp';\nimport HeaderGroupCellComp from './headerGroupCellComp';\n\nconst HeaderRowComp = (props: {ctrl: HeaderRowCtrl}) => {\n\n    const { gridOptionsService } = useContext(BeansContext);\n\n    const [ getTransform, setTransform ] = createSignal<string>();\n    const [ getHeight, setHeight ] = createSignal<string>();\n    const [ getTop, setTop ] = createSignal<string>();\n    const [ getWidth, setWidth ] = createSignal<string>();\n    const [ getAriaRowIndex, setAriaRowIndex ] = createSignal<number>();\n    const [ getCellCtrls, setCellCtrls ] = createSignal<AbstractHeaderCellCtrl[]>([]);\n\n    let eGui: HTMLDivElement;\n\n    const { ctrl } = props;\n\n    const typeColumn = ctrl.getType() === HeaderRowType.COLUMN;\n    const typeGroup = ctrl.getType() === HeaderRowType.COLUMN_GROUP;\n    const typeFilter = ctrl.getType() === HeaderRowType.FLOATING_FILTER;\n\n    const setCellCtrlsMaintainOrder = (next: AbstractHeaderCellCtrl[]) => {\n        const prev = getCellCtrls();\n        const isEnsureDomOrder = gridOptionsService.is('ensureDomOrder');\n        const isPrintLayout = gridOptionsService.isDomLayout('print');\n\n        // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n        if (isEnsureDomOrder || isPrintLayout) {\n            return next;\n        }\n\n        // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n        // otherwise we will loose transition effects as elements are placed in different dom locations\n        const prevMap = _.mapById(prev, c => c.getInstanceId());\n        const nextMap = _.mapById(next, c => c.getInstanceId());\n\n        const oldCtrlsWeAreKeeping = prev.filter( c => nextMap.has(c.getInstanceId()) );\n        const newCtrls = next.filter( c => !prevMap.has(c.getInstanceId()) )\n\n        const nextOrderMaintained = [...oldCtrlsWeAreKeeping, ...newCtrls];\n        setCellCtrls(nextOrderMaintained);\n    };\n\n    onMount(() => {\n        const compProxy: IHeaderRowComp = {\n            setTransform: transform => setTransform(transform),\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: ctrls => setCellCtrlsMaintainOrder(ctrls),\n            setWidth: width => setWidth(width),\n            setAriaRowIndex: rowIndex => setAriaRowIndex(rowIndex)\n        };\n        ctrl.setComp(compProxy);\n    });\n\n    const style = createMemo( ()=> ({\n        transform: getTransform(),\n        height: getHeight(),\n        top: getTop(),\n        width: getWidth()\n    }));\n\n    const cssClassesList: string[] = [`ag-header-row`]\n    typeColumn && cssClassesList.push(`ag-header-row-column`);\n    typeGroup && cssClassesList.push(`ag-header-row-column-group`);\n    typeFilter && cssClassesList.push(`ag-header-row-column-filter`);\n    const cssClasses = cssClassesList.join(' ');\n\n    const createCellJsx = (cellCtrl: AbstractHeaderCellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP :\n                return <HeaderGroupCellComp ctrl={cellCtrl as HeaderGroupCellCtrl} />;\n\n            case HeaderRowType.FLOATING_FILTER :\n                return <HeaderFilterCellComp ctrl={cellCtrl as HeaderFilterCellCtrl} />;\n                \n            default :\n                return <HeaderCellComp ctrl={cellCtrl as HeaderCellCtrl} />;\n        }\n    };\n\n    // below, we are not doing floating filters, not yet\n    return (\n        <div ref={eGui!} class={cssClasses} role=\"row\" style={style()} aria-rowindex={getAriaRowIndex()}>\n            <For each={getCellCtrls()}>{(cellCtrl, i) => createCellJsx(cellCtrl) }</For>\n        </div>\n    );\n};\n\nexport default HeaderRowComp;\n","import { ColumnPinnedType, HeaderRowContainerCtrl, HeaderRowCtrl, IHeaderRowContainerComp } from '@ag-grid-community/core';\nimport { createMemo, createSignal, For, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowComp from './headerRowComp';\n\nconst HeaderRowContainerComp = (props: {pinned: ColumnPinnedType | null})=> {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getAriaHidden, setAriaHidden] = createSignal<true | false>(false);\n    const [getCenterContainerWidth, setCenterContainerWidth] = createSignal<string>();\n    const [getCenterContainerTransform, setCenterContainerTransform] = createSignal<string>();\n    const [getPinnedContainerWidth, setPinnedContainerWidth] = createSignal<string>();\n    const [getHeaderRowCtrls, setHeaderRowCtrls] = createSignal<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const pinnedLeft = props.pinned === 'left';\n    const pinnedRight = props.pinned === 'right';\n    const centre = !pinnedLeft && !pinnedRight;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount(() => {\n\n        const compProxy: IHeaderRowContainerComp = {\n            setDisplayed: (displayed) => {\n                setCssClasses(getCssClasses().setClass('ag-hidden', !displayed));\n                setAriaHidden(!displayed)\n            },\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => setCenterContainerWidth(width),\n            setContainerTransform: transform => setCenterContainerTransform(transform),\n\n            // pinned only\n            setPinnedContainerWidth: width => setPinnedContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const getClassName = createMemo( ()=> getCssClasses.toString() );\n\n    const insertRowsJsx = ()=> \n    <For each={getHeaderRowCtrls()}>{ ctrl =>\n        <HeaderRowComp ctrl={ctrl}/>\n    }</For>;    \n    \n    const eCenterContainerStyle = createMemo( ()=> ({\n        width: getCenterContainerWidth(),\n        transform: getCenterContainerTransform()\n    }));\n\n    const ePinnedStyle = createMemo( ()=> ({\n        width: getPinnedContainerWidth(),\n        'min-width': getPinnedContainerWidth(),\n        'max-width': getPinnedContainerWidth()\n    }));\n\n    return (\n        <>\n            { \n                pinnedLeft && \n                <div ref={eGui!} class={\"ag-pinned-left-header \" + getClassName()} aria-hidden={getAriaHidden()} role=\"presentation\" style={ePinnedStyle()}>\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={eGui!} class={\"ag-pinned-right-header \" + getClassName()} aria-hidden={getAriaHidden()} role=\"presentation\" style={ePinnedStyle()}>\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={eGui!} class={\"ag-header-viewport \" + getClassName()} role=\"presentation\">\n                    <div class=\"ag-header-container\" role=\"rowgroup\" style={eCenterContainerStyle()}>\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default HeaderRowContainerComp;\n","import { GridHeaderCtrl, IGridHeaderComp } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowContainerComp from './headerRowContainerComp';\n\nconst GridHeaderComp = ()=> {\n    \n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getHeight, setHeight] = createSignal<string>();\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setHeightAndMinHeight: height => setHeight(height)\n        };\n\n        const ctrl = context.createBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, eGui, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const className = createMemo( ()=> {\n        let res = getCssClasses().toString();\n        return 'ag-header ' + res;\n    });\n\n    const style = createMemo( ()=> ({\n        height: getHeight(),\n        'min-height': getHeight()\n    }));\n\n    return (\n        <div ref={eGui!} class={className()} style={style()} role=\"presentation\">\n            <HeaderRowContainerComp pinned={'left'} />\n            <HeaderRowContainerComp pinned={null}/>\n            <HeaderRowContainerComp pinned={'right'} />\n        </div>\n    );\n};\n\nexport default GridHeaderComp;\n","import { CellCtrl, PopupEditorWrapper } from '@ag-grid-community/core';\nimport { JSX, onCleanup, useContext } from 'solid-js';\nimport { Portal } from \"solid-js/web\";\nimport { BeansContext } from '../core/beansContext';\nimport { EditDetails } from './common';\n\nconst PopupEditorComp = (props: {\n            editDetails: EditDetails, \n            cellCtrl: CellCtrl, \n            eParentCell: HTMLElement,\n            children?: JSX.Element\n        }) => {\n\n    const { context, popupService, localeService, gridOptionsService } = useContext(BeansContext);\n\n    const {editDetails, cellCtrl, eParentCell} = props;\n    const {compDetails} = editDetails;\n\n    const useModelPopup = gridOptionsService.is('stopEditingWhenCellsLoseFocus');\n    \n    const wrapper = context.createBean(new PopupEditorWrapper(compDetails.params));\n    const ePopupGui = wrapper.getGui();\n\n    const positionParams = {\n        column: cellCtrl.getColumn(),\n        rowNode: cellCtrl.getRowNode(),\n        type: 'popupCellEditor',\n        eventSource: eParentCell,\n        ePopup: ePopupGui,\n        position: editDetails!.popupPosition,\n        keepWithinBounds: true\n    };\n\n    const positionCallback = popupService.positionPopupByComponent.bind(popupService, positionParams);\n\n    const translate = localeService.getLocaleTextFunc();\n\n    const addPopupRes = popupService.addPopup({\n        modal: useModelPopup,\n        eChild: ePopupGui,\n        closeOnEsc: true,\n        closedCallback: () => { cellCtrl.onPopupEditorClosed(); },\n        anchorToElement: eParentCell,\n        positionCallback,\n        ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n    });\n\n    const hideEditorPopup: (()=>void) | undefined = addPopupRes ? addPopupRes.hideFunc : undefined;\n\n    onCleanup( ()=> {\n        if (hideEditorPopup!=null) {\n            hideEditorPopup();\n        }\n        context.destroyBean(wrapper);\n    });\n\n    return (\n        <Portal mount={ePopupGui}>\n            { props.children }\n        </Portal>\n    );\n};\n\nexport default PopupEditorComp;\n","import { CellCtrl, ICellEditor } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport UserComp from '../userComps/userComp';\nimport { EditDetails } from './common';\nimport PopupEditorComp from './popupEditorComp';\n\nconst ShowEditDetails = (props: {\n    editDetails: EditDetails,\n    cellCtrl: CellCtrl,\n    eGuiFn: () => HTMLDivElement,\n    setInlineRef: (ref: ICellEditor) => void,\n    setPopupRef: (ref: ICellEditor) => void\n}\n) => {\n\n    const getCompDetails = createMemo(() => props.editDetails.compDetails);\n    const compDetails = props.editDetails.compDetails;\n\n    // when editing, we must have a comp, otherwise doesn't work\n    if (!compDetails) { return <></>; }\n\n    const inPopup = props.editDetails.popup;\n    const eGui = props.eGuiFn();\n\n    return (\n        <>\n            {inPopup &&\n                <PopupEditorComp cellCtrl={props.cellCtrl} eParentCell={eGui} editDetails={props.editDetails}>\n                    <UserComp compDetails={getCompDetails()!} ref={props.setPopupRef} />\n                </PopupEditorComp>\n            }\n            {!inPopup &&\n                <UserComp compDetails={getCompDetails()!} ref={props.setInlineRef} />\n            }\n        </>\n    );\n};\n\nexport default ShowEditDetails;\n","import { CellCtrl, Component  } from '@ag-grid-community/core';\nimport { createMemo, onCleanup, Setter, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport UserComp from '../userComps/userComp';\nimport { RenderDetails } from './common';\n\nconst ToolsComp = (props: {\n    includeSelection: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    setSelectionCheckboxId: Setter<string>,\n    cellCtrl: CellCtrl\n}) => {\n\n    const { context } = useContext(BeansContext);\n\n    const CompWrapper = (innerProps: {\n        createFn: () => Component | undefined\n    }) => {\n        const comp = innerProps.createFn();\n        if (!comp) { return <></>; }\n\n        onCleanup(() => context.destroyBean(comp));\n        return <>{comp.getGui()}</>\n    };\n\n    return (\n        <>\n            { props.includeSelection && \n                <CompWrapper createFn={() => {\n                    const checkboxSelectionComp = props.cellCtrl.createSelectionCheckbox();\n                    props.setSelectionCheckboxId(checkboxSelectionComp.getCheckboxId());\n                    return checkboxSelectionComp;\n                }}/> }\n            { props.includeDndSource && \n                <CompWrapper createFn={() => props.cellCtrl.createDndSource()}/> }\n            { props.includeRowDrag && \n                <CompWrapper createFn={() => props.cellCtrl.createRowDragComp()}/> }\n        </>\n    );\n};\n\nconst ShowRenderDetails = (props: {\n    showDetails: RenderDetails,\n    ref: any,\n    showCellWrapper: boolean,\n    showTools: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    includeSelection: boolean,\n    setSelectionCheckboxId: Setter<string>\n    cellCtrl: CellCtrl,\n    cellInstanceId: string,\n    setECellValue: (eCellValue: HTMLElement) => void\n}) => {\n\n    const getCompDetails = createMemo(() => props.showDetails.compDetails);\n    const isNoCompDetails = createMemo(() => props.showDetails.compDetails == null);\n\n    // if we didn't do this, objects would cause error. we depend on objects for things\n    // like the aggregation functions avg and count, which return objects and depend on toString()\n    // getting called.\n    const valueForNoCellRenderer = () => {\n        const value = props.showDetails.value;\n        return (value && value.toString) ? value.toString() : value;\n    };\n\n    const bodyJsxFunc = () => (\n        <>\n            {isNoCompDetails() && <>{valueForNoCellRenderer()}</>}\n            {getCompDetails() && <UserComp compDetails={getCompDetails()!}\n                ref={props.ref}/>}\n        </>\n    );\n\n    return (\n        <>\n            {\n                props.showTools &&\n                <ToolsComp\n                    includeDndSource={props.includeDndSource}\n                    includeRowDrag={props.includeRowDrag}\n                    includeSelection={props.includeSelection}\n                    setSelectionCheckboxId={props.setSelectionCheckboxId}\n                    cellCtrl={props.cellCtrl} />\n            }\n            {\n                props.showCellWrapper\n                    ? (\n                        <span role=\"presentation\" id={`cell-${props.cellInstanceId}`} class=\"ag-cell-value\" ref={props.setECellValue}>\n                            {bodyJsxFunc()}\n                        </span>\n                    )\n                    : bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport default ShowRenderDetails;\n","import { CellCtrl, CellStyle, CssClassManager, ICellComp, ICellEditor, ICellRenderer, _ } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onMount } from 'solid-js';\nimport { EditDetails, RenderDetails } from './common';\nimport ShowEditDetails from './showEditDetails';\nimport ShowRenderDetails from './showRenderDetails';\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid SolidJS cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid SolidJS cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = createSignal<RenderDetails>();\n    const [editDetails, setEditDetails ] = createSignal<EditDetails>();\n\n    let renderCompVersion = 0;\n    const [renderCompVersionList, setRenderCompVersionList] = createSignal<number[]>([renderCompVersion]);\n\n    const [userStyles, setUserStyles] = createSignal<CellStyle>();\n\n    const [tabIndex, setTabIndex] = createSignal<number>();\n    const [role, setRole] = createSignal<string>();\n    const [colId, setColId] = createSignal<string>();\n    const [title, setTitle] = createSignal<string | undefined>();\n    const [selectionCheckboxId, setSelectionCheckboxId] = createSignal<string>();\n    const [includeSelection, setIncludeSelection] = createSignal<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = createSignal<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = createSignal<boolean>(false);\n\n    const forceWrapper = cellCtrl.isForceWrapper();\n\n    let eCellWrapper: HTMLDivElement;\n    let eCellValue: HTMLElement;\n    const setECellValue = (val: HTMLElement)=> {\n        eCellValue = val;\n    };\n\n    let eGui: HTMLDivElement;\n    let cellRenderer: ICellRenderer | null = null;\n\n    let cellEditor: ICellEditor | null = null;\n    const setEditorRef = (popup: boolean, ref: ICellEditor)=> {\n        cellEditor = ref;\n        if (!cellEditor) { return; }\n\n        checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n            // we cannot set state inside render, so hack is to do it in next VM turn\n            setTimeout(() => {\n                cellCtrl.stopEditing(true);\n                cellCtrl.focusCell(true);\n            });\n        }\n\n        const refAny = ref as any;\n        if (refAny.afterGuiAttached) {\n            setTimeout(() => refAny.afterGuiAttached(), 0);\n        }\n    }\n    const setPopupEditorRef = (ref: ICellEditor) => setEditorRef(true, ref);\n    const setInlineEditorRef = (ref: ICellEditor) => setEditorRef(false, ref);\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    const showTools = createMemo(() => renderDetails() != null && (includeSelection() || includeDndSource() || includeRowDrag()) );\n    const showCellWrapper = createMemo(() => forceWrapper || showTools());\n\n    const cellInstanceId = cellCtrl.getInstanceId();\n\n    const ariaDescribedBy = createMemo(() => {\n        const cellId = `cell-${cellInstanceId}`;\n        const describedByIds: string[] = [];\n\n        if (includeSelection() && selectionCheckboxId()) {\n            describedByIds.push(selectionCheckboxId()!);\n        }\n        \n        describedByIds.push(cellId);\n\n        return describedByIds.join(' ')\n    });\n\n    onMount( () => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setUserStyles: (styles: CellStyle) => setUserStyles(styles),\n            getFocusableElement: () => eGui,\n            setTabIndex: tabIndex => setTabIndex(tabIndex),\n            setRole: role => setRole(role),\n            setColId: colId => setColId(colId),\n            setTitle: title => setTitle(title),\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            \n            getCellEditor: () => cellEditor,\n            getCellRenderer: () => cellRenderer ? cellRenderer : null,\n            getParentOfValue: () => eCellValue ? eCellValue : eCellWrapper ? eCellWrapper : eGui,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        cellCtrl.setComp(compProxy, eGui, eCellWrapper, printLayout, editingRow);\n    });\n\n    createEffect(() => {\n        const isEditing = !!editDetails();\n        const isPopup = isEditing && !!editDetails()?.popup;\n\n        cssClassManager.addOrRemoveCssClass('ag-cell-value', !showCellWrapper());\n        cssClassManager.addOrRemoveCssClass('ag-cell-inline-editing', isEditing && !isPopup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-popup-editing', isEditing && isPopup);\n        cssClassManager.addOrRemoveCssClass('ag-cell-not-inline-editing', !isEditing || isPopup);\n        cellCtrl.getRowCtrl()?.setInlineEditingCss(isEditing);\n    });\n\n    // we only do refreshing for JS Comps. for SolidJS, the props will change for the cell renderer.\n    let readyForRefresh = false;\n    createEffect(() => {\n        const details = renderDetails();\n        const isJsCellRenderer = details != null && details.compDetails != null && !details.compDetails.componentFromFramework;\n        if (!isJsCellRenderer) {\n            readyForRefresh = false;\n            return;\n        }\n        if (!readyForRefresh) {\n            readyForRefresh = true;\n            return;\n        }\n\n        if (!cellRenderer) { return; }\n\n        const params = details.compDetails!.params;\n        const result = cellRenderer.refresh ? cellRenderer.refresh(params) : false;\n        if (result != true) {\n            // increasing the render key forces a new instance of ShowRenderDetails,\n            // as we iteration through renderCompVersion, if the contents of\n            // renderCompVersion changes, that maps to a new ShowRenderDetails instance.\n            renderCompVersion++;\n            setRenderCompVersionList([renderCompVersion]);\n        }\n    });\n\n    // we pass in eGui as a function below as eGui is not ready\n    // when the template is built, only after it. so we defer\n    // reading eGui variable until it's needed, after ShowEditDetails\n    // is created.\n    const eGuiFn = () => eGui;\n\n    const bodyJsxFunc = () => (\n        <>\n                <For each={\n                    renderCompVersionList()}>{() =>\n                    <>\n                        { renderDetails() && <ShowRenderDetails \n                            showDetails={renderDetails()!}\n                            ref={cellRenderer}\n                            cellInstanceId={cellInstanceId}\n                            showCellWrapper={showCellWrapper()}\n                            cellCtrl={cellCtrl}\n                            includeDndSource={includeDndSource()}\n                            includeRowDrag={includeRowDrag()}\n                            includeSelection={includeSelection()}\n                            setSelectionCheckboxId={setSelectionCheckboxId}\n                            showTools={showTools()}\n                            setECellValue={setECellValue}\n                        /> }\n                    </>\n                }</For>\n                { editDetails() &&\n                    <ShowEditDetails\n                        editDetails={editDetails()!}\n                        cellCtrl={cellCtrl}\n                        eGuiFn={eGuiFn}\n                        setInlineRef={setInlineEditorRef}\n                        setPopupRef={setPopupEditorRef}\n                    /> \n                }\n        </>);\n\n    return (\n        <div\n            ref={ eGui! }\n            style={ userStyles() }\n            tabIndex={ tabIndex() }\n            role={ role() as 'gridcell'} //fixme - why not hard code role to gridcell?\n            col-id={ colId() }\n            title={ title() }\n            aria-describedby={ ariaDescribedBy() }> {\n                showCellWrapper()\n                ? (\n                    <div class=\"ag-cell-wrapper\" role=\"presentation\" aria-hidden=\"true\" ref={ eCellWrapper! }>\n                        { bodyJsxFunc() }\n                    </div>\n                )\n                : bodyJsxFunc()\n            }\n        </div>\n    );\n}\n\nexport default CellComp;\n","import { CellCtrl, CssClassManager, ICellRenderer, IRowComp, RowContainerType, RowCtrl, RowStyle, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount } from \"solid-js\";\nimport CellComp from '../cells/cellComp';\nimport UserComp from '../userComps/userComp';\n\ninterface CellCtrls {\n    list: CellCtrl[],\n    instanceIdMap: Map<string, CellCtrl>\n}\n\nconst maintainOrderOnColumns = (prev: CellCtrls, next: CellCtrl[], domOrder: boolean): CellCtrls => {\n    if (domOrder) {\n        const res: CellCtrls = { list: next, instanceIdMap: new Map() };\n        next.forEach(c => res.instanceIdMap.set(c.getInstanceId(), c));\n\n        return res;\n    }\n\n    // if dom order not important, we don't want to change the order\n    // of the elements in the dom, as this would break transition styles\n    const oldCellCtrls: CellCtrl[] = [];\n    const newCellCtrls: CellCtrl[] = [];\n    const newInstanceIdMap: Map<string, CellCtrl> = new Map();\n    const tempMap: Map<string, CellCtrl> = new Map();\n\n    next.forEach(c => tempMap.set(c.getInstanceId(), c));\n\n    prev.list.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (tempMap.has(instanceId)) {\n            oldCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    next.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (!prev.instanceIdMap.has(instanceId)) {\n            newCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    const res: CellCtrls = {\n        list: [...oldCellCtrls, ...newCellCtrls],\n        instanceIdMap: newInstanceIdMap\n    };\n\n    return res;\n}\n\nconst RowComp = (params: {rowCtrl: RowCtrl, containerType: RowContainerType}) => {\n\n    const { rowCtrl, containerType } = params;\n\n    const [getRowIndex, setRowIndex] = createSignal<string>();\n    const [getRowId, setRowId] = createSignal<string>();\n    const [getRole, setRole] = createSignal<string>();\n    const [getRowBusinessKey, setRowBusinessKey] = createSignal<string>();\n    const [getTabIndex, setTabIndex] = createSignal<number>();\n    const [getUserStyles, setUserStyles] = createSignal<RowStyle>();\n    const [getCellCtrls, setCellCtrls] = createSignal<CellCtrls>({ list: [], instanceIdMap: new Map() });\n    const [getFullWidthCompDetails, setFullWidthCompDetails] = createSignal<UserCompDetails>();\n    const [getDomOrder, setDomOrder] = createSignal<boolean>(false);\n\n    // these styles have initial values, so element is placed into the DOM with them,\n    // rather than an transition getting applied.\n    const [getTop, setTop] = createSignal<string | undefined>(rowCtrl.getInitialRowTop(containerType));\n    const [getTransform, setTransform] = createSignal<string | undefined>(rowCtrl.getInitialTransform(containerType));\n\n    let eGui: HTMLDivElement;\n    let fullWidthCompRef: ICellRenderer;\n\n    const setFullWidthRef = (newRef: ICellRenderer)=> {\n        fullWidthCompRef = newRef;\n    };\n\n    createEffect(() => {\n        const compDetails = getFullWidthCompDetails();\n        if (!compDetails) { return; }\n\n        let tryCount = 0;\n\n        // puts autoHeight onto full with detail rows. this needs trickery, as we need\n        // the HTMLElement for the provided Detail Cell Renderer. this pattern was copied\n        // from React, it's possible it's not needed here, however given it's hard to be\n        // sure on Solid's async behavious, keeping the patter here.\n        const trySetup = ()=> {\n            const eChild = eGui.firstChild as HTMLElement;\n            if (eChild) {\n                rowCtrl.setupDetailRowAutoHeight(eChild);\n                return;\n            }\n\n            if (tryCount>=10) { return; }\n\n            tryCount++;\n            setTimeout(trySetup, 0);\n        };\n\n        trySetup();\n    });\n\n    onMount(() => {\n        // because React is asychronous, it's possible the RowCtrl is no longer a valid RowCtrl. This can\n        // happen if user calls two API methods one after the other, with the second API invalidating the rows\n        // the first call created. Thus the rows for the first call could still get created even though no longer needed.\n        if (!rowCtrl.isAlive()) {  return; }\n\n        const cssClassManager = new CssClassManager(() => eGui);\n\n        const compProxy: IRowComp = {\n            // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n            // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n            setTop: value => setTop(value),\n            setTransform: value => setTransform(value),\n\n            // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n            // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setRowIndex: value => setRowIndex(value),\n            setRowId: value => setRowId(value),\n            setRowBusinessKey: value => setRowBusinessKey(value),\n            setTabIndex: value => setTabIndex(value),\n            setUserStyles: (styles: RowStyle) => setUserStyles(styles),\n            setRole: value => setRole(value),\n            // if we don't maintain the order, then cols will be ripped out and into the dom\n            // when cols reordered, which would stop the CSS transitions from working\n            setCellCtrls: next => setCellCtrls(maintainOrderOnColumns(getCellCtrls(), next, getDomOrder())),\n            showFullWidth: compDetails => setFullWidthCompDetails(compDetails),\n            getFullWidthCellRenderer: ()=> fullWidthCompRef,\n        };\n        rowCtrl.setComp(compProxy, eGui, containerType);\n        onCleanup(() => rowCtrl.unsetComp(containerType));\n    });\n\n\n    const getRowStyles = createMemo(() => {\n        const res = { \n            top: getTop(), \n            transform: getTransform(),\n        };\n\n        Object.assign(res, getUserStyles());\n        return res;\n    });\n\n    const isShowCells = createMemo( ()=> getCellCtrls()!=null );\n    const isShowFullWidth = createMemo( ()=> getFullWidthCompDetails()!=null );\n\n    const showCellsJsx = ()=> (\n            <For each={getCellCtrls().list}>{ cellCtrl =>\n                <CellComp\n                        cellCtrl={ cellCtrl }\n                        editingRow={ rowCtrl.isEditing() }\n                        printLayout={ rowCtrl.isPrintLayout() }\n                    />\n            }</For>\n    );\n\n    const showFullWidthJsx = ()=> (\n        <UserComp compDetails={ getFullWidthCompDetails()! } ref={setFullWidthRef}/>\n    );\n\n    return (\n        <div\n            ref={ eGui! }\n            // role={ role() } /// FIXME\n            style={ getRowStyles() }\n            row-index={ getRowIndex() }\n            row-id={ getRowId() }\n            row-business-key={ getRowBusinessKey() }\n            tabIndex={ getTabIndex() }\n        >\n            { isShowFullWidth() && showFullWidthJsx() }\n            { isShowCells() && showCellsJsx() }\n\n        </div>\n    );\n};\n\nexport default RowComp;\n","import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from '../core/beansContext';\nimport { classesList } from '../core/utils';\nimport RowComp from './rowComp';\n\nconst RowContainerComp = (props: {name: RowContainerName})=> {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = createSignal<string>('');\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = createSignal<RowCtrl[]>([]);\n    const [rowCtrls, setRowCtrls] = createSignal<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = createSignal<boolean>(false);\n    const [containerWidth, setContainerWidth] = createSignal<string>('');\n\n    const { name } = props;\n    const containerType = createMemo(() => getRowContainerTypeForName(name));\n\n    let eWrapper: HTMLDivElement;\n    let eViewport: HTMLDivElement;\n    let eContainer: HTMLDivElement;\n\n    const cssClasses = createMemo(() => RowContainerCtrl.getRowContainerCssClasses(name));\n    const wrapperClasses = createMemo( ()=> classesList(cssClasses().wrapper));\n    const viewportClasses = createMemo( ()=> classesList(cssClasses().viewport));\n    const containerClasses = createMemo( ()=> classesList(cssClasses().container));\n\n    // no need to useMemo for boolean types\n    const template1 = name === RowContainerName.CENTER;\n    const template2 = name === RowContainerName.TOP_CENTER \n                    || name === RowContainerName.BOTTOM_CENTER \n                    || name === RowContainerName.STICKY_TOP_CENTER;\n    const template3 = !template1 && !template2;\n\n    // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n    // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n    let rowCtrlsOrderedCopy: RowCtrl[] = [];\n    createEffect( () => {\n        if (domOrder()) {\n            setRowCtrlsOrdered(rowCtrls());\n            return;\n        }\n        // if dom order not important, we don't want to change the order\n        // of the elements in the dom, as this would break transition styles\n        // \n        // we use the rowCtrlsOrderedCopy, to avoid this effect depending on and\n        // setting the same value, hence causing an infinite loop\n        const prev = rowCtrlsOrderedCopy; \n        const oldRows = prev.filter(r => rowCtrls().indexOf(r) >= 0);\n        const newRows = rowCtrls().filter(r => oldRows.indexOf(r) < 0);\n        const next = [...oldRows, ...newRows];\n        setRowCtrlsOrdered(next);\n        rowCtrlsOrderedCopy = next;\n    });\n\n    onMount(() => {\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: rowCtrls => setRowCtrls(rowCtrls),\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => setContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        onCleanup(() => context.destroyBean(ctrl));\n\n        ctrl.setComp(compProxy, eContainer, eViewport, eWrapper);\n    });\n\n    const viewportStyle = createMemo(() => ({\n        height: viewportHeight()\n    }));\n\n    const containerStyle = createMemo(() => ({\n        width: containerWidth()\n    }));\n\n    const buildContainer = () => (\n        <div\n            class={ containerClasses() }\n            ref={ eContainer }\n            role={ rowCtrls().length ? \"rowgroup\" : \"presentation\" }\n            style={ containerStyle() }>\n                <For each={rowCtrlsOrdered()}>{(rowCtrl, i) =>\n                    <RowComp rowCtrl={ rowCtrl } containerType={ containerType() }></RowComp>\n                }</For>\n        </div>\n    );\n\n    return (\n        <>\n            {\n                template1 &&\n                <div class={ wrapperClasses() } ref={ eWrapper! } role=\"presentation\">\n                    <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                        { buildContainer() }\n                    </div>\n                </div>\n            }\n            {\n                template2 &&\n                <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                    { buildContainer() }\n                </div>\n            }\n            {\n                template3 && buildContainer()\n            }\n        </>\n    );\n\n};\n\nexport default RowContainerComp;\n","import { GridBodyCtrl, IGridBodyComp, RowContainerName } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridHeaderComp from \"./header/gridHeaderComp\";\nimport RowContainerComp from \"./rows/rowContainerComp\";\n\nconst GridBodyComp = ()=> {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [getRowAnimationClass, setRowAnimationClass] = createSignal<string>('');\n    const [getAriaColCount, setAriaColCount] = createSignal<number>(0);\n    const [getAriaRowCount, setAriaRowCount] = createSignal<number>(0);\n    const [getTopHeight, setTopHeight] = createSignal<number>(0);\n    const [getBottomHeight, setBottomHeight] = createSignal<number>(0);\n    const [getStickyTopHeight, setStickyTopHeight] = createSignal<string>('0px');\n    const [getStickyTopTop, setStickyTopTop] = createSignal<string>('0px');\n    const [getStickyTopWidth, setStickyTopWidth] = createSignal<string>('100%');\n    const [getTopDisplay, setTopDisplay] = createSignal<string>('');\n    const [getBottomDisplay, setBottomDisplay] = createSignal<string>('');\n    const [getBodyViewportWidth, setBodyViewportWidth] = createSignal<string>('');\n    \n    const [getMovingCss, setMovingCss] = createSignal<string | null>(null);\n    const [getForceVerticalScrollClass, setForceVerticalScrollClass] = createSignal<string | null>(null);\n    const [getTopAndBottomOverflowY, setTopAndBottomOverflowY] = createSignal<string>('');\n    const [getCellSelectableCss, setCellSelectableCss] = createSignal<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [getLayoutClass, setLayoutClass] = createSignal<string>('ag-layout-normal');\n\n    let eRoot: HTMLDivElement;\n    let eTop: HTMLDivElement;\n    let eStickyTop: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let eBodyViewport: HTMLDivElement;\n    let eBottom: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            onCleanup( ()=> context.destroyBean(comp) );\n            return comp;\n        };\n\n        eRoot.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n        eRoot.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n        eBody.appendChild(newComp('AG-FAKE-VERTICAL-SCROLL').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight,\n            setBottomHeight,\n            setStickyTopHeight,\n            setStickyTopTop,\n            setStickyTopWidth,\n            setTopDisplay,\n            setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: setCellSelectableCss,\n            setBodyViewportWidth: setBodyViewportWidth,\n\n            registerBodyViewportResizeListener: listener => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        onCleanup( ()=> context.destroyBean(ctrl) );\n\n        // fixme - should not be in a timeout,\n        // was becusae we need GridHeaderComp to be created first\n        setTimeout( ()=> \n            ctrl.setComp(\n                compProxy,\n                eRoot,\n                eBodyViewport,\n                eTop,\n                eBottom,\n                eStickyTop\n            ), 0);\n    });\n\n    const getRootClasses = createMemo(() =>\n        classesList('ag-root','ag-unselectable', getMovingCss(), getLayoutClass())\n    );\n    const getBodyClasses = createMemo(() => \n        classesList('ag-body', getLayoutClass())\n    );\n    const getBodyClipperClasses = createMemo(() =>\n        classesList('ag-body-clipper', getLayoutClass())\n    );\n    const getBodyViewportClasses = createMemo(() =>\n        classesList('ag-body-viewport', getRowAnimationClass(), getLayoutClass(), getForceVerticalScrollClass(), getCellSelectableCss())\n    );\n    const getTopClasses = createMemo(() =>\n        classesList('ag-floating-top', getCellSelectableCss())\n    );\n    const getStickyTopClasses = createMemo(() =>\n        classesList('ag-sticky-top', getCellSelectableCss())\n    );\n    const getBottomClasses = createMemo(() =>\n        classesList('ag-floating-bottom', getCellSelectableCss())\n    );\n\n    const getTopStyle = createMemo(() => ({\n        height: getTopHeight,\n        'min-height': getTopHeight,\n        display: getTopDisplay,\n        'overflow-y': (getTopAndBottomOverflowY as any)\n    }));\n\n    const getStickyTopStyle = createMemo(() => ({\n        height: getStickyTopHeight,\n        top: getStickyTopTop,\n        width: getStickyTopWidth\n    }));\n\n    const getBottomStyle = createMemo(()=> ({\n        height: getBottomHeight,\n        'min-height': getBottomHeight,\n        display: getBottomDisplay,\n        'overflow-y': (getTopAndBottomOverflowY as any)\n    }));\n\n    const getBodyViewportStyle = createMemo( ()=> ({\n        width: getBodyViewportWidth()\n    }));\n\n    return (\n        <div ref={ eRoot! } class={ getRootClasses() } role=\"treegrid\" aria-colcount={ getAriaColCount() } aria-rowcount={ getAriaRowCount() }>\n            <GridHeaderComp/>\n            <div ref={ eTop! } class={ getTopClasses() } role=\"presentation\" style={ getTopStyle() }>\n                <RowContainerComp name={ RowContainerName.TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.TOP_FULL_WIDTH } />\n            </div>\n            <div class={getBodyClasses()} ref={eBody!} role=\"presentation\">\n                <div class={getBodyClipperClasses()} role=\"presentation\">\n                    <div ref={ eBodyViewport! } class={ getBodyViewportClasses() } role=\"presentation\" style={ getBodyViewportStyle() }>\n                        <RowContainerComp name={ RowContainerName.LEFT } />\n                        <RowContainerComp name={ RowContainerName.CENTER } />\n                        <RowContainerComp name={ RowContainerName.RIGHT } />\n                        <RowContainerComp name={ RowContainerName.FULL_WIDTH } />\n                    </div>\n                </div>\n            </div>\n            <div ref={ eStickyTop! } class={ getStickyTopClasses() } role=\"presentation\" style={ getStickyTopStyle() }>\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_FULL_WIDTH } />\n            </div>\n            <div ref={ eBottom! } class={ getBottomClasses() } role=\"presentation\" style={ getBottomStyle() }>\n                <RowContainerComp name={ RowContainerName.BOTTOM_LEFT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_CENTER } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_RIGHT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_FULL_WIDTH } />\n            </div>\n        </div>\n    );\n};\n\nexport default GridBodyComp;\n","import { GridCtrl, ITabGuard, TabGuardClassNames, TabGuardCtrl } from '@ag-grid-community/core';\nimport { createSignal, JSX, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from \"./core/beansContext\";\n\ninterface TabGuardProps {\n    children: JSX.Element,\n    eFocusableElement: HTMLDivElement,\n    onTabKeyDown: (e: KeyboardEvent) => void,\n    gridCtrl: GridCtrl,\n    ref: (ref: TabGuardRef)=>void\n}\n\nexport interface TabGuardRef {\n    forceFocusOutOfContainer(): void;\n}\n\nconst TabGuardComp = (props: TabGuardProps)=> {\n\n    const { children, eFocusableElement, onTabKeyDown, gridCtrl } = props;\n    const [tabIndex, setTabIndex] = createSignal<number>();\n\n    let eTopGuard: HTMLDivElement;\n    let eBottomGuard: HTMLDivElement;\n    let ctrl: TabGuardCtrl;\n\n    const { context } = useContext(BeansContext);\n\n    onMount(() => {\n\n        const compProxy: ITabGuard = {\n            setTabIndex: value => value == null ? setTabIndex(undefined) : setTabIndex(parseInt(value, 10))\n        }\n\n        ctrl = context.createBean(new TabGuardCtrl({\n            comp: compProxy,\n            eTopGuard: eTopGuard,\n            eBottomGuard: eBottomGuard,\n            eFocusableElement: eFocusableElement,\n            \n            onTabKeyDown: onTabKeyDown,\n            focusInnerElement: fromBottom => gridCtrl.focusInnerElement(fromBottom)\n        }));\n\n        props.ref({\n            forceFocusOutOfContainer() {\n                ctrl.forceFocusOutOfContainer();\n            }\n        });\n    });\n\n    onCleanup( ()=> context.destroyBean(ctrl) );\n\n    return (\n        <>\n            <div class={ `${TabGuardClassNames.TAB_GUARD} ${TabGuardClassNames.TAB_GUARD_TOP}` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eTopGuard! }></div>\n\n            { children }\n\n            <div class={ `${TabGuardClassNames.TAB_GUARD} ${TabGuardClassNames.TAB_GUARD_BOTTOM}` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eBottomGuard! }></div>\n        </>\n    )\n};\n\nexport default TabGuardComp;","import {\n    Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridBodyComp from './gridBodyComp';\nimport TabGuardComp, { TabGuardRef } from './tabGuardComp';\n\nconst GridComp = (props: {context: Context, class?: string})=> {\n\n    const [rtlClass, setRtlClass] = createSignal<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = createSignal<string>('');\n    const [layoutClass, setLayoutClass] = createSignal<string>('');\n    const [cursor, setCursor] = createSignal<string | null>(null);\n    const [userSelect, setUserSelect] = createSignal<string | null>(null);\n    const [initialised, setInitialised] = createSignal<boolean>(false);\n\n    const {context} = props;\n    const beans = context.getBean('beans');\n\n    let tabGuardRef: TabGuardRef;\n    const setTabGuardRef = (newRef: TabGuardRef)=> {\n        tabGuardRef = newRef;\n        tabGuardRef && tabGuardReady();\n    };\n\n    let eGui: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let gridCtrl: GridCtrl;\n\n    const onTabKeyDown = () => undefined;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    const tabGuardReady = ()=> {\n\n        const beansToDestroy: any[] = [];\n\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const el = headerDropZonesComp.getGui();\n            eGui.insertAdjacentElement('afterbegin', el);\n            additionalEls.push(el);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const el = sideBarComp.getGui();\n            const bottomTabGuard = eBody.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', el);\n                additionalEls.push(el);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const el = statusBarComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const el = paginationComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const el = watermarkComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        destroyFuncs.push( ()=> {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        });\n    };\n\n    onMount(() => {\n        gridCtrl = context.createBean(new GridCtrl());\n        destroyFuncs.push( ()=> context.destroyBean(gridCtrl) );\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            addOrRemoveKeyboardFocusClass:\n                (addOrRemove: boolean) => setKeyboardFocusClass(addOrRemove ? FocusService.AG_KEYBOARD_FOCUS : ''),\n            forceFocusOutOfContainer: () => {\n                tabGuardRef && tabGuardRef.forceFocusOutOfContainer();\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eGui.querySelector('.ag-root');\n                const sideBarEl = eGui.querySelector('.ag-side-bar:not(.ag-hidden)');\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eGui, eGui);\n        setInitialised(true);\n    });\n    \n    const cssClasses = createMemo( () => classesList('ag-root-wrapper', rtlClass(), keyboardFocusClass(), layoutClass(), props.class) );\n    const bodyCssClasses = createMemo( () => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass()));\n\n    const topStyle = createMemo( () => ({\n        userSelect: userSelect != null ? (userSelect as any) : '',\n        WebkitUserSelect: userSelect != null ? (userSelect as any) : '',\n        cursor: cursor != null ? cursor : ''\n    }));\n\n    return (\n        <div ref={ eGui! } class={ cssClasses() } style={ topStyle() }>\n            <div class={ bodyCssClasses() } ref={ eBody! }>\n                { initialised() &&\n                    // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                    // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                    // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                    // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                    // hangs the UI)\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardRef }\n                            eFocusableElement= { eGui! }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrl! }>\n                            <GridBodyComp/>\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default GridComp;","import {ColumnApi, ComponentUtil, Context, CtrlsService, GridApi, GridCoreCreator, GridOptions, GridParams, Module} from '@ag-grid-community/core';\nimport {createEffect, createSignal, For, onCleanup, onMount} from \"solid-js\";\nimport {Portal} from 'solid-js/web';\nimport SolidCompWrapperFactory from './core/solidCompWrapperFactory';\nimport {SolidFrameworkOverrides} from './core/solidFrameworkOverrides';\nimport GridComp from './gridComp';\n\nexport interface AgGridSolidRef {\n    api: GridApi;\n    columnApi: ColumnApi;\n}\n\nexport interface AgGridSolidProps extends GridOptions {\n    gridOptions?: GridOptions;\n    ref?: AgGridSolidRef | ((ref: AgGridSolidRef) => void);\n    modules?: Module[];\n    class?: string;\n}\n\nexport interface PortalInfo {\n    mount: HTMLElement;\n    SolidClass: any;\n    props: any;\n    ref: (instance: any) => void;\n}\n\nexport interface PortalManager {\n    addPortal(info: PortalInfo): void;\n\n    removePortal(info: PortalInfo): void;\n}\n\nconst AgGridSolid = (props: AgGridSolidProps) => {\n    let eGui: HTMLDivElement;\n    let gridOptions: GridOptions;\n\n    const [context, setContext] = createSignal<Context>();\n    const [getPortals, setPortals] = createSignal<PortalInfo[]>([]);\n\n    const destroyFuncs: (() => void)[] = [];\n    onCleanup(() => {\n        destroyFuncs.forEach(f => f());\n        destroyFuncs.length = 0;\n    });\n\n    // we check for property changes. to get things started, we take a copy\n    // of all the properties at the start, and then compare against this for\n    // changes.\n    const propsCopy: any = {};\n    Object.keys(props).forEach(key => propsCopy[key] = (props as any)[key]);\n\n    createEffect(() => {\n        const keys = Object.keys(props);\n        const changes: { [key: string]: { currentValue: any, previousValue: any } } = {};\n        let changesExist = false;\n\n        keys.forEach(key => {\n            // this line reads from the prop, which in turn makes\n            // this prop a dependency for the effect.\n            const currentValue = (props as any)[key];\n\n            const previousValue = propsCopy[key];\n            if (previousValue !== currentValue) {\n                changes[key] = {\n                    currentValue,\n                    previousValue\n                };\n                propsCopy[key] = currentValue;\n                changesExist = true;\n            }\n        });\n\n        if (changesExist) {\n            ComponentUtil.processOnChange(changes, gridOptions.api!);\n        }\n    });\n\n    onMount(() => {\n\n        const modules = props.modules || [];\n\n        const portalManager: PortalManager = {\n            addPortal: info => {\n                setPortals([...getPortals(), info]);\n            },\n            removePortal: info => {\n                setPortals(getPortals().filter(item => item != info));\n            }\n        };\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new SolidCompWrapperFactory(portalManager)\n            },\n            modules,\n            frameworkOverrides: new SolidFrameworkOverrides()\n        };\n\n        gridOptions = props.gridOptions || {};\n        ComponentUtil.copyAttributesToGridOptions(gridOptions, props);\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                const refCallback = props.ref && (props.ref as (ref: AgGridSolidRef) => void);\n                if (refCallback) {\n                    const gridRef: AgGridSolidRef = {\n                        api: gridOptions.api!,\n                        columnApi: gridOptions.columnApi!\n                    };\n                    refCallback(gridRef);\n                }\n                destroyFuncs.push(() => gridOptions!.api!.destroy());\n            });\n        };\n\n        const acceptChangesCallback = () => {\n            // todo, what goes here?\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        gridCoreCreator.create(eGui, gridOptions, createUiCallback, acceptChangesCallback, gridParams);\n    });\n\n    return (\n        <div ref={eGui!} style={{height: '100%'}}>\n            {context() &&\n                <GridComp class={props.class} context={context()!}></GridComp>\n            }\n            <For each={getPortals()}>{(info, i) =>\n                <Portal mount={info.mount}>\n                    <info.SolidClass {...info.props} ref={info.ref}/>\n                </Portal>\n            }</For>\n        </div>\n    );\n}\n\nexport default AgGridSolid;\n","import AgGridSolid from \"./grid/agGridSolid\";\nexport default AgGridSolid;\n\nexport * from \"./grid/agGridSolid\";\n\n// /* @refresh reload */\n// import { render } from 'solid-js/web';\n//\n// import './index.css';\n// import App from './sampleApp/App';\n//\n// render(() => <App />, document.getElementById('root') as HTMLElement);\n"],"names":["SolidCompWrapper","constructor","SolidCompClass","portalManager","init","props","eGui","document","createElement","className","portalInfo","mount","SolidClass","ref","instance","addPortal","destroy","removePortal","getGui","hasMethod","name","getFrameworkComponentInstance","callMethod","args","apply","addMethod","callback","SolidCompWrapperFactory","BaseComponentWrapper","createWrapper","SolidComponentClass","BeansContext","createContext","classesList","list","filtered","filter","s","join","CssClasses","initialClasses","forEach","classesMap","setClass","on","nothingHasChanged","res","toString","Object","keys","key","DetailCellRenderer","ctrlsFactory","context","gridOptionsService","resizeObserverService","clientSideRowModel","serverSideRowModel","useContext","getCssClasses","setCssClasses","createSignal","getGridCssClasses","setGridCssClasses","getDetailGridOptions","setDetailGridOptions","getDetailRowData","setDetailRowData","ctrl","eGuiRef","getCssClassesStr","createMemo","getGridCssClassesStr","refresh","onMount","template","console","warn","compProxy","addOrRemoveCssClass","addOrRemoveDetailGridCssClass","setDetailGrid","gridOptions","setRowData","rowData","getInstance","createBean","resizeObserverDestroyFunc","is","checkRowSizeFunc","clientHeight","updateRowHeightFunc","node","setRowHeight","onRowHeightChanged","setTimeout","observeResize","destroyBean","setRef","registerDetailWithMaster","api","columnApi","_tmpl$","_$use","_$insert","_$memo","_$mergeProps","_$effect","_$className","JsUserComp","p","promise","compDetails","newAgStackInstance","comp","resolveNow","x","gui","onCleanup","undefined","SolidUserComp","componentClass","refSet","_$createComponent","params","UserComp","showSolidComp","details","componentFromFramework","showJsComp","GroupCellRenderer","eValueRef","eCheckboxRef","eExpandedRef","eContractedRef","getInnerCompDetails","setInnerCompDetails","getChildCount","setChildCount","getValue","setValue","getExpandedCssClasses","setExpandedCssClasses","getContractedCssClasses","setContractedCssClasses","getCheckboxCssClasses","setCheckboxCssClasses","setInnerRenderer","valueToDisplay","escapedValue","_","escapeString","count","setContractedDisplayed","displayed","setExpandedDisplayed","setCheckboxVisible","visible","GroupCellRendererCtrl","getClassName","getExpandedClassName","getContractedClassName","getCheckboxClassName","isShowUserComp","isShowValue","_$spread","colDef","role","SolidFrameworkOverrides","VanillaFrameworkOverrides","agGroupCellRenderer","agGroupRowRenderer","agDetailCellRenderer","frameworkComponent","frameworkComponents","isFrameworkComponent","prototype","isJsComp","HeaderCellComp","getWidth","setWidth","getTitle","setTitle","getColId","setColId","getAriaSort","setAriaSort","getAriaDescription","setAriaDescription","getUserCompDetails","setUserCompDetails","eResize","eHeaderCompWrapper","userComp","cssClassManager","CssClassManager","width","id","title","description","sort","getUserCompInstance","setComp","selectAllGui","getSelectAllGui","insertAdjacentElement","setDragSource","style","_$style","_$setAttribute","HeaderFilterCellComp","getCssBodyClasses","setBodyCssClasses","getCssButtonWrapperClasses","setButtonWrapperCssClasses","getButtonWrapperAriaHidden","setButtonWrapperAriaHidden","eFloatingFilterBody","eButtonWrapper","eButtonShowMainFilter","alreadyResolved","userCompResolve","userCompPromise","AgPromise","resolve","value","prev","addOrRemoveBodyCssClass","setButtonWrapperDisplayed","setCompDetails","getFloatingFilterComp","setMenuIcon","eIcon","appendChild","getStyle","getCssClassesString","getBodyCssClassesString","getButtonWrapperCssClassesString","HeaderGroupCellComp","getCssResizableClasses","setResizableCssClasses","getResizableAriaHidden","setResizableAriaHidden","getAriaExpanded","setAriaExpanded","setResizableDisplayed","expanded","createEffect","userCompDetails","userCompDomElement","childNodes","getResizableClassName","HeaderRowComp","getTransform","setTransform","getHeight","setHeight","getTop","setTop","getAriaRowIndex","setAriaRowIndex","getCellCtrls","setCellCtrls","typeColumn","getType","HeaderRowType","COLUMN","typeGroup","COLUMN_GROUP","typeFilter","FLOATING_FILTER","setCellCtrlsMaintainOrder","next","isEnsureDomOrder","isPrintLayout","isDomLayout","prevMap","mapById","c","getInstanceId","nextMap","oldCtrlsWeAreKeeping","has","newCtrls","nextOrderMaintained","transform","height","top","setHeaderCtrls","ctrls","rowIndex","cssClassesList","push","cssClasses","createCellJsx","cellCtrl","For","i","HeaderRowContainerComp","getAriaHidden","setAriaHidden","getCenterContainerWidth","setCenterContainerWidth","getCenterContainerTransform","setCenterContainerTransform","getPinnedContainerWidth","setPinnedContainerWidth","getHeaderRowCtrls","setHeaderRowCtrls","pinnedLeft","pinned","pinnedRight","centre","destroyFuncs","f","length","setDisplayed","setCtrls","setCenterWidth","setContainerTransform","HeaderRowContainerCtrl","insertRowsJsx","eCenterContainerStyle","ePinnedStyle","_tmpl$2","GridHeaderComp","setHeightAndMinHeight","GridHeaderCtrl","PopupEditorComp","popupService","localeService","editDetails","eParentCell","useModelPopup","wrapper","PopupEditorWrapper","ePopupGui","positionParams","column","getColumn","rowNode","getRowNode","type","eventSource","ePopup","position","popupPosition","keepWithinBounds","positionCallback","positionPopupByComponent","bind","translate","getLocaleTextFunc","addPopupRes","addPopup","modal","eChild","closeOnEsc","closedCallback","onPopupEditorClosed","anchorToElement","ariaLabel","hideEditorPopup","hideFunc","Portal","children","ShowEditDetails","getCompDetails","inPopup","popup","eGuiFn","setPopupRef","setInlineRef","ToolsComp","CompWrapper","innerProps","createFn","includeSelection","checkboxSelectionComp","createSelectionCheckbox","setSelectionCheckboxId","getCheckboxId","includeDndSource","createDndSource","includeRowDrag","createRowDragComp","ShowRenderDetails","showDetails","isNoCompDetails","valueForNoCellRenderer","bodyJsxFunc","showTools","showCellWrapper","setECellValue","cellInstanceId","checkCellEditorDeprecations","cellEditor","col","isPopup","msg","doOnce","getPopupPosition","CellComp","printLayout","editingRow","renderDetails","setRenderDetails","setEditDetails","renderCompVersion","renderCompVersionList","setRenderCompVersionList","userStyles","setUserStyles","tabIndex","setTabIndex","setRole","colId","selectionCheckboxId","setIncludeSelection","setIncludeRowDrag","setIncludeDndSource","forceWrapper","isForceWrapper","eCellWrapper","eCellValue","val","cellRenderer","setEditorRef","editingCancelledByUserComp","isCancelBeforeStart","stopEditing","focusCell","refAny","afterGuiAttached","setPopupEditorRef","setInlineEditorRef","ariaDescribedBy","cellId","describedByIds","styles","getFocusableElement","include","getCellEditor","getCellRenderer","getParentOfValue","force","isEditing","getRowCtrl","setInlineEditingCss","readyForRefresh","isJsCellRenderer","result","maintainOrderOnColumns","domOrder","instanceIdMap","Map","set","oldCellCtrls","newCellCtrls","newInstanceIdMap","tempMap","instanceId","RowComp","rowCtrl","containerType","getRowIndex","setRowIndex","getRowId","setRowId","getRole","getRowBusinessKey","setRowBusinessKey","getTabIndex","getUserStyles","getFullWidthCompDetails","setFullWidthCompDetails","getDomOrder","setDomOrder","getInitialRowTop","getInitialTransform","fullWidthCompRef","setFullWidthRef","newRef","tryCount","trySetup","firstChild","setupDetailRowAutoHeight","isAlive","showFullWidth","getFullWidthCellRenderer","unsetComp","getRowStyles","assign","isShowCells","isShowFullWidth","showCellsJsx","showFullWidthJsx","RowContainerComp","viewportHeight","setViewportHeight","rowCtrlsOrdered","setRowCtrlsOrdered","rowCtrls","setRowCtrls","containerWidth","setContainerWidth","getRowContainerTypeForName","eWrapper","eViewport","eContainer","RowContainerCtrl","getRowContainerCssClasses","wrapperClasses","viewportClasses","viewport","containerClasses","container","template1","RowContainerName","CENTER","template2","TOP_CENTER","BOTTOM_CENTER","STICKY_TOP_CENTER","template3","rowCtrlsOrderedCopy","oldRows","r","indexOf","newRows","viewportStyle","containerStyle","buildContainer","GridBodyComp","agStackComponentsRegistry","getRowAnimationClass","setRowAnimationClass","getAriaColCount","setAriaColCount","getAriaRowCount","setAriaRowCount","getTopHeight","setTopHeight","getBottomHeight","setBottomHeight","getStickyTopHeight","setStickyTopHeight","getStickyTopTop","setStickyTopTop","getStickyTopWidth","setStickyTopWidth","getTopDisplay","setTopDisplay","getBottomDisplay","setBottomDisplay","getBodyViewportWidth","setBodyViewportWidth","getMovingCss","setMovingCss","getForceVerticalScrollClass","setForceVerticalScrollClass","getTopAndBottomOverflowY","setTopAndBottomOverflowY","getCellSelectableCss","setCellSelectableCss","getLayoutClass","setLayoutClass","eRoot","eTop","eStickyTop","eBody","eBodyViewport","eBottom","newComp","tag","CompClass","getComponentClass","setRowAnimationCssOnBodyViewport","setColumnCount","setRowCount","setColumnMovingCss","updateLayoutClasses","setAlwaysVerticalScrollClass","setPinnedTopBottomOverflowY","registerBodyViewportResizeListener","listener","unsubscribeFromResize","GridBodyCtrl","getRootClasses","getBodyClasses","getBodyClipperClasses","getBodyViewportClasses","getTopClasses","getStickyTopClasses","getBottomClasses","getTopStyle","display","getStickyTopStyle","getBottomStyle","getBodyViewportStyle","TOP_LEFT","TOP_RIGHT","TOP_FULL_WIDTH","LEFT","RIGHT","FULL_WIDTH","STICKY_TOP_LEFT","STICKY_TOP_RIGHT","STICKY_TOP_FULL_WIDTH","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_FULL_WIDTH","TabGuardComp","eFocusableElement","onTabKeyDown","gridCtrl","eTopGuard","eBottomGuard","parseInt","TabGuardCtrl","focusInnerElement","fromBottom","forceFocusOutOfContainer","TabGuardClassNames","TAB_GUARD","TAB_GUARD_TOP","TAB_GUARD_BOTTOM","GridComp","rtlClass","setRtlClass","keyboardFocusClass","setKeyboardFocusClass","layoutClass","cursor","setCursor","userSelect","setUserSelect","initialised","setInitialised","beans","getBean","tabGuardRef","setTabGuardRef","tabGuardReady","beansToDestroy","HeaderDropZonesClass","SideBarClass","StatusBarClass","WatermarkClass","PaginationClass","additionalEls","showDropZones","headerDropZonesComp","el","showSideBar","sideBarComp","bottomTabGuard","querySelector","showStatusBar","statusBarComp","paginationComp","showWatermark","watermarkComp","destroyBeans","parentElement","removeChild","GridCtrl","destroyGridUi","addOrRemoveKeyboardFocusClass","addOrRemove","FocusService","AG_KEYBOARD_FOCUS","getFocusableContainers","els","gridBodyCompEl","sideBarEl","class","bodyCssClasses","topStyle","WebkitUserSelect","AgGridSolid","setContext","getPortals","setPortals","propsCopy","changes","changesExist","currentValue","previousValue","ComponentUtil","processOnChange","modules","info","item","gridParams","providedBeanInstances","frameworkComponentWrapper","frameworkOverrides","copyAttributesToGridOptions","createUiCallback","ctrlsService","CtrlsService","NAME","whenReady","refCallback","gridRef","acceptChangesCallback","gridCoreCreator","GridCoreCreator","create"],"mappings":"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"}