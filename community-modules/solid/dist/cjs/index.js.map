{"version":3,"file":"index.js","sources":["../../src/grid/core/solidCompWrapper.tsx","../../src/grid/core/solidCompWrapperFactory.tsx","../../src/grid/core/beansContext.tsx","../../src/grid/core/utils.tsx","../../src/grid/cellRenderer/detailCellRenderer.tsx","../../src/grid/userComps/jsUserComp.tsx","../../src/grid/userComps/solidUserComp.tsx","../../src/grid/userComps/userComp.tsx","../../src/grid/cellRenderer/groupCellRenderer.tsx","../../src/grid/core/solidFrameworkOverrides.tsx","../../src/grid/header/headerCellComp.tsx","../../src/grid/header/headerFilterCellComp.tsx","../../src/grid/header/headerGroupCellComp.tsx","../../src/grid/header/headerRowComp.tsx","../../src/grid/header/headerRowContainerComp.tsx","../../src/grid/header/gridHeaderComp.tsx","../../src/grid/cells/popupEditorComp.tsx","../../src/grid/cells/showEditDetails.tsx","../../src/grid/cells/showRenderDetails.tsx","../../src/grid/cells/cellComp.tsx","../../src/grid/rows/rowComp.tsx","../../src/grid/rows/rowContainerComp.tsx","../../src/grid/gridBodyComp.tsx","../../src/grid/tabGuardComp.tsx","../../src/grid/gridComp.tsx","../../src/grid/agGridSolid.tsx","../../src/index.tsx"],"sourcesContent":["import { WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalInfo, PortalManager } from \"../agGridSolid\";\n\nexport default class SolidCompWrapper implements WrappableInterface {\n\n    private eGui?: HTMLElement;\n    private SolidCompClass: any;\n\n    private portalManager: PortalManager;\n    private portalInfo?: PortalInfo;\n\n    private instance: any;\n\n    constructor(SolidCompClass: any, portalManager: PortalManager) {\n        this.SolidCompClass = SolidCompClass;        \n        this.portalManager = portalManager;\n    }\n\n    public init(props: any): void {\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-solid-container';\n        this.portalInfo = {\n            mount: this.eGui,\n            SolidClass: this.SolidCompClass,\n            props,\n            ref: instance => {\n                this.instance = instance;\n            }\n        };\n        this.portalManager.addPortal(this.portalInfo);\n    }\n\n    public destroy(): void {\n        this.portalInfo && this.portalManager.removePortal(this.portalInfo);\n    }\n\n    public getGui(): HTMLElement {\n        return this.eGui!;\n    }\n\n    public hasMethod(name: string): boolean {\n        return this.instance[name] != null;\n    }\n\n    public getFrameworkComponentInstance(): any {\n        return this.instance;\n    }\n\n    public callMethod(name: string, args: IArguments): void {\n        return this.instance[name].apply(this.instance, args);\n    }\n\n    public addMethod(name: string, callback: Function): void {\n        (this as any)[name] = callback;\n    }\n\n}\n","import { BaseComponentWrapper, FrameworkComponentWrapper, WrappableInterface } from \"@ag-grid-community/core\";\nimport { PortalManager } from \"../agGridSolid\";\nimport SolidCompWrapper from \"./solidCompWrapper\";\n\nexport default class SolidCompWrapperFactory extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private portalManager: PortalManager;\n\n    constructor(portalManager: PortalManager) {\n        super();\n        this.portalManager = portalManager;\n    }\n\n    createWrapper(SolidComponentClass: any): WrappableInterface {\n        return new SolidCompWrapper(SolidComponentClass, this.portalManager);\n    }\n}\n","import { Beans } from '@ag-grid-community/core';\nimport { createContext } from \"solid-js\";\n\nexport const BeansContext = createContext<Beans>({} as Beans);\n","export const classesList = (...list: (string | null | undefined)[]): string => {\n    const filtered = list.filter( s => s != null && s !== '');\n\n    return filtered.join(' ');\n}\n\nexport class CssClasses {\n\n    private classesMap: {[name: string]: boolean} = {};\n\n    constructor(...initialClasses: string[]) {\n        initialClasses.forEach(className => {\n            this.classesMap[className] = true;\n        });\n    }\n\n    public setClass(className: string, on: boolean): CssClasses {\n        // important to not make a copy if nothing has changed, so react\n        // won't trigger a render cycle on new object instance\n        const nothingHasChanged = !!this.classesMap[className] == on;\n        if (nothingHasChanged) { return this; }\n\n        const res = new CssClasses();\n        res.classesMap = {...this.classesMap};\n        res.classesMap[className] = on;\n        return res;\n    }\n\n    public toString(): string {\n        const res = Object.keys(this.classesMap).filter(key => this.classesMap[key]).join(' ');\n        return res;\n    }\n\n}\n\nexport const isComponentStateless = (Component: any) => {\n    const hasSymbol = () => typeof Symbol === 'function' && Symbol.for;\n    const getMemoType = () => hasSymbol() ? Symbol.for('react.memo') : 0xead3;\n\n    return (\n            typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent)\n        ) || (typeof Component === 'object' && Component.$$typeof === getMemoType());\n}\n\nexport interface RefPointer<T> {\n    instance?: T;\n    afterSet?: (ref: T)=>void;\n}","import { GridOptions, IDetailCellRenderer, IDetailCellRendererCtrl, IDetailCellRendererParams } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport AgGridSolid, { AgGridSolidRef } from '../agGridSolid';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\n\nconst DetailCellRenderer = (props: IDetailCellRendererParams) => {\n\n    const {ctrlsFactory, context, \n            gridOptionsWrapper, resizeObserverService, \n            clientSideRowModel, serverSideRowModel} = useContext(BeansContext);\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getGridCssClasses, setGridCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getDetailGridOptions, setDetailGridOptions] = createSignal<GridOptions>();\n    const [getDetailRowData, setDetailRowData] = createSignal<any[]>();\n\n    let ctrl: IDetailCellRendererCtrl;\n    let eGuiRef: HTMLDivElement;\n\n    const getCssClassesStr = createMemo(() => getCssClasses().toString() + ' ag-details-row');\n    const getGridCssClassesStr = createMemo(() => getGridCssClasses().toString() + ' ag-details-grid');\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return ctrl.refresh(); }\n    }));\n\n    onMount(() => {\n        if (props.template && typeof props.template === 'string') {\n            console.warn('AG Grid: detailCellRendererParams.template is not supported by Solid - this only works with frameworks that work against String templates. To change the template, please provide your own Solid Detail Cell Renderer.');\n        }\n\n        const compProxy: IDetailCellRenderer = {\n            addOrRemoveCssClass: (name: string, on: boolean) => setCssClasses(getCssClasses().setClass(name, on)),\n            addOrRemoveDetailGridCssClass: (name: string, on: boolean) => setGridCssClasses(getGridCssClasses().setClass(name, on)),\n            setDetailGrid: gridOptions => setDetailGridOptions(gridOptions),\n            setRowData: rowData => setDetailRowData(rowData),\n            getGui: () => eGuiRef\n        };\n\n        ctrl = ctrlsFactory.getInstance('detailCellRenderer') as IDetailCellRendererCtrl;\n        if (!ctrl) { return; } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n\n        ctrl.init(compProxy, props);\n\n        let resizeObserverDestroyFunc: () => void;\n\n        if (gridOptionsWrapper.isDetailRowAutoHeight()) {\n            const checkRowSizeFunc = () => {\n                // when disposed, current is null, so nothing to do, and the resize observer will\n                // be disposed of soon\n                if (eGuiRef==null) { return; }\n\n                const clientHeight = eGuiRef.clientHeight;\n\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    const updateRowHeightFunc = () => {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        } else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n    \n            resizeObserverDestroyFunc = resizeObserverService.observeResize(eGuiRef, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n\n        return () => {\n            context.destroyBean(ctrl);\n            if (resizeObserverDestroyFunc) {\n                resizeObserverDestroyFunc();\n            }\n        };\n    });\n\n    const setRef = (ref: AgGridSolidRef) => {\n        ctrl.registerDetailWithMaster(ref.api, ref.columnApi)\n    };\n\n    return (\n        <div class={getCssClassesStr()} ref={eGuiRef!}>\n            {\n                getDetailGridOptions() &&\n                <AgGridSolid class={getGridCssClassesStr()} {...getDetailGridOptions()} rowData={getDetailRowData()} ref={ setRef }></AgGridSolid> \n            }\n        </div>\n    );\n};\n\nexport default DetailCellRenderer;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\n\nconst JsUserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: (ref: any)=>void\n})=> {\n    const { context } = useContext(BeansContext);\n\n    const promise = p.compDetails.newAgStackInstance();\n    if (!promise) { return <></>; }\n\n    const comp = promise.resolveNow(null, (x: any) => x); // js comps are never async\n    if (!comp) { return <></>; }\n    p.ref && p.ref(comp);\n\n    const gui = comp.getGui();\n\n    onCleanup( ()=> {\n        comp && context.destroyBean(comp);\n        p.ref && p.ref(undefined);\n    });\n\n    return <>{gui}</>;\n};\n\nexport default JsUserComp;","import { UserCompDetails } from '@ag-grid-community/core';\nimport { onCleanup } from 'solid-js';\n\nconst SolidUserComp = (props: {\n    compDetails: UserCompDetails, \n    ref?: any\n})=> {\n    const SolidClass = props.compDetails.componentClass;\n\n    let refSet = false;\n\n    const setRef = (ref: any)=> {\n        if (!props.ref) { return; }\n        props.ref(ref);\n        refSet = true;\n    };\n\n    onCleanup( ()=> {\n        if (refSet) {\n            props.ref && props.ref(undefined);\n        }\n    });\n\n    return <SolidClass ref={setRef} { ...props.compDetails.params }/>;\n};\n\nexport default SolidUserComp;\n","import { UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport JsUserComp from './jsUserComp';\nimport SolidUserComp from './solidUserComp';\n\nconst UserComp = (p: {\n    compDetails: UserCompDetails,\n    ref?: any\n})=> {\n    \n    const showSolidComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = p.compDetails;\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <>\n            { showSolidComp() \n                && <SolidUserComp compDetails={p.compDetails} ref={p.ref} /> }\n            { showJsComp() \n                && <JsUserComp compDetails={p.compDetails} ref={p.ref} /> }\n        </>\n    );\n};\n\nexport default UserComp;\n","import { GroupCellRendererCtrl, GroupCellRendererParams, IGroupCellRenderer, UserCompDetails, _ } from \"@ag-grid-community/core\";\nimport { createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport { BeansContext } from \"../core/beansContext\";\nimport { CssClasses } from \"../core/utils\";\nimport UserComp from \"../userComps/userComp\";\n\nconst GroupCellRenderer = (props: GroupCellRendererParams) => {\n\n    const context = useContext(BeansContext).context!;\n\n    let eGui: HTMLElement;\n    let eValueRef: HTMLElement;\n    let eCheckboxRef: HTMLElement;\n    let eExpandedRef: HTMLElement;\n    let eContractedRef: HTMLElement;\n\n    const [getInnerCompDetails, setInnerCompDetails] = createSignal<UserCompDetails>();\n    const [getChildCount, setChildCount] = createSignal<string>();\n    const [getValue, setValue] = createSignal<any>();\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getExpandedCssClasses, setExpandedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getContractedCssClasses, setContractedCssClasses] = createSignal<CssClasses>(new CssClasses('ag-hidden'));\n    const [getCheckboxCssClasses, setCheckboxCssClasses] = createSignal<CssClasses>(new CssClasses('ag-invisible'));\n\n    (props as any).ref( () => ({\n        // force new instance when grid tries to refresh\n        refresh() { return false; }\n    }));\n\n    onMount( ()=> {\n\n        const compProxy: IGroupCellRenderer = {\n            setInnerRenderer: (details, valueToDisplay) => {\n                setInnerCompDetails(details);\n                const escapedValue = _.escapeString(valueToDisplay, true);\n                setValue(escapedValue);\n            },\n            setChildCount: count => setChildCount(count),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setContractedDisplayed: displayed => setContractedCssClasses(getContractedCssClasses().setClass('ag-hidden', !displayed)),\n            setExpandedDisplayed: displayed => setExpandedCssClasses(getExpandedCssClasses().setClass('ag-hidden', !displayed)),\n            setCheckboxVisible: visible => setCheckboxCssClasses(getCheckboxCssClasses().setClass('ag-invisible', !visible))\n        };\n\n        const ctrl = context.createBean(new GroupCellRendererCtrl());\n        ctrl.init(compProxy, eGui, eCheckboxRef, eExpandedRef, eContractedRef, GroupCellRenderer, props);\n\n        return () => { context.destroyBean(ctrl);};\n    });\n\n    const getClassName = createMemo(() => `ag-cell-wrapper ${getCssClasses().toString()}`);\n    const getExpandedClassName = createMemo(() => `ag-group-expanded ${getExpandedCssClasses().toString()}`);\n    const getContractedClassName = createMemo(() => `ag-group-contracted ${getContractedCssClasses().toString()}`);\n    const getCheckboxClassName = createMemo(() => `ag-group-checkbox ${getCheckboxCssClasses().toString()}`);\n\n    const isShowUserComp = ()=> getInnerCompDetails() != null;\n    const isShowValue = ()=> getInnerCompDetails() == null && getValue() != null;\n\n    return (\n        <span class={getClassName()} ref={eGui!} {...(!props.colDef ? { role: 'gridcell' } : {})}>\n            <span class={getExpandedClassName()} ref={eExpandedRef!}></span>\n            <span class={getContractedClassName()} ref={eContractedRef!}></span>\n            <span class={getCheckboxClassName()} ref={eCheckboxRef!}></span>\n            <span class=\"ag-group-value\" ref={eValueRef!}>\n                { isShowUserComp() && <UserComp compDetails={getInnerCompDetails()!}></UserComp>}\n                { isShowValue() && <>{getValue()}</> }\n            </span>\n            <span class=\"ag-group-child-count\">{getChildCount()}</span>\n        </span>\n    );\n};\n\n// we do not memo() here, as it would stop the forwardRef working\nexport default GroupCellRenderer;\n","import { VanillaFrameworkOverrides } from \"@ag-grid-community/core\";\nimport DetailCellRenderer from \"../cellRenderer/detailCellRenderer\";\nimport GroupCellRenderer from \"../cellRenderer/groupCellRenderer\";\n\nexport class SolidFrameworkOverrides extends VanillaFrameworkOverrides {\n\n    constructor() {\n        super();\n    }\n\n    private frameworkComponents: any = {\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agDetailCellRenderer: DetailCellRenderer\n    };\n\n    public frameworkComponent(name: string): any {\n        return this.frameworkComponents[name];\n    }\n\n    isFrameworkComponent(comp: any): boolean {\n        if (!comp) { return false; }\n        const prototype = comp.prototype;\n        const isJsComp = prototype && 'getGui' in prototype;\n        return !isJsComp;\n    }\n}","import { ColumnSortState, CssClassManager, HeaderCellCtrl, IHeader, IHeaderCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderCellComp = (props: {ctrl: HeaderCellCtrl})=> {\n\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getTitle, setTitle] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>();\n    const [getAriaSort, setAriaSort] = createSignal<ColumnSortState>();\n    const [getAriaDescription, setAriaDescription] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement\n    let eHeaderCompWrapper: HTMLDivElement\n    \n    let userComp: IHeader | undefined;\n\n    const setRef = (ref: any) => {\n        userComp = ref;\n    }\n\n    const clearRef = (ref: any) => {\n        if (userComp===ref) {\n            userComp = undefined;\n        }\n    }\n\n    const { ctrl } = props;\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    onMount(() => {\n        const compProxy: IHeaderCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n\n            setAriaDescription: description => setAriaDescription(description),\n            setAriaSort: sort => setAriaSort(sort),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            getUserCompInstance: () => userComp\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize, eHeaderCompWrapper);\n\n        const selectAllGui = ctrl.getSelectAllGui();\n        eResize.insertAdjacentElement('afterend', selectAllGui);\n        ctrl.setDragSource(eGui);\n    });\n\n    const style = createMemo(() => ({ width: getWidth() }));\n\n    const showSolidComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return details.componentFromFramework;\n    });\n\n    const showJsComp = createMemo( ()=> {\n        const details = getUserCompDetails();\n        if (!details) { return false; }\n        return !details.componentFromFramework;\n    });\n\n    return (\n        <div\n            ref={eGui!}\n            class=\"ag-header-cell\"\n            style={ style() }\n            title={ getTitle() }\n            col-id={ getColId() }\n            aria-sort={ getAriaSort() }\n            role=\"columnheader\"\n            tabIndex={-1}\n            aria-description={ getAriaDescription() }\n        >\n            <div ref={eResize!} class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <div ref={eHeaderCompWrapper!} class=\"ag-header-cell-comp-wrapper\" role=\"presentation\">\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} ref={setRef} /> }\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderCellComp;\n","import { AgPromise, HeaderFilterCellCtrl, IFloatingFilter, IHeaderFilterCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onMount } from 'solid-js';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderFilterCellComp = (props: {ctrl: HeaderFilterCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssBodyClasses, setBodyCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssButtonWrapperClasses, setButtonWrapperCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eFloatingFilterBody: HTMLDivElement;\n    let eButtonWrapper: HTMLDivElement;\n    let eButtonShowMainFilter: HTMLButtonElement;\n\n    let alreadyResolved = false;\n    let userCompResolve: (value: IFloatingFilter)=>void;\n    let userCompPromise: AgPromise<IFloatingFilter>;\n    onMount( ()=> {\n        userCompPromise = new AgPromise<IFloatingFilter>( resolve => {\n            userCompResolve = resolve;\n        });\n    });\n    \n    const setRef = (value: IFloatingFilter) => {\n        // i don't know why, but react was calling this method multiple\n        // times, thus un-setting, them immediately setting the reference again.\n        // because we are resolving a promise, it's not good to be resolving\n        // the promise multiple times, so we only resolve the first time.\n        if (alreadyResolved) { return; }\n        // we also skip when it's un-setting\n        if (value==null) { return; }\n\n        userCompResolve && userCompResolve(value);\n        alreadyResolved = true;\n    };\n\n    const { ctrl } = props;\n\n    onMount(() => {\n\n        const compProxy: IHeaderFilterCellComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveBodyCssClass: (name, on) => setBodyCssClasses(prev => prev.setClass(name, on)),\n            addOrRemoveButtonWrapperCssClass: (name, on) => setButtonWrapperCssClasses(prev => prev.setClass(name, on)),\n            setWidth: width => setWidth(width),\n            setCompDetails: compDetails => setUserCompDetails(compDetails),\n            getFloatingFilterComp: ()=> userCompPromise,\n            setMenuIcon: eIcon => eButtonShowMainFilter.appendChild(eIcon)\n        };\n\n        ctrl.setComp(compProxy, eGui, eButtonShowMainFilter, eFloatingFilterBody);\n\n    });\n\n    const getStyle = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getCssClassesString = createMemo( ()=> 'ag-header-cell ag-floating-filter ' + getCssClasses.toString() );\n    const getBodyCssClassesString = createMemo( ()=> getCssBodyClasses.toString(), );\n    const getButtonWrapperCssClassesString = createMemo( ()=> 'ag-floating-filter-button ' + getCssButtonWrapperClasses.toString() );\n    \n    return (\n        <div ref={eGui!} class={getCssClassesString()} style={getStyle()} role=\"gridcell\" tabIndex={-1}>\n            <div ref={eFloatingFilterBody!} class={getBodyCssClassesString()} role=\"presentation\">\n                { getUserCompDetails() && <UserComp compDetails={getUserCompDetails()!} ref={setRef}/> }\n            </div>\n            <div ref={eButtonWrapper!} class={getButtonWrapperCssClassesString()} role=\"presentation\">\n                <button ref={eButtonShowMainFilter!} type=\"button\" aria-label=\"Open Filter Menu\" class=\"ag-floating-filter-button-button\" tabIndex={-1}></button>\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderFilterCellComp;\n","import { HeaderGroupCellCtrl, IHeaderGroupCellComp, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport UserComp from '../userComps/userComp';\n\nconst HeaderGroupCellComp = (props: {ctrl: HeaderGroupCellCtrl}) => {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCssResizableClasses, setResizableCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getWidth, setWidth] = createSignal<string>();\n    const [getTitle, setTitle] = createSignal<string>();\n    const [getColId, setColId] = createSignal<string>();\n    const [getAriaExpanded, setAriaExpanded] = createSignal<'true'|'false'|undefined>();\n    const [getUserCompDetails, setUserCompDetails] = createSignal<UserCompDetails>();\n\n    let eGui: HTMLDivElement;\n    let eResize: HTMLDivElement;\n\n    const { ctrl } = props;\n\n    onMount( () => {\n\n        const compProxy: IHeaderGroupCellComp = {\n            setWidth: width => setWidth(width),\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setColId: id => setColId(id),\n            setTitle: title => setTitle(title),\n            setUserCompDetails: compDetails => setUserCompDetails(compDetails),\n            addOrRemoveResizableCssClass: (name, on) => setResizableCssClasses(prev => prev.setClass(name, on)),\n            setAriaExpanded: expanded => setAriaExpanded(expanded)\n        };\n\n        ctrl.setComp(compProxy, eGui, eResize);\n    });\n\n    // add drag handling, must be done after component is added to the dom\n    createEffect(()=> {\n        const userCompDetails = getUserCompDetails();\n        if (userCompDetails==null) { return; }\n\n        let userCompDomElement: HTMLElement | undefined = undefined;\n        eGui.childNodes.forEach( node => {\n            if (node!=null && node!==eResize) {\n                userCompDomElement = node as HTMLElement;\n            }\n        });\n\n        userCompDomElement && ctrl.setDragSource(userCompDomElement);\n    });\n\n    const style = createMemo( ()=> ({\n        width: getWidth()\n    }));\n    \n    const getClassName = createMemo( ()=> 'ag-header-group-cell ' + getCssClasses().toString() );\n    const getResizableClassName = createMemo( ()=> 'ag-header-cell-resize ' + getCssResizableClasses().toString() );\n\n    return (\n        <div ref={eGui!} class={getClassName()} style={style()} title={getTitle()} col-id={getColId()} \n                    role=\"columnheader\" tabIndex={-1} aria-expanded={getAriaExpanded()}>\n\n            { getUserCompDetails() \n                && <UserComp compDetails={getUserCompDetails()!} /> }\n\n            <div ref={eResize!} class={getResizableClassName()}></div>\n        </div>\n    );\n};\n\nexport default HeaderGroupCellComp;","import { AbstractHeaderCellCtrl, HeaderCellCtrl, HeaderFilterCellCtrl, HeaderGroupCellCtrl, HeaderRowCtrl, HeaderRowType, IHeaderRowComp, _ } from '@ag-grid-community/core';\nimport { createMemo, createSignal, For, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport HeaderCellComp from './headerCellComp';\nimport HeaderFilterCellComp from './headerFilterCellComp';\nimport HeaderGroupCellComp from './headerGroupCellComp';\n\nconst HeaderRowComp = (props: {ctrl: HeaderRowCtrl}) => {\n\n    const { gridOptionsWrapper } = useContext(BeansContext);\n\n    const [ getTransform, setTransform ] = createSignal<string>();\n    const [ getHeight, setHeight ] = createSignal<string>();\n    const [ getTop, setTop ] = createSignal<string>();\n    const [ getWidth, setWidth ] = createSignal<string>();\n    const [ getAriaRowIndex, setAriaRowIndex ] = createSignal<number>();\n    const [ getCellCtrls, setCellCtrls ] = createSignal<AbstractHeaderCellCtrl[]>([]);\n\n    let eGui: HTMLDivElement;\n\n    const { ctrl } = props;\n\n    const typeColumn = ctrl.getType() === HeaderRowType.COLUMN;\n    const typeGroup = ctrl.getType() === HeaderRowType.COLUMN_GROUP;\n    const typeFilter = ctrl.getType() === HeaderRowType.FLOATING_FILTER;\n\n    const setCellCtrlsMaintainOrder = (next: AbstractHeaderCellCtrl[]) => {\n        const prev = getCellCtrls();\n\n        // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n        if (gridOptionsWrapper.isEnsureDomOrder()) {\n            return next;\n        }\n\n        // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n        // otherwise we will loose transition effects as elements are placed in different dom locations\n        const prevMap = _.mapById(prev, c => c.getInstanceId());\n        const nextMap = _.mapById(next, c => c.getInstanceId());\n\n        const oldCtrlsWeAreKeeping = prev.filter( c => nextMap.has(c.getInstanceId()) );\n        const newCtrls = next.filter( c => !prevMap.has(c.getInstanceId()) )\n\n        const nextOrderMaintained = [...oldCtrlsWeAreKeeping, ...newCtrls];\n        setCellCtrls(nextOrderMaintained);\n    };\n\n    onMount(() => {\n        const compProxy: IHeaderRowComp = {\n            setTransform: transform => setTransform(transform),\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: ctrls => setCellCtrlsMaintainOrder(ctrls),\n            setWidth: width => setWidth(width),\n            setAriaRowIndex: rowIndex => setAriaRowIndex(rowIndex)\n        };\n        ctrl.setComp(compProxy);\n    });\n\n    const style = createMemo( ()=> ({\n        transform: getTransform(),\n        height: getHeight(),\n        top: getTop(),\n        width: getWidth()\n    }));\n\n    const cssClassesList: string[] = [`ag-header-row`]\n    typeColumn && cssClassesList.push(`ag-header-row-column`);\n    typeGroup && cssClassesList.push(`ag-header-row-column-group`);\n    typeFilter && cssClassesList.push(`ag-header-row-column-filter`);\n    const cssClasses = cssClassesList.join(' ');\n\n    const createCellJsx = (cellCtrl: AbstractHeaderCellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP :\n                return <HeaderGroupCellComp ctrl={cellCtrl as HeaderGroupCellCtrl} />;\n\n            case HeaderRowType.FLOATING_FILTER :\n                return <HeaderFilterCellComp ctrl={cellCtrl as HeaderFilterCellCtrl} />;\n                \n            default :\n                return <HeaderCellComp ctrl={cellCtrl as HeaderCellCtrl} />;\n        }\n    };\n\n    // below, we are not doing floating filters, not yet\n    return (\n        <div ref={eGui!} class={cssClasses} role=\"row\" style={style()} aria-rowindex={getAriaRowIndex()}>\n            <For each={getCellCtrls()}>{(cellCtrl, i) => createCellJsx(cellCtrl) }</For>\n        </div>\n    );\n};\n\nexport default HeaderRowComp;\n","import { Constants, HeaderRowContainerCtrl, HeaderRowCtrl, IHeaderRowContainerComp } from '@ag-grid-community/core';\nimport { createMemo, createSignal, For, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowComp from './headerRowComp';\n\nconst HeaderRowContainerComp = (props: {pinned: string | null})=> {\n\n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getCenterContainerWidth, setCenterContainerWidth] = createSignal<string>();\n    const [getCenterContainerTransform, setCenterContainerTransform] = createSignal<string>();\n    const [getPinnedContainerWidth, setPinnedContainerWidth] = createSignal<string>();\n    const [getHeaderRowCtrls, setHeaderRowCtrls] = createSignal<HeaderRowCtrl[]>([]);\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const pinnedLeft = props.pinned === Constants.PINNED_LEFT;\n    const pinnedRight = props.pinned === Constants.PINNED_RIGHT;\n    const centre = !pinnedLeft && !pinnedRight;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount(() => {\n\n        const compProxy: IHeaderRowContainerComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setCtrls: ctrls => setHeaderRowCtrls(ctrls),\n\n            // centre only\n            setCenterWidth: width => setCenterContainerWidth(width),\n            setContainerTransform: transform => setCenterContainerTransform(transform),\n\n            // pinned only\n            setPinnedContainerWidth: width => setPinnedContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new HeaderRowContainerCtrl(props.pinned));\n        ctrl.setComp(compProxy, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const getClassName = createMemo( ()=> getCssClasses.toString() );\n\n    const insertRowsJsx = ()=> \n    <For each={getHeaderRowCtrls()}>{ ctrl =>\n        <HeaderRowComp ctrl={ctrl}/>\n    }</For>;    \n    \n    const eCenterContainerStyle = createMemo( ()=> ({\n        width: getCenterContainerWidth(),\n        transform: getCenterContainerTransform()\n    }));\n\n    const ePinnedStyle = createMemo( ()=> ({\n        width: getPinnedContainerWidth(),\n        'min-width': getPinnedContainerWidth(),\n        'max-width': getPinnedContainerWidth()\n    }));\n\n    return (\n        <>\n            { \n                pinnedLeft && \n                <div ref={eGui!} class={\"ag-pinned-left-header \" + getClassName()} role=\"presentation\" style={ePinnedStyle()}>\n                    { insertRowsJsx() }\n                </div>\n            }\n            { \n                pinnedRight && \n                <div ref={eGui!} class={\"ag-pinned-right-header \" + getClassName()} role=\"presentation\" style={ePinnedStyle()}>\n                { insertRowsJsx() }\n            </div>\n            }\n            { \n                centre && \n                <div ref={eGui!} class={\"ag-header-viewport \" + getClassName()} role=\"presentation\">\n                    <div class=\"ag-header-container\" role=\"rowgroup\" style={eCenterContainerStyle()}>\n                        { insertRowsJsx() }\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default HeaderRowContainerComp;\n","import { Constants, GridHeaderCtrl, IGridHeaderComp } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport { CssClasses } from '../core/utils';\nimport HeaderRowContainerComp from './headerRowContainerComp';\n\nconst GridHeaderComp = ()=> {\n    \n    const [getCssClasses, setCssClasses] = createSignal<CssClasses>(new CssClasses());\n    const [getHeight, setHeight] = createSignal<string>();\n\n    const {context} = useContext(BeansContext);\n    let eGui: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n\n        const compProxy: IGridHeaderComp = {\n            addOrRemoveCssClass: (name, on) => setCssClasses(getCssClasses().setClass(name, on)),\n            setHeightAndMinHeight: height => setHeight(height)\n        };\n\n        const ctrl = context.createBean(new GridHeaderCtrl());\n        ctrl.setComp(compProxy, eGui, eGui);\n\n        destroyFuncs.push( ()=> context.destroyBean(ctrl) );\n    });\n\n    const className = createMemo( ()=> {\n        let res = getCssClasses().toString();\n        return 'ag-header ' + res;\n    });\n\n    const style = createMemo( ()=> ({\n        height: getHeight(),\n        'min-height': getHeight()\n    }));\n\n    return (\n        <div ref={eGui!} class={className()} style={style()} role=\"presentation\">\n            <HeaderRowContainerComp pinned={Constants.PINNED_LEFT}/>\n            <HeaderRowContainerComp pinned={null}/>\n            <HeaderRowContainerComp pinned={Constants.PINNED_RIGHT}/>\n        </div>\n    );\n};\n\nexport default GridHeaderComp;\n","import { CellCtrl, PopupEditorWrapper } from '@ag-grid-community/core';\nimport { JSX, onCleanup, useContext } from 'solid-js';\nimport { Portal } from \"solid-js/web\";\nimport { BeansContext } from '../core/beansContext';\nimport { EditDetails } from './common';\n\nconst PopupEditorComp = (props: {\n            editDetails: EditDetails, \n            cellCtrl: CellCtrl, \n            eParentCell: HTMLElement,\n            children?: JSX.Element\n        }) => {\n\n    const {context, popupService, gridOptionsWrapper} = useContext(BeansContext);\n\n    const {editDetails, cellCtrl, eParentCell} = props;\n    const {compDetails} = editDetails;\n\n    const useModelPopup = gridOptionsWrapper.isStopEditingWhenCellsLoseFocus();\n    \n    const wrapper = context.createBean(new PopupEditorWrapper(compDetails.params));\n    const ePopupGui = wrapper.getGui();\n\n    const positionParams = {\n        column: cellCtrl.getColumn(),\n        rowNode: cellCtrl.getRowNode(),\n        type: 'popupCellEditor',\n        eventSource: eParentCell,\n        ePopup: ePopupGui,\n        keepWithinBounds: true\n    };\n\n    const positionCallback = editDetails!.popupPosition === 'under' ?\n        popupService.positionPopupUnderComponent.bind(popupService, positionParams)\n        : popupService.positionPopupOverComponent.bind(popupService, positionParams);\n\n    const translate = gridOptionsWrapper.getLocaleTextFunc();\n\n    const addPopupRes = popupService.addPopup({\n        modal: useModelPopup,\n        eChild: ePopupGui,\n        closeOnEsc: true,\n        closedCallback: () => { cellCtrl.onPopupEditorClosed(); },\n        anchorToElement: eParentCell,\n        positionCallback,\n        ariaLabel: translate('ariaLabelCellEditor', 'Cell Editor')\n    });\n\n    const hideEditorPopup: (()=>void) | undefined = addPopupRes ? addPopupRes.hideFunc : undefined;\n\n    onCleanup( ()=> {\n        if (hideEditorPopup!=null) {\n            hideEditorPopup();\n        }\n        context.destroyBean(wrapper);\n    });\n\n    return (\n        <Portal mount={ePopupGui}>\n            { props.children }\n        </Portal>\n    );\n};\n\nexport default PopupEditorComp;\n","import { CellCtrl, ICellEditor } from '@ag-grid-community/core';\nimport { createMemo } from 'solid-js';\nimport UserComp from '../userComps/userComp';\nimport { EditDetails } from './common';\nimport PopupEditorComp from './popupEditorComp';\n\nconst ShowEditDetails = (props: {\n    editDetails: EditDetails,\n    cellCtrl: CellCtrl,\n    eGuiFn: () => HTMLDivElement,\n    setInlineRef: (ref: ICellEditor) => void,\n    setPopupRef: (ref: ICellEditor) => void\n}\n) => {\n\n    const getCompDetails = createMemo(() => props.editDetails.compDetails);\n    const compDetails = props.editDetails.compDetails;\n\n    // when editing, we must have a comp, otherwise doesn't work\n    if (!compDetails) { return <></>; }\n\n    const inPopup = props.editDetails.popup;\n    const eGui = props.eGuiFn();\n\n    return (\n        <>\n            {inPopup &&\n                <PopupEditorComp cellCtrl={props.cellCtrl} eParentCell={eGui} editDetails={props.editDetails}>\n                    <UserComp compDetails={getCompDetails()!} ref={props.setPopupRef} />\n                </PopupEditorComp>\n            }\n            {!inPopup &&\n                <UserComp compDetails={getCompDetails()!} ref={props.setInlineRef} />\n            }\n        </>\n    );\n};\n\nexport default ShowEditDetails;\n","import { CellCtrl, Component, ICellRenderer } from '@ag-grid-community/core';\nimport { createMemo, onCleanup, useContext } from 'solid-js';\nimport { BeansContext } from '../core/beansContext';\nimport UserComp from '../userComps/userComp';\nimport { RenderDetails } from './common';\n\nconst ToolsComp = (props: {\n    includeSelection: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    cellCtrl: CellCtrl\n}) => {\n\n    const {context} = useContext(BeansContext);\n\n    const CompWrapper = (innerProps: {\n        createFn: ()=>Component|undefined\n    })=> {\n        const comp = innerProps.createFn();\n        if (!comp) { return <></>; }\n\n        onCleanup( ()=> context.destroyBean(comp) );\n        return <>{comp.getGui()}</>\n    };\n\n    return (\n        <>\n            { props.includeSelection && \n                <CompWrapper createFn={()=>props.cellCtrl.createSelectionCheckbox()}/> }\n            { props.includeDndSource && \n                <CompWrapper createFn={()=>props.cellCtrl.createDndSource()}/> }\n            { props.includeRowDrag && \n                <CompWrapper createFn={()=>props.cellCtrl.createRowDragComp()}/> }\n        </>\n    );\n};\n\nconst ShowRenderDetails = (props: {\n    showDetails: RenderDetails,\n    ref: any,\n    showCellWrapper: boolean,\n    showTools: boolean,\n    includeDndSource: boolean,\n    includeRowDrag: boolean,\n    includeSelection: boolean,\n    cellCtrl: CellCtrl,\n    cellInstanceId: string,\n    setECellValue: (eCellValue: HTMLElement) => void\n}) => {\n\n    const getCompDetails = createMemo(() => props.showDetails.compDetails);\n    const isNoCompDetails = createMemo(()=> props.showDetails.compDetails == null);\n\n    // if we didn't do this, objects would cause error. we depend on objects for things\n    // like the aggregation functions avg and count, which return objects and depend on toString()\n    // getting called.\n    const valueForNoCellRenderer = () => {\n        const value = props.showDetails.value;\n        return (value && value.toString) ? value.toString() : value;\n    };\n\n    const bodyJsxFunc = () => (\n        <>\n            {isNoCompDetails() && <>{valueForNoCellRenderer()}</>}\n            {getCompDetails() && <UserComp compDetails={getCompDetails()!}\n                ref={props.ref}/>}\n        </>\n    );\n\n    return (\n        <>\n            {\n                props.showTools &&\n                <ToolsComp\n                    includeDndSource={props.includeDndSource}\n                    includeRowDrag={props.includeRowDrag}\n                    includeSelection={props.includeSelection}\n                    cellCtrl={props.cellCtrl} />\n            }\n            {\n                props.showCellWrapper\n                    ? (\n                        <span role=\"presentation\" id={`cell-${props.cellInstanceId}`} class=\"ag-cell-value\" ref={props.setECellValue}>\n                            {bodyJsxFunc()}\n                        </span>\n                    )\n                    : bodyJsxFunc()\n            }\n        </>\n    );\n}\n\nexport default ShowRenderDetails;\n","import { CellCtrl, CssClassManager, ICellComp, ICellEditor, ICellRenderer, _ } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onMount } from 'solid-js';\nimport { EditDetails, RenderDetails } from './common';\nimport ShowEditDetails from './showEditDetails';\nimport ShowRenderDetails from './showRenderDetails';\n\nconst checkCellEditorDeprecations = (popup: boolean, cellEditor: ICellEditor, cellCtrl: CellCtrl) => {\n\n    const col = cellCtrl.getColumn();\n\n    // cellEditor is written to be a popup editor, however colDef.cellEditorPopup is not set\n    if (!popup && cellEditor.isPopup && cellEditor.isPopup()) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor is a popup using colDef.cellEditorPopup=true. AG Grid SolidJS cannot depend on the editor component specifying if it's in a popup (via the isPopup() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-isPopup-' + cellCtrl.getColumn().getColId());\n    }\n\n    // cellEditor is a popup and is trying to position itself the deprecated way\n    if (popup && cellEditor.getPopupPosition && cellEditor.getPopupPosition()!=null) {\n        const msg = `AG Grid: Found an issue in column ${col.getColId()}. If using SolidJS, specify an editor popup position using colDef.cellEditorPopupPosition=true. AG Grid SolidJS cannot depend on the editor component specifying it's position (via the getPopupPosition() method on the editor), as SolidJS needs to know this information BEFORE the component is created.`;\n        _.doOnce(() => console.warn(msg), 'jsEditorComp-getPopupPosition-' + cellCtrl.getColumn().getColId());\n    }\n}\n\n\n\n\nconst CellComp = (props: {\n    cellCtrl: CellCtrl,\n    printLayout: boolean, \n    editingRow: boolean\n}) => {\n\n    const { cellCtrl, printLayout, editingRow } = props;\n\n    const [renderDetails, setRenderDetails ] = createSignal<RenderDetails>();\n    const [editDetails, setEditDetails ] = createSignal<EditDetails>();\n\n    let renderCompVersion = 0;\n    const [renderCompVersionList, setRenderCompVersionList] = createSignal<number[]>([renderCompVersion]);\n\n    const [userStyles, setUserStyles] = createSignal<any>();\n\n    const [tabIndex, setTabIndex] = createSignal<number>();\n    const [role, setRole] = createSignal<string>();\n    const [colId, setColId] = createSignal<string>();\n    const [title, setTitle] = createSignal<string | undefined>();\n    const [includeSelection, setIncludeSelection] = createSignal<boolean>(false);\n    const [includeRowDrag, setIncludeRowDrag] = createSignal<boolean>(false);\n    const [includeDndSource, setIncludeDndSource] = createSignal<boolean>(false);\n\n    const forceWrapper = cellCtrl.isForceWrapper();\n\n    let eCellWrapper: HTMLDivElement;\n    let eCellValue: HTMLElement;\n    const setECellValue = (val: HTMLElement)=> {\n        eCellValue = val;\n    };\n\n    let eGui: HTMLDivElement;\n    let cellRenderer: ICellRenderer | null = null;\n\n    let cellEditor: ICellEditor | null = null;\n    const setEditorRef = (popup: boolean, ref: ICellEditor)=> {\n        cellEditor = ref;\n        if (!cellEditor) { return; }\n\n        checkCellEditorDeprecations(popup, cellEditor, cellCtrl);\n\n        const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\n        if (editingCancelledByUserComp) {\n            // we cannot set state inside render, so hack is to do it in next VM turn\n            setTimeout( ()=> cellCtrl.stopEditing(), 0);\n        }\n\n        const refAny = ref as any;\n        if (refAny.afterGuiAttached) {\n            setTimeout(()=> refAny.afterGuiAttached(), 0);\n        }\n    }\n    const setPopupEditorRef = (ref: ICellEditor) => setEditorRef(true, ref);\n    const setInlineEditorRef = (ref: ICellEditor) => setEditorRef(false, ref);\n\n    const cssClassManager = new CssClassManager(() => eGui);\n\n    const showTools = createMemo( ()=> renderDetails() != null && (includeSelection() || includeDndSource() || includeRowDrag()) );\n    const showCellWrapper = createMemo( ()=> forceWrapper || showTools() );\n\n    const cellInstanceId = cellCtrl.getInstanceId();\n\n    const ariaDescribedBy = createMemo( ()=> showCellWrapper() ? `cell-${cellInstanceId}` : undefined);\n\n    onMount( () => {\n        if (!cellCtrl) { return; }\n\n        const compProxy: ICellComp = {\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n            setUserStyles: styles => setUserStyles(styles),\n            getFocusableElement: () => eGui,\n            setTabIndex: tabIndex => setTabIndex(tabIndex),\n            setRole: role => setRole(role),\n            setColId: colId => setColId(colId),\n            setTitle: title => setTitle(title),\n            setIncludeSelection: include => setIncludeSelection(include),\n            setIncludeRowDrag: include => setIncludeRowDrag(include),\n            setIncludeDndSource: include => setIncludeDndSource(include),\n            \n            getCellEditor: () => cellEditor,\n            getCellRenderer: () => cellRenderer ? cellRenderer : null,\n            getParentOfValue: () => eCellValue ? eCellValue : eCellWrapper ? eCellWrapper : eGui,\n\n            setRenderDetails: (compDetails, value, force) => {\n                setRenderDetails({\n                    value,\n                    compDetails,\n                    force\n                });\n            },\n            \n            setEditDetails: (compDetails, popup, popupPosition) => {\n                if (compDetails) {\n                    // start editing\n                    setEditDetails({\n                        compDetails: compDetails!,\n                        popup,\n                        popupPosition\n                    });\n                    if (!popup) {\n                        setRenderDetails(undefined);\n                    }\n                } else {\n                    // stop editing\n                    setEditDetails(undefined);\n                }\n            }\n        };\n\n        cellCtrl.setComp(compProxy, eGui, eCellWrapper, printLayout, editingRow);\n    });\n\n    createEffect( ()=> {\n        cssClassManager.addOrRemoveCssClass('ag-cell-value', !showCellWrapper());\n    });\n\n    // we only do refreshing for JS Comps. for SolidJS, the props will change for the cell renderer.\n    let readyForRefresh = false;    \n    createEffect( ()=> {\n        const details = renderDetails();\n        const isJsCellRenderer = details!=null && details.compDetails!=null && !details.compDetails.componentFromFramework;\n        if (!isJsCellRenderer) {\n            readyForRefresh = false;\n            return;\n        }\n        if (!readyForRefresh) {\n            readyForRefresh = true;\n            return;\n        }\n\n        if (!cellRenderer) { return; }\n\n        const params = details.compDetails!.params;\n        const result = cellRenderer.refresh ? cellRenderer.refresh(params) : false;\n        if (result != true) {\n            // increasing the render key forces a new instance of ShowRenderDetails,\n            // as we iteration through renderCompVersion, if the contents of\n            // renderCompVersion changes, that maps to a new ShowRenderDetails instance.\n            renderCompVersion++;\n            setRenderCompVersionList([renderCompVersion]);\n        }\n    });\n\n    // we pass in eGui as a function below as eGui is not ready\n    // when the template is built, only after it. so we defer\n    // reading eGui variable until it's needed, after ShowEditDetails\n    // is created.\n    const eGuiFn = ()=> eGui;\n\n    const bodyJsxFunc = ()=> (\n        <>\n                <For each={renderCompVersionList()}>{ () =>\n                    <>\n                        { renderDetails() && <ShowRenderDetails \n                            showDetails={renderDetails()!}\n                            ref={cellRenderer}\n                            cellInstanceId={cellInstanceId}\n                            showCellWrapper={showCellWrapper()}\n                            cellCtrl={cellCtrl}\n                            includeDndSource={includeDndSource()}\n                            includeRowDrag={includeRowDrag()}\n                            includeSelection={includeSelection()}\n                            showTools={showTools()}\n                            setECellValue={setECellValue}\n                        /> }\n                    </>                \n                }</For>\n                { editDetails() && <ShowEditDetails \n                            editDetails={editDetails()!}\n                            cellCtrl={cellCtrl}\n                            eGuiFn={eGuiFn}\n                            setInlineRef={setInlineEditorRef}\n                            setPopupRef={setPopupEditorRef}\n                        /> }\n        </>);\n\n    return (\n        <div\n            ref={ eGui! }\n            style={ userStyles() }\n            tabIndex={ tabIndex() }\n            role={ role() as 'gridcell'} //fixme - why not hard code role to gridcell?\n            col-id={ colId() }\n            title={ title() }\n            aria-describedby={ ariaDescribedBy() }>            {\n                showCellWrapper()\n                ? (\n                    <div class=\"ag-cell-wrapper\" role=\"presentation\" ref={ eCellWrapper! }>\n                        { bodyJsxFunc() }\n                    </div>\n                )\n                : bodyJsxFunc()\n            }\n        </div>\n    );\n}\n\nexport default CellComp;\n","import { CellCtrl, CssClassManager, ICellRenderer, IRowComp, RowContainerType, RowCtrl, UserCompDetails } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onMount } from \"solid-js\";\nimport CellComp from '../cells/cellComp';\nimport UserComp from '../userComps/userComp';\n\ninterface CellCtrls {\n    list: CellCtrl[],\n    instanceIdMap: Map<string, CellCtrl>\n}\n\nconst maintainOrderOnColumns = (prev: CellCtrls, next: CellCtrl[], domOrder: boolean): CellCtrls => {\n    if (domOrder) {\n        const res: CellCtrls = { list: next, instanceIdMap: new Map() };\n        next.forEach(c => res.instanceIdMap.set(c.getInstanceId(), c));\n\n        return res;\n    }\n\n    // if dom order not important, we don't want to change the order\n    // of the elements in the dom, as this would break transition styles\n    const oldCellCtrls: CellCtrl[] = [];\n    const newCellCtrls: CellCtrl[] = [];\n    const newInstanceIdMap: Map<string, CellCtrl> = new Map();\n    const tempMap: Map<string, CellCtrl> = new Map();\n\n    next.forEach(c => tempMap.set(c.getInstanceId(), c));\n\n    prev.list.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (tempMap.has(instanceId)) {\n            oldCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    next.forEach(c => {\n        const instanceId = c.getInstanceId();\n        if (!prev.instanceIdMap.has(instanceId)) {\n            newCellCtrls.push(c);\n            newInstanceIdMap.set(instanceId, c);\n        }\n    });\n\n    const res: CellCtrls = {\n        list: [...oldCellCtrls, ...newCellCtrls],\n        instanceIdMap: newInstanceIdMap\n    };\n\n    return res;\n}\n\nconst RowComp = (params: {rowCtrl: RowCtrl, containerType: RowContainerType}) => {\n\n    const { rowCtrl, containerType } = params;\n\n    const [getRowIndex, setRowIndex] = createSignal<string>();\n    const [getRowId, setRowId] = createSignal<string>();\n    const [getRole, setRole] = createSignal<string>();\n    const [getRowBusinessKey, setRowBusinessKey] = createSignal<string>();\n    const [getTabIndex, setTabIndex] = createSignal<number>();\n    const [getUserStyles, setUserStyles] = createSignal<any>();\n    const [getCellCtrls, setCellCtrls] = createSignal<CellCtrls>({ list: [], instanceIdMap: new Map() });\n    const [getFullWidthCompDetails, setFullWidthCompDetails] = createSignal<UserCompDetails>();\n    const [getDomOrder, setDomOrder] = createSignal<boolean>(false);\n\n    // these styles have initial values, so element is placed into the DOM with them,\n    // rather than an transition getting applied.\n    const [getTop, setTop] = createSignal<string | undefined>(rowCtrl.getInitialRowTop());\n    const [getTransform, setTransform] = createSignal<string | undefined>(rowCtrl.getInitialTransform());\n\n    let eGui: HTMLDivElement;\n    let fullWidthCompRef: ICellRenderer;\n\n    const setFullWidthRef = (newRef: ICellRenderer)=> {\n        fullWidthCompRef = newRef;\n    };\n\n    createEffect(() => {\n        const compDetails = getFullWidthCompDetails();\n        if (!compDetails) { return; }\n\n        let tryCount = 0;\n\n        // puts autoHeight onto full with detail rows. this needs trickery, as we need\n        // the HTMLElement for the provided Detail Cell Renderer. this pattern was copied\n        // from React, it's possible it's not needed here, however given it's hard to be\n        // sure on Solid's async behavious, keeping the patter here.\n        const trySetup = ()=> {\n            const eChild = eGui.firstChild as HTMLElement;\n            if (eChild) {\n                rowCtrl.setupDetailRowAutoHeight(eChild);\n                return;\n            }\n\n            if (tryCount>=10) { return; }\n\n            tryCount++;\n            setTimeout(trySetup, 0);\n        };\n\n        trySetup();\n    });\n\n    onMount(() => {\n        // because React is asychronous, it's possible the RowCtrl is no longer a valid RowCtrl. This can\n        // happen if user calls two API methods one after the other, with the second API invalidating the rows\n        // the first call created. Thus the rows for the first call could still get created even though no longer needed.\n        if (!rowCtrl.isAlive()) {  return; }\n\n        const cssClassManager = new CssClassManager(() => eGui);\n\n        const compProxy: IRowComp = {\n            // the rowTop is managed by state, instead of direct style manipulation by rowCtrl (like all the other styles)\n            // as we need to have an initial value when it's placed into he DOM for the first time, for animation to work.\n            setTop: value => setTop(value),\n            setTransform: value => setTransform(value),\n\n            // i found using React for managing classes at the row level was to slow, as modifying classes caused a lot of\n            // React code to execute, so avoiding React for managing CSS Classes made the grid go much faster.\n            addOrRemoveCssClass: (name, on) => cssClassManager.addOrRemoveCssClass(name, on),\n\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setRowIndex: value => setRowIndex(value),\n            setRowId: value => setRowId(value),\n            setRowBusinessKey: value => setRowBusinessKey(value),\n            setTabIndex: value => setTabIndex(value),\n            setUserStyles: styles => setUserStyles(styles),\n            setRole: value => setRole(value),\n            // if we don't maintain the order, then cols will be ripped out and into the dom\n            // when cols reordered, which would stop the CSS transitions from working\n            setCellCtrls: next => setCellCtrls(maintainOrderOnColumns(getCellCtrls(), next, getDomOrder())),\n            showFullWidth: compDetails => setFullWidthCompDetails(compDetails),\n            getFullWidthCellRenderer: ()=> fullWidthCompRef,\n        };\n        rowCtrl.setComp(compProxy, eGui, containerType);\n    });\n\n    const getRowStyles = createMemo(() => {\n        const res = { \n            top: getTop(), \n            transform: getTransform(),\n        };\n\n        Object.assign(res, getUserStyles());\n        return res;\n    });\n\n    const isShowCells = createMemo( ()=> getCellCtrls()!=null );\n    const isShowFullWidth = createMemo( ()=> getFullWidthCompDetails()!=null );\n\n    const showCellsJsx = ()=> (\n            <For each={getCellCtrls().list}>{ cellCtrl =>\n                <CellComp\n                        cellCtrl={ cellCtrl }\n                        editingRow={ rowCtrl.isEditing() }\n                        printLayout={ rowCtrl.isPrintLayout() }\n                    />\n            }</For>\n    );\n\n    const showFullWidthJsx = ()=> (\n        <UserComp compDetails={ getFullWidthCompDetails()! } ref={setFullWidthRef}/>\n    );\n\n    return (\n        <div\n            ref={ eGui! }\n            // role={ role() } /// FIXME\n            style={ getRowStyles() }\n            row-index={ getRowIndex() }\n            row-id={ getRowId() }\n            row-business-key={ getRowBusinessKey() }\n            tabIndex={ getTabIndex() }\n        >\n            { isShowFullWidth() && showFullWidthJsx() }\n            { isShowCells() && showCellsJsx() }\n\n        </div>\n    );\n};\n\nexport default RowComp;\n","import { getRowContainerTypeForName, IRowContainerComp, RowContainerCtrl, RowContainerName, RowCtrl } from '@ag-grid-community/core';\nimport { createEffect, createMemo, createSignal, For, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from '../core/beansContext';\nimport { classesList } from '../core/utils';\nimport RowComp from './rowComp';\n\nconst RowContainerComp = (props: {name: RowContainerName})=> {\n\n    const {context} = useContext(BeansContext);\n\n    const [viewportHeight, setViewportHeight] = createSignal<string>('');\n    const [rowCtrlsOrdered, setRowCtrlsOrdered] = createSignal<RowCtrl[]>([]);\n    const [rowCtrls, setRowCtrls] = createSignal<RowCtrl[]>([]);\n    const [domOrder, setDomOrder] = createSignal<boolean>(false);\n    const [containerWidth, setContainerWidth] = createSignal<string>('');\n\n    const { name } = props;\n    const containerType = createMemo(() => getRowContainerTypeForName(name));\n\n    let eWrapper: HTMLDivElement;\n    let eViewport: HTMLDivElement;\n    let eContainer: HTMLDivElement;\n\n    const cssClasses = createMemo(() => RowContainerCtrl.getRowContainerCssClasses(name));\n    const wrapperClasses = createMemo( ()=> classesList(cssClasses().wrapper));\n    const viewportClasses = createMemo( ()=> classesList(cssClasses().viewport));\n    const containerClasses = createMemo( ()=> classesList(cssClasses().container));\n\n    // no need to useMemo for boolean types\n    const template1 = name === RowContainerName.CENTER;\n    const template2 = name === RowContainerName.TOP_CENTER \n                    || name === RowContainerName.BOTTOM_CENTER \n                    || name === RowContainerName.STICKY_TOP_CENTER;\n    const template3 = !template1 && !template2;\n\n    // if domOrder=true, then we just copy rowCtrls into rowCtrlsOrdered observing order,\n    // however if false, then we need to keep the order as they are in the dom, otherwise rowAnimation breaks\n    let rowCtrlsOrderedCopy: RowCtrl[] = [];\n    createEffect( () => {\n        if (domOrder()) {\n            setRowCtrlsOrdered(rowCtrls());\n            return;\n        }\n        // if dom order not important, we don't want to change the order\n        // of the elements in the dom, as this would break transition styles\n        // \n        // we use the rowCtrlsOrderedCopy, to avoid this effect depending on and\n        // setting the same value, hence causing an infinite loop\n        const prev = rowCtrlsOrderedCopy; \n        const oldRows = prev.filter(r => rowCtrls().indexOf(r) >= 0);\n        const newRows = rowCtrls().filter(r => oldRows.indexOf(r) < 0);\n        const next = [...oldRows, ...newRows];\n        setRowCtrlsOrdered(next);\n        rowCtrlsOrderedCopy = next;\n    });\n\n    onMount(() => {\n        const compProxy: IRowContainerComp = {\n            setViewportHeight: setViewportHeight,\n            setRowCtrls: rowCtrls => setRowCtrls(rowCtrls),\n            setDomOrder: domOrder => setDomOrder(domOrder),\n            setContainerWidth: width => setContainerWidth(width)\n        };\n\n        const ctrl = context.createBean(new RowContainerCtrl(name));\n        onCleanup( ()=> context.destroyBean(ctrl));\n\n        ctrl.setComp(compProxy, eContainer, eViewport, eWrapper);\n    });\n\n    const viewportStyle = createMemo(() => ({\n        height: viewportHeight()\n    }));\n\n    const containerStyle = createMemo(() => ({\n        width: containerWidth()\n    }));\n\n    const buildContainer = () => (\n        <div\n            class={ containerClasses() }\n            ref={ eContainer }\n            role={ rowCtrls().length ? \"rowgroup\" : \"presentation\" }\n            style={ containerStyle() }>\n                <For each={rowCtrlsOrdered()}>{(rowCtrl, i) =>\n                    <RowComp rowCtrl={ rowCtrl } containerType={ containerType() }></RowComp>\n                }</For>\n        </div>\n    );\n\n    return (\n        <>\n            {\n                template1 &&\n                <div class={ wrapperClasses() } ref={ eWrapper! } role=\"presentation\">\n                    <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                        { buildContainer() }\n                    </div>\n                </div>\n            }\n            {\n                template2 &&\n                <div class={ viewportClasses() } ref= { eViewport! } role=\"presentation\" style={ viewportStyle() }>\n                    { buildContainer() }\n                </div>\n            }\n            {\n                template3 && buildContainer()\n            }\n        </>\n    );\n\n};\n\nexport default RowContainerComp;\n","import { GridBodyCtrl, IGridBodyComp, RowContainerName } from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridHeaderComp from \"./header/gridHeaderComp\";\nimport RowContainerComp from \"./rows/rowContainerComp\";\n\nconst GridBodyComp = ()=> {\n\n    const {context, agStackComponentsRegistry, resizeObserverService} = useContext(BeansContext);\n\n    const [getRowAnimationClass, setRowAnimationClass] = createSignal<string>('');\n    const [getAriaColCount, setAriaColCount] = createSignal<number>(0);\n    const [getAriaRowCount, setAriaRowCount] = createSignal<number>(0);\n    const [getTopHeight, setTopHeight] = createSignal<number>(0);\n    const [getBottomHeight, setBottomHeight] = createSignal<number>(0);\n    const [getStickyTopHeight, setStickyTopHeight] = createSignal<string>('0px');\n    const [getStickyTopTop, setStickyTopTop] = createSignal<string>('0px');\n    const [getStickyTopWidth, setStickyTopWidth] = createSignal<string>('100%');\n    const [getTopDisplay, setTopDisplay] = createSignal<string>('');\n    const [getBottomDisplay, setBottomDisplay] = createSignal<string>('');\n    \n    const [getMovingCss, setMovingCss] = createSignal<string | null>(null);\n    const [getForceVerticalScrollClass, setForceVerticalScrollClass] = createSignal<string | null>(null);\n    const [getTopAndBottomOverflowY, setTopAndBottomOverflowY] = createSignal<string>('');\n    const [getCellSelectableCss, setCellSelectableCss] = createSignal<string | null>(null);\n\n    // we initialise layoutClass to 'ag-layout-normal', because if we don't, the comp will initially\n    // render with no width (as ag-layout-normal sets width to 0, which is needed for flex) which\n    // gives the grid a massive width, which then renders a massive amount of columns. this problem\n    // is due to React been async, for the non-async version (ie when not using React) this is not a\n    // problem as the UI will finish initialising before we set data.\n    const [getLayoutClass, setLayoutClass] = createSignal<string>('ag-layout-normal');\n\n    let eRoot: HTMLDivElement;\n    let eTop: HTMLDivElement;\n    let eStickyTop: HTMLDivElement;\n    let eBodyViewport: HTMLDivElement;\n    let eBottom: HTMLDivElement;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    onMount( () => {\n        if (!context) { return; }\n\n        const newComp = (tag: string) => {\n            const CompClass = agStackComponentsRegistry.getComponentClass(tag);\n            const comp = context.createBean(new CompClass());\n            onCleanup( ()=> context.destroyBean(comp) );\n            return comp;\n        };\n\n        eRoot.appendChild(newComp('AG-FAKE-HORIZONTAL-SCROLL').getGui());\n        eRoot.appendChild(newComp('AG-OVERLAY-WRAPPER').getGui());\n\n        const compProxy: IGridBodyComp = {\n            setRowAnimationCssOnBodyViewport: setRowAnimationClass,\n            setColumnCount: setAriaColCount,\n            setRowCount: setAriaRowCount,\n            setTopHeight,\n            setBottomHeight,\n            setStickyTopHeight,\n            setStickyTopTop,\n            setStickyTopWidth,\n            setTopDisplay,\n            setBottomDisplay,\n            setColumnMovingCss: setMovingCss,\n            updateLayoutClasses: setLayoutClass,\n            setAlwaysVerticalScrollClass: setForceVerticalScrollClass,\n            setPinnedTopBottomOverflowY: setTopAndBottomOverflowY,\n            setCellSelectableCss: setCellSelectableCss,\n\n            registerBodyViewportResizeListener: listener => {\n                const unsubscribeFromResize = resizeObserverService.observeResize(eBodyViewport!, listener);\n                destroyFuncs.push(() => unsubscribeFromResize());\n            }\n        };\n\n        const ctrl = context.createBean(new GridBodyCtrl());\n        onCleanup( ()=> context.destroyBean(ctrl) );\n\n        // fixme - should not be in a timeout,\n        // was becusae we need GridHeaderComp to be created first\n        setTimeout( ()=> \n            ctrl.setComp(\n                compProxy,\n                eRoot,\n                eBodyViewport,\n                eTop,\n                eBottom,\n                eStickyTop\n            ), 0);\n    });\n\n    const getRootClasses = createMemo(() =>\n        classesList('ag-root','ag-unselectable', getMovingCss(), getLayoutClass())\n    );\n    const getBodyViewportClasses = createMemo(() =>\n        classesList('ag-body-viewport', getRowAnimationClass(), getLayoutClass(), getForceVerticalScrollClass(), getCellSelectableCss())\n    );\n    const getTopClasses = createMemo(() =>\n        classesList('ag-floating-top', getCellSelectableCss())\n    );\n    const getStickyTopClasses = createMemo(() =>\n        classesList('ag-sticky-top', getCellSelectableCss())\n    );\n    const getBottomClasses = createMemo(() =>\n        classesList('ag-floating-bottom', getCellSelectableCss())\n    );\n\n    const getTopStyle = createMemo(() => ({\n        height: getTopHeight,\n        'min-height': getTopHeight,\n        display: getTopDisplay,\n        'overflow-y': (getTopAndBottomOverflowY as any)\n    }));\n\n    const getStickyTopStyle = createMemo(() => ({\n        height: getStickyTopHeight,\n        top: getStickyTopTop,\n        width: getStickyTopWidth\n    }));\n\n    const getBottomStyle = createMemo(()=> ({\n        height: getBottomHeight,\n        'min-height': getBottomHeight,\n        display: getBottomDisplay,\n        'overflow-y': (getTopAndBottomOverflowY as any)\n    }));\n\n    return (\n        <div ref={ eRoot! } class={ getRootClasses() } role=\"grid\" aria-colcount={ getAriaColCount() } aria-rowcount={ getAriaRowCount() }>\n            <GridHeaderComp/>\n            <div ref={ eTop! } class={ getTopClasses() } role=\"presentation\" style={ getTopStyle() }>\n                <RowContainerComp name={ RowContainerName.TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.TOP_FULL_WIDTH } />\n            </div>\n            <div ref={ eBodyViewport! } class={ getBodyViewportClasses() } role=\"presentation\">\n                <RowContainerComp name={ RowContainerName.LEFT } />\n                <RowContainerComp name={ RowContainerName.CENTER } />\n                <RowContainerComp name={ RowContainerName.RIGHT } />\n                <RowContainerComp name={ RowContainerName.FULL_WIDTH } />\n            </div>\n            <div ref={ eStickyTop! } class={ getStickyTopClasses() } role=\"presentation\" style={ getStickyTopStyle() }>\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_LEFT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_CENTER } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_RIGHT } />\n                <RowContainerComp name={ RowContainerName.STICKY_TOP_FULL_WIDTH } />\n            </div>\n            <div ref={ eBottom! } class={ getBottomClasses() } role=\"presentation\" style={ getBottomStyle() }>\n                <RowContainerComp name={ RowContainerName.BOTTOM_LEFT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_CENTER } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_RIGHT } />\n                <RowContainerComp name={ RowContainerName.BOTTOM_FULL_WIDTH } />\n            </div>\n        </div>\n    );\n};\n\nexport default GridBodyComp;\n","import { GridCtrl, ITabGuard, TabGuardCtrl } from '@ag-grid-community/core';\nimport { createSignal, JSX, onCleanup, onMount, useContext } from \"solid-js\";\nimport { BeansContext } from \"./core/beansContext\";\n\ninterface TabGuardProps {\n    children: JSX.Element,\n    eFocusableElement: HTMLDivElement,\n    onTabKeyDown: (e: KeyboardEvent) => void,\n    gridCtrl: GridCtrl,\n    ref: (ref: TabGuardRef)=>void\n}\n\nexport interface TabGuardRef {\n    forceFocusOutOfContainer(): void;\n}\n\nconst TabGuardComp = (props: TabGuardProps)=> {\n\n    const { children, eFocusableElement, onTabKeyDown, gridCtrl } = props;\n    const [tabIndex, setTabIndex] = createSignal<number>();\n\n    let eTopGuard: HTMLDivElement;\n    let eBottomGuard: HTMLDivElement;\n    let ctrl: TabGuardCtrl;\n\n    const { context } = useContext(BeansContext);\n\n    onMount(() => {\n\n        const compProxy: ITabGuard = {\n            setTabIndex: value => value == null ? setTabIndex(undefined) : setTabIndex(parseInt(value, 10))\n        }\n\n        ctrl = context.createBean(new TabGuardCtrl({\n            comp: compProxy,\n            eTopGuard: eTopGuard,\n            eBottomGuard: eBottomGuard,\n            eFocusableElement: eFocusableElement,\n            \n            onTabKeyDown: onTabKeyDown,\n            focusInnerElement: fromBottom => gridCtrl.focusInnerElement(fromBottom)\n        }));\n\n        props.ref({\n            forceFocusOutOfContainer() {\n                ctrl.forceFocusOutOfContainer();\n            }\n        });\n    });\n\n    onCleanup( ()=> context.destroyBean(ctrl) );\n\n    return (\n        <>\n            <div class={ `ag-tab-guard ag-tab-guard-top` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eTopGuard! }></div>\n\n            { children }\n\n            <div class={ `ag-tab-guard ag-tab-guard-bottom` }\n                role=\"presentation\"\n                tabIndex={ tabIndex() }\n                ref={ eBottomGuard! }></div>\n        </>\n    )\n};\n\nexport default TabGuardComp;","import {\n    Context,\n    FocusService,\n    GridCtrl,\n    IGridComp\n} from '@ag-grid-community/core';\nimport { createMemo, createSignal, onCleanup, onMount } from \"solid-js\";\nimport { BeansContext } from './core/beansContext';\nimport { classesList } from './core/utils';\nimport GridBodyComp from './gridBodyComp';\nimport TabGuardComp, { TabGuardRef } from './tabGuardComp';\n\nconst GridComp = (props: {context: Context, class?: string})=> {\n\n    const [rtlClass, setRtlClass] = createSignal<string>('');\n    const [keyboardFocusClass, setKeyboardFocusClass] = createSignal<string>('');\n    const [layoutClass, setLayoutClass] = createSignal<string>('');\n    const [cursor, setCursor] = createSignal<string | null>(null);\n    const [userSelect, setUserSelect] = createSignal<string | null>(null);\n    const [initialised, setInitialised] = createSignal<boolean>(false);\n\n    const {context} = props;\n    const beans = context.getBean('beans');\n\n    let tabGuardRef: TabGuardRef;\n    const setTabGuardRef = (newRef: TabGuardRef)=> {\n        tabGuardRef = newRef;\n        tabGuardRef && tabGuardReady();\n    };\n\n    let eGui: HTMLDivElement;\n    let eBody: HTMLDivElement;\n    let gridCtrl: GridCtrl;\n\n    const onTabKeyDown = () => undefined;\n\n    const destroyFuncs: (()=>void)[] = [];\n    onCleanup( ()=> {\n        destroyFuncs.forEach( f => f() );\n        destroyFuncs.length = 0;\n    });\n\n    const tabGuardReady = ()=> {\n\n        const beansToDestroy: any[] = [];\n\n        const {agStackComponentsRegistry} = beans;\n\n        const HeaderDropZonesClass = agStackComponentsRegistry.getComponentClass('AG-GRID-HEADER-DROP-ZONES');\n        const SideBarClass = agStackComponentsRegistry.getComponentClass('AG-SIDE-BAR');\n        const StatusBarClass = agStackComponentsRegistry.getComponentClass('AG-STATUS-BAR');\n        const WatermarkClass = agStackComponentsRegistry.getComponentClass('AG-WATERMARK');\n        const PaginationClass = agStackComponentsRegistry.getComponentClass('AG-PAGINATION');\n        const additionalEls: HTMLDivElement[] = [];\n\n        if (gridCtrl.showDropZones() && HeaderDropZonesClass) {\n            const headerDropZonesComp = context.createBean(new HeaderDropZonesClass());\n            const el = headerDropZonesComp.getGui();\n            eGui.insertAdjacentElement('afterbegin', el);\n            additionalEls.push(el);\n            beansToDestroy.push(headerDropZonesComp);\n        }\n\n        if (gridCtrl.showSideBar() && SideBarClass) {\n            const sideBarComp = context.createBean(new SideBarClass());\n            const el = sideBarComp.getGui();\n            const bottomTabGuard = eBody.querySelector('.ag-tab-guard-bottom');\n            if (bottomTabGuard) {\n                bottomTabGuard.insertAdjacentElement('beforebegin', el);\n                additionalEls.push(el);\n            }\n\n            beansToDestroy.push(sideBarComp);\n        }\n\n        if (gridCtrl.showStatusBar() && StatusBarClass) {\n            const statusBarComp = context.createBean(new StatusBarClass());\n            const el = statusBarComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(statusBarComp);\n        }\n\n        if (PaginationClass) {\n            const paginationComp = context.createBean(new PaginationClass());\n            const el = paginationComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(paginationComp);\n        }\n\n        if (gridCtrl.showWatermark() && WatermarkClass) {\n            const watermarkComp = context.createBean(new WatermarkClass());\n            const el = watermarkComp.getGui();\n            eGui.insertAdjacentElement('beforeend', el);\n            additionalEls.push(el);\n            beansToDestroy.push(watermarkComp);\n        }\n\n        destroyFuncs.push( ()=> {\n            context.destroyBeans(beansToDestroy);\n            additionalEls.forEach(el => {\n                if (el.parentElement) {\n                    el.parentElement.removeChild(el);\n                }\n            });\n        });\n    };\n\n    onMount( ()=> {\n        gridCtrl = context.createBean(new GridCtrl());\n        destroyFuncs.push( ()=> context.destroyBean(gridCtrl) );\n\n        const compProxy: IGridComp = {\n            destroyGridUi:\n                () => {}, // do nothing, as framework users destroy grid by removing the comp\n            setRtlClass: setRtlClass,\n            addOrRemoveKeyboardFocusClass:\n                (addOrRemove: boolean) => setKeyboardFocusClass(addOrRemove ? FocusService.AG_KEYBOARD_FOCUS : ''),\n            forceFocusOutOfContainer: () => {\n                tabGuardRef && tabGuardRef.forceFocusOutOfContainer();\n            },\n            updateLayoutClasses: setLayoutClass,\n            getFocusableContainers: () => {\n                const els: HTMLElement[] = [];\n\n                const gridBodyCompEl = eGui.querySelector('.ag-root');\n                const sideBarEl = eGui.querySelector('.ag-side-bar')\n\n                if (gridBodyCompEl) {\n                    els.push(gridBodyCompEl as HTMLElement);\n                }\n\n                if (sideBarEl) {\n                    els.push(sideBarEl as HTMLElement);\n                }\n\n                return els;\n            },\n            setCursor,\n            setUserSelect\n        };\n\n        gridCtrl.setComp(compProxy, eGui, eGui);\n        setInitialised(true);\n    });\n    \n    const cssClasses = createMemo( () => classesList('ag-root-wrapper', rtlClass(), keyboardFocusClass(), layoutClass(), props.class) );\n    const bodyCssClasses = createMemo( () => classesList('ag-root-wrapper-body', 'ag-focus-managed', layoutClass()));\n\n    const topStyle = createMemo( () => ({\n        userSelect: userSelect != null ? (userSelect as any) : '',\n        WebkitUserSelect: userSelect != null ? (userSelect as any) : '',\n        cursor: cursor != null ? cursor : ''\n    }));\n\n    return (\n        <div ref={ eGui! } class={ cssClasses() } style={ topStyle() }>\n            <div class={ bodyCssClasses() } ref={ eBody! }>\n                { initialised() &&\n                    // we wait for initialised before rending the children, so GridComp has created and registered with it's\n                    // GridCtrl before we create the child GridBodyComp. Otherwise the GridBodyComp would initialise first,\n                    // before we have set the the Layout CSS classes, causing the GridBodyComp to render rows to a grid that\n                    // doesn't have it's height specified, which would result if all the rows getting rendered (and if many rows,\n                    // hangs the UI)\n                    <BeansContext.Provider value={beans}>\n                        <TabGuardComp\n                            ref={ setTabGuardRef }\n                            eFocusableElement= { eGui! }\n                            onTabKeyDown={ onTabKeyDown }\n                            gridCtrl={ gridCtrl! }>\n                            <GridBodyComp/>\n                        </TabGuardComp>\n                    </BeansContext.Provider>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default GridComp;","import {ColumnApi, ComponentUtil, Context, CtrlsService, GridApi, GridCoreCreator, GridOptions, GridParams, Module} from '@ag-grid-community/core';\nimport {createEffect, createSignal, For, onCleanup, onMount} from \"solid-js\";\nimport {Portal} from 'solid-js/web';\nimport SolidCompWrapperFactory from './core/solidCompWrapperFactory';\nimport {SolidFrameworkOverrides} from './core/solidFrameworkOverrides';\nimport GridComp from './gridComp';\n\nexport interface AgGridSolidRef {\n    api: GridApi;\n    columnApi: ColumnApi;\n}\n\nexport interface AgGridSolidProps extends GridOptions {\n    gridOptions?: GridOptions;\n    ref?: AgGridSolidRef | ((ref: AgGridSolidRef) => void);\n    modules?: Module[];\n    class?: string;\n}\n\nexport interface PortalInfo {\n    mount: HTMLElement;\n    SolidClass: any;\n    props: any;\n    ref: (instance: any) => void;\n}\n\nexport interface PortalManager {\n    addPortal(info: PortalInfo): void;\n\n    removePortal(info: PortalInfo): void;\n}\n\nconst AgGridSolid = (props: AgGridSolidProps) => {\n    let eGui: HTMLDivElement;\n    let gridOptions: GridOptions;\n\n    const [context, setContext] = createSignal<Context>();\n    const [getPortals, setPortals] = createSignal<PortalInfo[]>([]);\n\n    const destroyFuncs: (() => void)[] = [];\n    onCleanup(() => {\n        destroyFuncs.forEach(f => f());\n        destroyFuncs.length = 0;\n    });\n\n    // we check for property changes. to get things started, we take a copy\n    // of all the properties at the start, and then compare against this for\n    // changes.\n    const propsCopy: any = {};\n    Object.keys(props).forEach(key => propsCopy[key] = (props as any)[key]);\n\n    createEffect(() => {\n        const keys = Object.keys(props);\n        const changes: { [key: string]: { currentValue: any, previousValue: any } } = {};\n        let changesExist = false;\n\n        keys.forEach(key => {\n            // this line reads from the prop, which in turn makes\n            // this prop a dependency for the effect.\n            const currentValue = (props as any)[key];\n\n            const previousValue = propsCopy[key];\n            if (previousValue !== currentValue) {\n                changes[key] = {\n                    currentValue,\n                    previousValue\n                };\n                propsCopy[key] = currentValue;\n                changesExist = true;\n            }\n        });\n\n        if (changesExist) {\n            ComponentUtil.processOnChange(changes, gridOptions, gridOptions.api!, gridOptions.columnApi!);\n        }\n    });\n\n    onMount(() => {\n\n        const modules = props.modules || [];\n\n        const portalManager: PortalManager = {\n            addPortal: info => {\n                setPortals([...getPortals(), info]);\n            },\n            removePortal: info => {\n                setPortals(getPortals().filter(item => item != info));\n            }\n        };\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new SolidCompWrapperFactory(portalManager)\n            },\n            modules,\n            frameworkOverrides: new SolidFrameworkOverrides()\n        };\n\n        gridOptions = props.gridOptions || {};\n        ComponentUtil.copyAttributesToGridOptions(gridOptions, props);\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                const refCallback = props.ref && (props.ref as (ref: AgGridSolidRef) => void);\n                if (refCallback) {\n                    const gridRef: AgGridSolidRef = {\n                        api: gridOptions.api!,\n                        columnApi: gridOptions.columnApi!\n                    };\n                    refCallback(gridRef);\n                }\n                destroyFuncs.push(() => gridOptions!.api!.destroy());\n            });\n        };\n\n        const acceptChangesCallback = () => {\n            // todo, what goes here?\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        gridCoreCreator.create(eGui, gridOptions, createUiCallback, acceptChangesCallback, gridParams);\n    });\n\n    return (\n        <div ref={eGui!} style={{height: '100%'}}>\n            {context() &&\n                <GridComp class={props.class} context={context()!}></GridComp>\n            }\n            <For each={getPortals()}>{(info, i) =>\n                <Portal mount={info.mount}>\n                    <info.SolidClass {...info.props} ref={info.ref}/>\n                </Portal>\n            }</For>\n        </div>\n    );\n}\n\nexport default AgGridSolid;\n","import AgGridSolid from \"./grid/agGridSolid\";\nexport default AgGridSolid;\n\nexport * from \"./grid/agGridSolid\";\n\n// /* @refresh reload */\n// import { render } from 'solid-js/web';\n//\n// import './index.css';\n// import App from './sampleApp/App';\n//\n// render(() => <App />, document.getElementById('root') as HTMLElement);\n"],"names":["SolidCompWrapper","constructor","SolidCompClass","portalManager","init","props","eGui","document","createElement","className","portalInfo","mount","SolidClass","ref","instance","addPortal","destroy","removePortal","getGui","hasMethod","name","getFrameworkComponentInstance","callMethod","args","apply","addMethod","callback","SolidCompWrapperFactory","BaseComponentWrapper","createWrapper","SolidComponentClass","BeansContext","createContext","classesList","list","filtered","filter","s","join","CssClasses","initialClasses","forEach","classesMap","setClass","on","nothingHasChanged","res","toString","Object","keys","key","DetailCellRenderer","ctrlsFactory","context","gridOptionsWrapper","resizeObserverService","clientSideRowModel","serverSideRowModel","useContext","getCssClasses","setCssClasses","createSignal","getGridCssClasses","setGridCssClasses","getDetailGridOptions","setDetailGridOptions","getDetailRowData","setDetailRowData","ctrl","eGuiRef","getCssClassesStr","createMemo","getGridCssClassesStr","refresh","onMount","template","console","warn","compProxy","addOrRemoveCssClass","addOrRemoveDetailGridCssClass","setDetailGrid","gridOptions","setRowData","rowData","getInstance","createBean","resizeObserverDestroyFunc","isDetailRowAutoHeight","checkRowSizeFunc","clientHeight","updateRowHeightFunc","node","setRowHeight","onRowHeightChanged","setTimeout","observeResize","destroyBean","setRef","registerDetailWithMaster","api","columnApi","_tmpl$","_$use","_$insert","_$memo","_$mergeProps","_$effect","_$className","JsUserComp","p","promise","compDetails","newAgStackInstance","comp","resolveNow","x","gui","onCleanup","undefined","SolidUserComp","componentClass","refSet","_$createComponent","params","UserComp","showSolidComp","details","componentFromFramework","showJsComp","GroupCellRenderer","eValueRef","eCheckboxRef","eExpandedRef","eContractedRef","getInnerCompDetails","setInnerCompDetails","getChildCount","setChildCount","getValue","setValue","getExpandedCssClasses","setExpandedCssClasses","getContractedCssClasses","setContractedCssClasses","getCheckboxCssClasses","setCheckboxCssClasses","setInnerRenderer","valueToDisplay","escapedValue","_","escapeString","count","setContractedDisplayed","displayed","setExpandedDisplayed","setCheckboxVisible","visible","GroupCellRendererCtrl","getClassName","getExpandedClassName","getContractedClassName","getCheckboxClassName","isShowUserComp","isShowValue","_$spread","colDef","role","SolidFrameworkOverrides","VanillaFrameworkOverrides","agGroupCellRenderer","agGroupRowRenderer","agDetailCellRenderer","frameworkComponent","frameworkComponents","isFrameworkComponent","prototype","isJsComp","HeaderCellComp","getWidth","setWidth","getTitle","setTitle","getColId","setColId","getAriaSort","setAriaSort","getAriaDescription","setAriaDescription","getUserCompDetails","setUserCompDetails","eResize","eHeaderCompWrapper","userComp","cssClassManager","CssClassManager","width","id","title","description","sort","getUserCompInstance","setComp","selectAllGui","getSelectAllGui","insertAdjacentElement","setDragSource","style","_$style","_$setAttribute","HeaderFilterCellComp","getCssBodyClasses","setBodyCssClasses","getCssButtonWrapperClasses","setButtonWrapperCssClasses","eFloatingFilterBody","eButtonWrapper","eButtonShowMainFilter","alreadyResolved","userCompResolve","userCompPromise","AgPromise","resolve","value","prev","addOrRemoveBodyCssClass","addOrRemoveButtonWrapperCssClass","setCompDetails","getFloatingFilterComp","setMenuIcon","eIcon","appendChild","getStyle","getCssClassesString","getBodyCssClassesString","getButtonWrapperCssClassesString","HeaderGroupCellComp","getCssResizableClasses","setResizableCssClasses","getAriaExpanded","setAriaExpanded","addOrRemoveResizableCssClass","expanded","createEffect","userCompDetails","userCompDomElement","childNodes","getResizableClassName","HeaderRowComp","getTransform","setTransform","getHeight","setHeight","getTop","setTop","getAriaRowIndex","setAriaRowIndex","getCellCtrls","setCellCtrls","typeColumn","getType","HeaderRowType","COLUMN","typeGroup","COLUMN_GROUP","typeFilter","FLOATING_FILTER","setCellCtrlsMaintainOrder","next","isEnsureDomOrder","prevMap","mapById","c","getInstanceId","nextMap","oldCtrlsWeAreKeeping","has","newCtrls","nextOrderMaintained","transform","height","top","setHeaderCtrls","ctrls","rowIndex","cssClassesList","push","cssClasses","createCellJsx","cellCtrl","For","i","HeaderRowContainerComp","getCenterContainerWidth","setCenterContainerWidth","getCenterContainerTransform","setCenterContainerTransform","getPinnedContainerWidth","setPinnedContainerWidth","getHeaderRowCtrls","setHeaderRowCtrls","pinnedLeft","pinned","Constants","PINNED_LEFT","pinnedRight","PINNED_RIGHT","centre","destroyFuncs","f","length","setCtrls","setCenterWidth","setContainerTransform","HeaderRowContainerCtrl","insertRowsJsx","eCenterContainerStyle","ePinnedStyle","_tmpl$2","GridHeaderComp","setHeightAndMinHeight","GridHeaderCtrl","PopupEditorComp","popupService","editDetails","eParentCell","useModelPopup","isStopEditingWhenCellsLoseFocus","wrapper","PopupEditorWrapper","ePopupGui","positionParams","column","getColumn","rowNode","getRowNode","type","eventSource","ePopup","keepWithinBounds","positionCallback","popupPosition","positionPopupUnderComponent","bind","positionPopupOverComponent","translate","getLocaleTextFunc","addPopupRes","addPopup","modal","eChild","closeOnEsc","closedCallback","onPopupEditorClosed","anchorToElement","ariaLabel","hideEditorPopup","hideFunc","Portal","children","ShowEditDetails","getCompDetails","inPopup","popup","eGuiFn","setPopupRef","setInlineRef","ToolsComp","CompWrapper","innerProps","createFn","includeSelection","createSelectionCheckbox","includeDndSource","createDndSource","includeRowDrag","createRowDragComp","ShowRenderDetails","showDetails","isNoCompDetails","valueForNoCellRenderer","bodyJsxFunc","showTools","showCellWrapper","setECellValue","cellInstanceId","checkCellEditorDeprecations","cellEditor","col","isPopup","msg","doOnce","getPopupPosition","CellComp","printLayout","editingRow","renderDetails","setRenderDetails","setEditDetails","renderCompVersion","renderCompVersionList","setRenderCompVersionList","userStyles","setUserStyles","tabIndex","setTabIndex","setRole","colId","setIncludeSelection","setIncludeRowDrag","setIncludeDndSource","forceWrapper","isForceWrapper","eCellWrapper","eCellValue","val","cellRenderer","setEditorRef","editingCancelledByUserComp","isCancelBeforeStart","stopEditing","refAny","afterGuiAttached","setPopupEditorRef","setInlineEditorRef","ariaDescribedBy","styles","getFocusableElement","include","getCellEditor","getCellRenderer","getParentOfValue","force","readyForRefresh","isJsCellRenderer","result","maintainOrderOnColumns","domOrder","instanceIdMap","Map","set","oldCellCtrls","newCellCtrls","newInstanceIdMap","tempMap","instanceId","RowComp","rowCtrl","containerType","getRowIndex","setRowIndex","getRowId","setRowId","getRole","getRowBusinessKey","setRowBusinessKey","getTabIndex","getUserStyles","getFullWidthCompDetails","setFullWidthCompDetails","getDomOrder","setDomOrder","getInitialRowTop","getInitialTransform","fullWidthCompRef","setFullWidthRef","newRef","tryCount","trySetup","firstChild","setupDetailRowAutoHeight","isAlive","showFullWidth","getFullWidthCellRenderer","getRowStyles","assign","isShowCells","isShowFullWidth","showCellsJsx","isEditing","isPrintLayout","showFullWidthJsx","RowContainerComp","viewportHeight","setViewportHeight","rowCtrlsOrdered","setRowCtrlsOrdered","rowCtrls","setRowCtrls","containerWidth","setContainerWidth","getRowContainerTypeForName","eWrapper","eViewport","eContainer","RowContainerCtrl","getRowContainerCssClasses","wrapperClasses","viewportClasses","viewport","containerClasses","container","template1","RowContainerName","CENTER","template2","TOP_CENTER","BOTTOM_CENTER","STICKY_TOP_CENTER","template3","rowCtrlsOrderedCopy","oldRows","r","indexOf","newRows","viewportStyle","containerStyle","buildContainer","GridBodyComp","agStackComponentsRegistry","getRowAnimationClass","setRowAnimationClass","getAriaColCount","setAriaColCount","getAriaRowCount","setAriaRowCount","getTopHeight","setTopHeight","getBottomHeight","setBottomHeight","getStickyTopHeight","setStickyTopHeight","getStickyTopTop","setStickyTopTop","getStickyTopWidth","setStickyTopWidth","getTopDisplay","setTopDisplay","getBottomDisplay","setBottomDisplay","getMovingCss","setMovingCss","getForceVerticalScrollClass","setForceVerticalScrollClass","getTopAndBottomOverflowY","setTopAndBottomOverflowY","getCellSelectableCss","setCellSelectableCss","getLayoutClass","setLayoutClass","eRoot","eTop","eStickyTop","eBodyViewport","eBottom","newComp","tag","CompClass","getComponentClass","setRowAnimationCssOnBodyViewport","setColumnCount","setRowCount","setColumnMovingCss","updateLayoutClasses","setAlwaysVerticalScrollClass","setPinnedTopBottomOverflowY","registerBodyViewportResizeListener","listener","unsubscribeFromResize","GridBodyCtrl","getRootClasses","getBodyViewportClasses","getTopClasses","getStickyTopClasses","getBottomClasses","getTopStyle","display","getStickyTopStyle","getBottomStyle","TOP_LEFT","TOP_RIGHT","TOP_FULL_WIDTH","LEFT","RIGHT","FULL_WIDTH","STICKY_TOP_LEFT","STICKY_TOP_RIGHT","STICKY_TOP_FULL_WIDTH","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_FULL_WIDTH","TabGuardComp","eFocusableElement","onTabKeyDown","gridCtrl","eTopGuard","eBottomGuard","parseInt","TabGuardCtrl","focusInnerElement","fromBottom","forceFocusOutOfContainer","GridComp","rtlClass","setRtlClass","keyboardFocusClass","setKeyboardFocusClass","layoutClass","cursor","setCursor","userSelect","setUserSelect","initialised","setInitialised","beans","getBean","tabGuardRef","setTabGuardRef","tabGuardReady","eBody","beansToDestroy","HeaderDropZonesClass","SideBarClass","StatusBarClass","WatermarkClass","PaginationClass","additionalEls","showDropZones","headerDropZonesComp","el","showSideBar","sideBarComp","bottomTabGuard","querySelector","showStatusBar","statusBarComp","paginationComp","showWatermark","watermarkComp","destroyBeans","parentElement","removeChild","GridCtrl","destroyGridUi","addOrRemoveKeyboardFocusClass","addOrRemove","FocusService","AG_KEYBOARD_FOCUS","getFocusableContainers","els","gridBodyCompEl","sideBarEl","class","bodyCssClasses","topStyle","WebkitUserSelect","AgGridSolid","setContext","getPortals","setPortals","propsCopy","changes","changesExist","currentValue","previousValue","ComponentUtil","processOnChange","modules","info","item","gridParams","providedBeanInstances","frameworkComponentWrapper","frameworkOverrides","copyAttributesToGridOptions","createUiCallback","ctrlsService","CtrlsService","NAME","whenReady","refCallback","gridRef","acceptChangesCallback","gridCoreCreator","GridCoreCreator","create"],"mappings":"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"}