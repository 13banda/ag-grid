{
  "version": 3,
  "sources": ["../../src/main.ts", "../../src/agGridEnterpriseModule.ts", "../../src/license/gridLicenseManager.ts", "../../src/license/shared/md5.ts", "../../src/license/shared/licenseManager.ts", "../../src/license/watermark.ts", "../../src/version.ts"],
  "sourcesContent": ["export { EnterpriseCoreModule } from \"./agGridEnterpriseModule\";\nexport {GridLicenseManager as LicenseManager} from \"./license/gridLicenseManager\";\nexport {ILicenseManager} from \"./license/shared/licenseManager\";\n", "import { Module, ModuleNames } from \"@ag-grid-community/core\";\nimport { GridLicenseManager as LicenseManager } from \"./license/gridLicenseManager\";\nimport { WatermarkComp } from \"./license/watermark\";\n\nexport { WatermarkComp } from \"./license/watermark\";\nimport { VERSION } from \"./version\";\n\nexport const EnterpriseCoreModule: Module = {\n    version: VERSION,\n    moduleName: ModuleNames.EnterpriseCoreModule,\n    beans: [LicenseManager],\n    agStackComponents: [\n        { componentName: 'AgWatermark', componentClass: WatermarkComp }\n    ]\n};\n", "import { _, Autowired, Bean, BeanStub, PreConstruct } from '@ag-grid-community/core';\nimport {ILicenseManager, LicenseManager} from \"./shared/licenseManager\";\n\n@Bean('licenseManager')\nexport class GridLicenseManager extends BeanStub {\n    private licenseManager: LicenseManager;\n\n    @PreConstruct\n    public validateLicense(): void {\n        this.licenseManager = new LicenseManager(this.gridOptionsService.getDocument())\n        this.licenseManager.validateLicense();\n    }\n\n    static getLicenseDetails(licenseKey: string) {\n        return new LicenseManager(null as any).getLicenseDetails(licenseKey);\n    }\n\n    public isDisplayWatermark(): boolean {\n        return this.licenseManager.isDisplayWatermark();\n    }\n\n    public getWatermarkMessage() : string {\n        return this.licenseManager.getWatermarkMessage();\n    }\n\n    static setLicenseKey(licenseKey: string): void {\n        LicenseManager.setLicenseKey(licenseKey);\n    }\n\n    static setChartsLicenseManager(chartsLicenseManager: ILicenseManager) {\n        LicenseManager.setChartsLicenseManager(chartsLicenseManager);\n    }\n}\n", "\nexport class MD5 {\n    private ieCompatibility = false;\n\n    public init(): void {\n        this.ieCompatibility = (this.md5('hello') != '5d41402abc4b2a76b9719d911017c592');\n    }\n\n    private md5cycle(x: any, k: any) {\n        let a: any = x[0], b: any = x[1], c: any = x[2], d: any = x[3];\n\n        a = this.ff(a, b, c, d, k[0], 7, -680876936);\n        d = this.ff(d, a, b, c, k[1], 12, -389564586);\n        c = this.ff(c, d, a, b, k[2], 17, 606105819);\n        b = this.ff(b, c, d, a, k[3], 22, -1044525330);\n        a = this.ff(a, b, c, d, k[4], 7, -176418897);\n        d = this.ff(d, a, b, c, k[5], 12, 1200080426);\n        c = this.ff(c, d, a, b, k[6], 17, -1473231341);\n        b = this.ff(b, c, d, a, k[7], 22, -45705983);\n        a = this.ff(a, b, c, d, k[8], 7, 1770035416);\n        d = this.ff(d, a, b, c, k[9], 12, -1958414417);\n        c = this.ff(c, d, a, b, k[10], 17, -42063);\n        b = this.ff(b, c, d, a, k[11], 22, -1990404162);\n        a = this.ff(a, b, c, d, k[12], 7, 1804603682);\n        d = this.ff(d, a, b, c, k[13], 12, -40341101);\n        c = this.ff(c, d, a, b, k[14], 17, -1502002290);\n        b = this.ff(b, c, d, a, k[15], 22, 1236535329);\n\n        a = this.gg(a, b, c, d, k[1], 5, -165796510);\n        d = this.gg(d, a, b, c, k[6], 9, -1069501632);\n        c = this.gg(c, d, a, b, k[11], 14, 643717713);\n        b = this.gg(b, c, d, a, k[0], 20, -373897302);\n        a = this.gg(a, b, c, d, k[5], 5, -701558691);\n        d = this.gg(d, a, b, c, k[10], 9, 38016083);\n        c = this.gg(c, d, a, b, k[15], 14, -660478335);\n        b = this.gg(b, c, d, a, k[4], 20, -405537848);\n        a = this.gg(a, b, c, d, k[9], 5, 568446438);\n        d = this.gg(d, a, b, c, k[14], 9, -1019803690);\n        c = this.gg(c, d, a, b, k[3], 14, -187363961);\n        b = this.gg(b, c, d, a, k[8], 20, 1163531501);\n        a = this.gg(a, b, c, d, k[13], 5, -1444681467);\n        d = this.gg(d, a, b, c, k[2], 9, -51403784);\n        c = this.gg(c, d, a, b, k[7], 14, 1735328473);\n        b = this.gg(b, c, d, a, k[12], 20, -1926607734);\n\n        a = this.hh(a, b, c, d, k[5], 4, -378558);\n        d = this.hh(d, a, b, c, k[8], 11, -2022574463);\n        c = this.hh(c, d, a, b, k[11], 16, 1839030562);\n        b = this.hh(b, c, d, a, k[14], 23, -35309556);\n        a = this.hh(a, b, c, d, k[1], 4, -1530992060);\n        d = this.hh(d, a, b, c, k[4], 11, 1272893353);\n        c = this.hh(c, d, a, b, k[7], 16, -155497632);\n        b = this.hh(b, c, d, a, k[10], 23, -1094730640);\n        a = this.hh(a, b, c, d, k[13], 4, 681279174);\n        d = this.hh(d, a, b, c, k[0], 11, -358537222);\n        c = this.hh(c, d, a, b, k[3], 16, -722521979);\n        b = this.hh(b, c, d, a, k[6], 23, 76029189);\n        a = this.hh(a, b, c, d, k[9], 4, -640364487);\n        d = this.hh(d, a, b, c, k[12], 11, -421815835);\n        c = this.hh(c, d, a, b, k[15], 16, 530742520);\n        b = this.hh(b, c, d, a, k[2], 23, -995338651);\n\n        a = this.ii(a, b, c, d, k[0], 6, -198630844);\n        d = this.ii(d, a, b, c, k[7], 10, 1126891415);\n        c = this.ii(c, d, a, b, k[14], 15, -1416354905);\n        b = this.ii(b, c, d, a, k[5], 21, -57434055);\n        a = this.ii(a, b, c, d, k[12], 6, 1700485571);\n        d = this.ii(d, a, b, c, k[3], 10, -1894986606);\n        c = this.ii(c, d, a, b, k[10], 15, -1051523);\n        b = this.ii(b, c, d, a, k[1], 21, -2054922799);\n        a = this.ii(a, b, c, d, k[8], 6, 1873313359);\n        d = this.ii(d, a, b, c, k[15], 10, -30611744);\n        c = this.ii(c, d, a, b, k[6], 15, -1560198380);\n        b = this.ii(b, c, d, a, k[13], 21, 1309151649);\n        a = this.ii(a, b, c, d, k[4], 6, -145523070);\n        d = this.ii(d, a, b, c, k[11], 10, -1120210379);\n        c = this.ii(c, d, a, b, k[2], 15, 718787259);\n        b = this.ii(b, c, d, a, k[9], 21, -343485551);\n\n        x[0] = this.add32(a, x[0]);\n        x[1] = this.add32(b, x[1]);\n        x[2] = this.add32(c, x[2]);\n        x[3] = this.add32(d, x[3]);\n    }\n\n    private cmn(q: any, a: any, b: any, x: any, s: any, t: any) {\n        a = this.add32(this.add32(a, q), this.add32(x, t));\n        return this.add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    private ff(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    private gg(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    private hh(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    private ii(a: any, b: any, c: any, d: any, x: any, s: any, t: any) {\n        return this.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    private md51(s: any) {\n        const n: any = s.length;\n        const state: any = [1732584193, -271733879, -1732584194, 271733878];\n        let i: any;\n        for (i = 64; i <= s.length; i += 64) {\n            this.md5cycle(state, this.md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        const tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < s.length; i++) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            this.md5cycle(state, tail);\n            for (i = 0; i < 16; i++) { tail[i] = 0; }\n        }\n        tail[14] = n * 8;\n        this.md5cycle(state, tail);\n        return state;\n    }\n\n    /* there needs to be support for Unicode here, * unless we pretend that we can redefine the MD-5\n     * algorithm for multi-byte characters (perhaps by adding every four 16-bit characters and\n     * shortening the sum to 32 bits). Otherwise I suthis.ggest performing MD-5 as if every character\n     * was two bytes--e.g., 0040 0025 = @%--but then how will an ordinary MD-5 sum be matched?\n     * There is no way to standardize text to something like UTF-8 before transformation; speed cost is\n     * utterly prohibitive. The JavaScript standard itself needs to look at this: it should start\n     * providing access to strings as preformed UTF-8 8-bit unsigned value arrays.\n     */\n    private md5blk(s: any) { /* I figured global was faster.   */\n        const md5blks: any = [];\n\n        /* Andy King said do it this way. */\n        for (let i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) << 8)\n                + (s.charCodeAt(i + 2) << 16)\n                + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    private rhex(n: any) {\n        const hex_chr: any = '0123456789abcdef'.split('');\n        let s: string = '', j: any = 0;\n        for (; j < 4; j++) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\n                + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    private hex(x: any) {\n        for (let i: any = 0; i < x.length; i++) {\n            x[i] = this.rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    public md5(s: any) {\n        return this.hex(this.md51(s));\n    }\n\n    private add32(a: any, b: any) {\n        return this.ieCompatibility ? this.add32Compat(a, b) : this.add32Std(a, b);\n    }\n\n    /* this function is much faster, so if possible we use it. Some IEs are the only ones I know of that\n     need the idiotic second function, generated by an if clause.  */\n    private add32Std(a: any, b: any) {\n        return (a + b) & 0xFFFFFFFF;\n    }\n\n    private add32Compat(x: any, y: any) {\n        const lsw = (x & 0xFFFF) + (y & 0xFFFF),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n}\n", "import {MD5} from './md5';\n\n// move to general utils\nfunction missingOrEmpty<T>(value?: T[] | string | null): boolean {\n    return value == null || value.length === 0;\n}\n\nconst LICENSE_TYPES = {\n    '01': 'GRID',\n    '02': 'CHARTS',\n    '0102': 'BOTH'\n}\n\nexport interface ILicenseManager {\n    setLicenseKey: (key?: string, gridContext?: boolean) => void;\n}\n\nexport class LicenseManager {\n    private static RELEASE_INFORMATION: string = 'MTcxMDY5MjgwODc5NQ==';\n    private static licenseKey: string;\n    private static chartsLicenseManager?: ILicenseManager;\n    private watermarkMessage: string | undefined = undefined;\n\n    private md5: MD5;\n    private document: Document;\n    \n    private totalMessageLength = 124;\n\n    constructor(document: Document) {\n        this.document = document;\n\n        this.md5 = new MD5();\n        this.md5.init();\n    }\n\n    public validateLicense(): void {\n        const licenseDetails = this.getLicenseDetails(LicenseManager.licenseKey);\n        const currentLicenseName = `AG Grid ${licenseDetails.currentLicenseType === 'BOTH' ? 'and AG Charts ' : ''}Enterprise`;\n        const suppliedLicenseName = licenseDetails.suppliedLicenseType === undefined ? '' : `AG ${licenseDetails.suppliedLicenseType === 'BOTH' ? 'Grid and AG Charts' : licenseDetails.suppliedLicenseType === 'GRID' ? 'Grid' : 'Charts'} Enterprise`;\n\n        if (licenseDetails.missing) {\n            if (!this.isWebsiteUrl() || this.isForceWatermark()) {\n                this.outputMissingLicenseKey(currentLicenseName);\n            }\n        } else if (licenseDetails.expired) {\n            const gridReleaseDate = LicenseManager.getGridReleaseDate();\n            const formattedReleaseDate = LicenseManager.formatDate(gridReleaseDate);\n            this.outputExpiredKey(licenseDetails.expiry, formattedReleaseDate, currentLicenseName, suppliedLicenseName);\n        } else if (!licenseDetails.valid) {\n            this.outputInvalidLicenseKey(!!licenseDetails.incorrectLicenseType, currentLicenseName, suppliedLicenseName);\n        } else if (licenseDetails.isTrial && licenseDetails.trialExpired) {\n            this.outputExpiredTrialKey(licenseDetails.expiry, currentLicenseName, suppliedLicenseName);\n        }\n    }\n\n    private static extractExpiry(license: string) {\n        const restrictionHashed = license.substring(license.lastIndexOf('_') + 1, license.length);\n        return new Date(parseInt(LicenseManager.decode(restrictionHashed), 10));\n    }\n\n    private static extractLicenseComponents(licenseKey: string) {\n        // when users copy the license key from a PDF extra zero width characters are sometimes copied too\n        // carriage returns and line feeds are problematic too\n        // all of which causes license key validation to fail - strip these out\n        let cleanedLicenseKey = licenseKey.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\n        cleanedLicenseKey = cleanedLicenseKey.replace(/\\r?\\n|\\r/g, '');\n\n        // the hash that follows the key is 32 chars long\n        if (licenseKey.length <= 32) {\n            return {md5: null, license: licenseKey, version: null, isTrial: null};\n        }\n\n        const hashStart = cleanedLicenseKey.length - 32;\n        const md5 = cleanedLicenseKey.substring(hashStart);\n        const license = cleanedLicenseKey.substring(0, hashStart);\n        const [version, isTrial, type] = LicenseManager.extractBracketedInformation(cleanedLicenseKey);\n        return {md5, license, version, isTrial, type};\n    }\n\n    public getLicenseDetails(licenseKey: string) {\n        const currentLicenseType = LicenseManager.chartsLicenseManager ? 'BOTH' : 'GRID';\n        if (missingOrEmpty(licenseKey)) {\n            return {\n                licenseKey,\n                valid: false,\n                missing: true,\n                currentLicenseType\n            }\n        }\n\n        const gridReleaseDate = LicenseManager.getGridReleaseDate();\n        const {md5, license, version, isTrial, type} = LicenseManager.extractLicenseComponents(licenseKey);\n        let valid = (md5 === this.md5.md5(license)) && licenseKey.indexOf(\"For_Trialing_ag-Grid_Only\") === -1;\n        let trialExpired: undefined | boolean = undefined;\n        let expired: undefined | boolean = undefined;\n        let expiry: Date | null = null;\n        let incorrectLicenseType = false;\n        let suppliedLicenseType: undefined | string = undefined;\n\n        function handleTrial() {\n            const now = new Date();\n            trialExpired = (expiry! < now);\n            expired = undefined;\n        }\n\n        if (valid) {\n            expiry = LicenseManager.extractExpiry(license);\n            valid = !isNaN(expiry.getTime());\n\n            if (valid) {\n                expired = (gridReleaseDate > expiry);\n\n                switch (version) {\n                    case \"legacy\":\n                    case \"2\": {\n                        if (isTrial) {\n                            handleTrial();\n                        }\n                        break;\n                    }\n                    case \"3\": {\n                        if (missingOrEmpty(type)) {\n                            valid = false;\n                        } else {\n                            suppliedLicenseType = type;\n                            if((type !== LICENSE_TYPES['01'] && type !== LICENSE_TYPES['0102']) ||\n                                (currentLicenseType === 'BOTH' && suppliedLicenseType !== 'BOTH')) {\n                                valid = false;\n                                incorrectLicenseType = true\n                            } else if (isTrial) {\n                                handleTrial();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!valid) {\n            return {\n                licenseKey,\n                valid,\n                incorrectLicenseType,\n                currentLicenseType,\n                suppliedLicenseType\n            }\n        }\n\n        return {\n            licenseKey,\n            valid,\n            expiry: LicenseManager.formatDate(expiry),\n            expired,\n            version,\n            isTrial,\n            trialExpired,\n            incorrectLicenseType,\n            currentLicenseType,\n            suppliedLicenseType\n        };\n    }\n\n    public isDisplayWatermark(): boolean {\n        return this.isForceWatermark() || (!this.isLocalhost() && !this.isWebsiteUrl() && !missingOrEmpty(this.watermarkMessage));\n    }\n\n    public getWatermarkMessage(): string {\n        return this.watermarkMessage || '';\n    }\n\n    private getHostname(): string {\n        const win = (this.document.defaultView || window);\n        const loc = win.location;\n        const {hostname = ''} = loc;\n\n        return hostname;\n    }\n\n    private isForceWatermark(): boolean {\n        const win = (this.document.defaultView || window);\n        const loc = win.location;\n        const {pathname} = loc;\n\n        return pathname ? pathname.indexOf('forceWatermark') !== -1 : false;\n    }\n\n    private isWebsiteUrl(): boolean {\n        const hostname = this.getHostname();\n        return hostname.match(/^((?:[\\w-]+\\.)?ag-grid\\.com)$/) !== null;\n    }\n\n    private isLocalhost(): boolean {\n        const hostname = this.getHostname();\n        return hostname.match(/^(?:127\\.0\\.0\\.1|localhost)$/) !== null;\n    }\n\n    private static formatDate(date: any): string {\n        const monthNames: string[] = [\n            'January', 'February', 'March',\n            'April', 'May', 'June', 'July',\n            'August', 'September', 'October',\n            'November', 'December'\n        ];\n\n        const day = date.getDate();\n        const monthIndex = date.getMonth();\n        const year = date.getFullYear();\n\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    }\n\n    private static getGridReleaseDate() {\n        return new Date(parseInt(LicenseManager.decode(LicenseManager.RELEASE_INFORMATION), 10));\n    }\n\n    private static decode(input: string): string {\n        const keystr: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        let t = '';\n        let n: any, r: any, i: any;\n        let s: any, o: any, u: any, a: any;\n        let f: number = 0;\n        const e: string = input.replace(/[^A-Za-z0-9+/=]/g, '');\n        while (f < e.length) {\n            s = keystr.indexOf(e.charAt(f++));\n            o = keystr.indexOf(e.charAt(f++));\n            u = keystr.indexOf(e.charAt(f++));\n            a = keystr.indexOf(e.charAt(f++));\n            n = s << 2 | o >> 4;\n            r = (o & 15) << 4 | u >> 2;\n            i = (u & 3) << 6 | a;\n            t = t + String.fromCharCode(n);\n            if (u != 64) {\n                t = t + String.fromCharCode(r);\n            }\n            if (a != 64) {\n                t = t + String.fromCharCode(i);\n            }\n        }\n        t = LicenseManager.utf8_decode(t);\n        return t;\n    }\n\n    private static utf8_decode(input: string): string {\n        input = input.replace(/rn/g, 'n');\n        let t = '';\n        for (let n = 0; n < input.length; n++) {\n            const r = input.charCodeAt(n);\n            if (r < 128) {\n                t += String.fromCharCode(r);\n            } else if (r > 127 && r < 2048) {\n                t += String.fromCharCode(r >> 6 | 192);\n                t += String.fromCharCode(r & 63 | 128);\n            } else {\n                t += String.fromCharCode(r >> 12 | 224);\n                t += String.fromCharCode(r >> 6 & 63 | 128);\n                t += String.fromCharCode(r & 63 | 128);\n            }\n        }\n        return t;\n    }\n\n    static setChartsLicenseManager(dependantLicenseManager: ILicenseManager): void {\n        this.chartsLicenseManager = dependantLicenseManager;\n    }\n\n    static setLicenseKey(licenseKey: string): void {\n        this.licenseKey = licenseKey;\n\n        if(this.chartsLicenseManager) {\n            this.chartsLicenseManager.setLicenseKey(licenseKey, true);\n        }\n    }\n\n    private static extractBracketedInformation(licenseKey: string): [string | null, boolean | null, string?] {\n        // legacy no trial key\n        if (!licenseKey.includes(\"[\")) {\n            return [\"legacy\", false, undefined];\n        }\n\n        const matches = licenseKey.match(/\\[(.*?)\\]/g)!.map(match => match.replace(\"[\", \"\").replace(\"]\", \"\"));\n        if (!matches || matches.length === 0) {\n            return [\"legacy\", false, undefined];\n        }\n\n        const isTrial = matches.filter(match => match === 'TRIAL').length === 1;\n        const rawVersion = matches.filter(match => match.indexOf(\"v\") === 0)[0];\n        const version = rawVersion ? rawVersion.replace('v', '') : 'legacy';\n        const type = (LICENSE_TYPES as any)[matches.filter(match => (LICENSE_TYPES as any)[match])[0]];\n\n        return [version, isTrial, type];\n    }\n\n    private centerPadAndOutput(input: string) {\n        const paddingRequired = this.totalMessageLength - input.length;\n        console.error(input.padStart(paddingRequired / 2 + input.length, '*').padEnd(this.totalMessageLength, '*'));\n    }\n\n    private padAndOutput(input: string, padding  = '*', terminateWithPadding = '') {\n        console.error(input.padEnd(this.totalMessageLength - terminateWithPadding.length, padding) + terminateWithPadding);\n    }\n\n    private outputInvalidLicenseKey(incorrectLicenseType: boolean, currentLicenseName: string, suppliedLicenseName: string) {\n        if (incorrectLicenseType) {\n            // TC4, TC5,TC10\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput(` ${currentLicenseName} License `);\n            this.centerPadAndOutput(' Incompatible License Key ');\n            this.padAndOutput(`* Your license key is for ${suppliedLicenseName} only and does not cover you for ${currentLicenseName}.`, ' ', '*');\n            this.padAndOutput('* Please contact info@ag-grid.com to obtain a combined license key.', ' ', '*');\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput('');\n        } else {\n            // TC3, TC9\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput(` ${currentLicenseName} License `);\n            this.centerPadAndOutput(' Invalid License Key ');\n            this.padAndOutput(`* Your license key is not valid - please contact info@ag-grid.com to obtain a valid license.`, ' ', '*');\n            this.centerPadAndOutput('');\n            this.centerPadAndOutput('');\n        }\n\n        this.watermarkMessage = \"Invalid License\";\n    }\n\n    private outputExpiredTrialKey(formattedExpiryDate: string, currentLicenseName: string, suppliedLicenseName: string) {\n        // TC14\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput(` ${currentLicenseName} License `);\n        this.centerPadAndOutput(' Trial Period Expired. ');\n        this.padAndOutput(`* Your trial only license for ${suppliedLicenseName} expired on ${formattedExpiryDate}.`, ' ', '*');\n        this.padAndOutput('* Please email info@ag-grid.com to purchase a license.', ' ', '*');\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput('');\n\n        this.watermarkMessage = \"Trial Period Expired\";\n    }\n\n    private outputMissingLicenseKey(currentLicenseName: string) {\n        // TC6, TC12\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput(` ${currentLicenseName} License `);\n        this.centerPadAndOutput(' License Key Not Found ');\n        this.padAndOutput(`* All ${currentLicenseName} features are unlocked for trial.`, ' ', '*');\n        this.padAndOutput('* If you want to hide the watermark please email info@ag-grid.com for a trial license key.', ' ', '*');\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput('');\n\n        this.watermarkMessage = \"For Trial Use Only\";\n    }\n\n    private outputExpiredKey(formattedExpiryDate: string, formattedReleaseDate: string, currentLicenseName: string, suppliedLicenseName: string) {\n        // TC2\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput(` ${currentLicenseName} License `);\n        this.centerPadAndOutput(' Incompatible Software Version ');\n        this.padAndOutput(`* Your license key works with versions of ${suppliedLicenseName} released before ${formattedExpiryDate}.`, ' ', '*');\n        this.padAndOutput(`* The version you are trying to use was released on ${formattedReleaseDate}.`, ' ', '*');\n        this.padAndOutput('* Please contact info@ag-grid.com to renew your license key.', ' ', '*');\n        this.centerPadAndOutput('');\n        this.centerPadAndOutput('');\n\n        this.watermarkMessage = \"License Expired\";\n    }\n}\n", "import { Autowired, Component, PostConstruct, RefSelector } from '@ag-grid-community/core';\nimport { GridLicenseManager as LicenseManager } from './gridLicenseManager';\n\nexport class WatermarkComp extends Component {\n\n    @Autowired('licenseManager') licenseManager: LicenseManager;\n    @RefSelector('eLicenseTextRef') private eLicenseTextRef: HTMLElement;\n\n    constructor() {\n        super(/* html*/\n            `<div class=\"ag-watermark\">\n                <div ref=\"eLicenseTextRef\" class=\"ag-watermark-text\"></div>\n            </div>`\n        );\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        const show = this.shouldDisplayWatermark();\n        this.setDisplayed(show);\n\n        if (show) {\n            this.eLicenseTextRef.innerText = this.licenseManager.getWatermarkMessage();\n\n            window.setTimeout(() => this.addCssClass('ag-opacity-zero'), 0);\n            window.setTimeout(() => this.setDisplayed(false), 5000);\n        }\n    }\n\n    private shouldDisplayWatermark(): boolean {\n        return this.licenseManager.isDisplayWatermark();\n    }\n}\n", "// DO NOT UPDATE MANUALLY: Generated from script during build time\nexport const VERSION = '31.2.0';"],
  "mappings": "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",
  "names": ["import_core", "import_core"]
}
