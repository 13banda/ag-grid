{
    "api": {
        "setMiniFilter(newMiniFilter)": {
            "description": "Sets the filter at the top of the filter (the 'quick search' in the popup)."
        },
        "getMiniFilter()": {
            "description": "Gets the mini filter text."
        },
        "selectEverything()": {
            "description": "Selects everything."
        },
        "selectNothing()": {
            "description": "Clears the selection."
        },
        "isFilterActive()": {
            "description": "Returns <code>true</code> if anything except 'everything selected'."
        },
        "unselectValue(value)": {
            "description": "Unselects a value."
        },
        "selectValue(value)": {
            "description": "Selects a value."
        },
        "isValueSelected(value)": {
            "description": "Returns <code>true</code> if a value is selected."
        },
        "isEverythingSelected()": {
            "description": "Returns <code>true</code> if everything selected (inverse of <code>isFilterActive()</code>)."
        },
        "isNothingSelected()": {
            "description": "Returns <code>true</code> if nothing is selected."
        },
        "getUniqueValueCount()": {
            "description": "Returns number of unique values. Useful for iterating with <code>getUniqueValue(index)</code>."
        },
        "getUniqueValue(index)": {
            "description": "Returns the unique value at the given <code>index</code>."
        },
        "setFilterValues(arrayOfStringOptions)": {
            "description": "Useful if you want to change the available options on the fly."
        },
        "resetFilterValues()": {
            "description": "Configures the set filter to use values from the grid, rather than any values that have been provided directly to the filter. Useful if you want to rebuild the filter options based on the underlying data."
        },
        "refreshFilterValues()": {
            "description": "Refreshes the values shown in the filter from the original source. For example, if a callback was provided, the callback will be executed again and the filter will refresh using the values returned.",
            "more": {
                "name": "Refreshing Values",
                "url": "../javascript-grid-filter-set-filter-list/#refreshing-values"
            }
        },
        "setLoading(loading)": {
            "description": "Useful if you want to show/hide the loading overlay in the set filter."
        },
        "applyModel()": {
            "description": "Applies the model from the UI."
        }
    }
}