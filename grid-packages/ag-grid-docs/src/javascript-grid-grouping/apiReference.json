{
    "properties": {
        "meta": {
            "displayName": "Grid Grouping Properties",
            "description": "Grouping has the following grid properties (set these as grid properties, e.g. on <code>gridOptions</code>, not on the columns):"
        },
        "groupUseEntireRow": {
            "default": false,
            "description": "Should be set if grouping. If <code>true</code>, a group row will span all columns across the entire width of the table. If <code>false</code>, the cells will be rendered as normal and you will have the opportunity to include a grouping column (normally the first on the left) to show the group.",
            "example": {
                "name": "Full Width Group Rows",
                "url": "../javascript-grid-grouping/#fullWidthRows"
            }
        },
        "groupDefaultExpanded": {
            "default": 0,
            "description": "If grouping, set to the number of levels to expand by default, e.g. <code>0</code> for none, <code>1</code> for first level only, etc. Set to -1 to expand everything.",
            "example": {
                "name": "Removing Single Children",
                "url": "../javascript-grid-grouping/#removeSingleChildren"
            }
        },
        "autoGroupColumnDef": {
            "type": "ColumnDef",
            "description": "Allows specifying the group 'auto column' if you are not happy with the default. If grouping, this column def is included as the first column definition in the grid. If not grouping, this column is not included.",
            "example": {
                "name": "Configuring the Auto Group Column",
                "url": "../javascript-grid-grouping/#configuring-auto-column"
            }
        },
        "groupSuppressAutoColumn": {
            "default": false,
            "description": "If true, the grid will not swap in the grouping column when grouping is enabled. Use this if you want complete control on the column displayed and don't want the grid's help. In other words, you already have a column in your column definitions that is responsible for displaying the groups.",
            "example": {
                "name": "Configuring the Auto Group Column",
                "url": "../javascript-grid-grouping/#configuring-auto-column"
            }
        },
        "groupMultiAutoColumn": {
            "default": false,
            "description": "If using auto column, set to <code>true</code> to have each group in its own separate column, e.g. if grouping by Country then Year, two auto columns will be created, one for Country and one for Year.",
            "example": {
                "name": "Multi Auto Column Group",
                "url": "../javascript-grid-grouping/#multi-auto-column-group"
            }
        },
        "groupSuppressRow": {
            "default": false,
            "description": "If true, the group row won't be displayed and the groups will be expanded by default with no ability to expand / contract the groups. Useful when you want to just 'group' the rows, but not add a parent group row to each group.",
            "example": {
                "name": "Suppress Group Row",
                "url": "../javascript-grid-grouping/#suppress-group-row"
            }
        },
        "groupSelectsChildren": {
            "default": false,
            "description": "When true, if you select a group, the children of the group will also get selected.",
            "example": {
                "name": "Group Selection",
                "url": "../javascript-grid-selection/#groupSelection"
            }
        },
        "groupIncludeFooter": {
            "default": false,
            "description": "If grouping, whether to show a group footer when the group is expanded. If <code>true</code>, then by default,  the footer will contain aggregate data (if any) when shown and the header will be blank. When closed, the header will contain  the aggregate data regardless of this setting (as the footer is hidden anyway). This is handy for 'total' rows, that are  displayed below the data when the group is open, and alongside the group when it is closed",
            "example": {
                "name": "Grouping Footers",
                "url": "../javascript-grid-grouping/#grouping-footers"
            }
        },
        "groupIncludeTotalFooter": {
            "default": false,
            "description": "Set to <code>true</code> to show a 'grand' total group footer across all groups.",
            "example": {
                "name": "Grouping Footers",
                "url": "../javascript-grid-grouping/#grouping-footers"
            }
        },
        "groupSuppressBlankHeader": {
            "default": false,
            "description": "If true, and showing footer, aggregate data will be displayed at both the header and footer levels always. This  stops the possibly undesirable behaviour of the header details 'jumping' to the footer on expand."
        },
        "groupSelectsFiltered": {
            "default": false,
            "description": "If using <code>groupSelectsChildren</code>, then only the children that pass the current filter will get selected.",
            "example": {
                "name": "Group Selection",
                "url": "../javascript-grid-selection/#groupSelection"
            }
        },
        "groupRemoveSingleChildren": {
            "default": false,
            "description": "Set to <code>true</code> to collapse groups that only have one child.",
            "example": {
                "name": "Remove Single Children",
                "url": "../javascript-grid-grouping/#removeSingleChildren"
            }
        },
        "groupRemoveLowestSingleChildren": {
            "default": false,
            "description": "Set to <code>true</code> to collapse lowest level groups that only have one child.",
            "example": {
                "name": "Remove Single Children",
                "url": "../javascript-grid-grouping/#removeSingleChildren"
            }
        },
        "groupHideOpenParents": {
            "default": false,
            "description": "Set to <code>true</code> to hide parents that are open. When used with multiple columns for showing groups, it can give a more pleasing user experience.",
            "example": {
                "name": "Group Hide Open Parents",
                "url": "../javascript-grid-grouping/#replacingChildren"
            }
        },
        "rowGroupPanelShow": {
            "default": "never",
            "description": "When to show the 'row group panel' (where you drag rows to group) at the top. Set to either <code>'always'</code> or <code>'onlyWhenGrouping'</code>.",
            "example": {
                "name": "Tool Panel Example",
                "url": "../javascript-grid-tool-panel/#toolPanelExample"
            }
        }
    },
    "callbacks": {
        "meta": {
            "displayName": "Grid Grouping Callbacks"
        },
        "groupRowRenderer, groupRowRendererParams": {
            "description": "If grouping, allows custom rendering of the group cell. Use this if you are not happy with the default presentation of the group. This is only used when <code>groupUseEntireRow</code> is <code>true</code>. This gives you full control of the row, so the grid will not provide any default expand / collapse or selection checkbox. See section on cellRendering for details on params."
        },
        "groupRowInnerRenderer": {
            "description": "Similar to <code>groupRowRenderer</code>, except the grid will provide a default shell for row which includes an expand / collapse function. The <code>innerRenderer</code> is responsible for just the inside part of the row. There is no  <code>groupRowInnerRendererParams</code> as the <code>groupRowRendererParams</code> are reused for both."
        }
    }
}