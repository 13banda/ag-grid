{
    "rowNodeMethods": {
        "meta": {
            "displayName": "Row Node Methods"
        },
        "setSelected": {
            "description": "Select (or deselect) the node. <code>newValue=true</code> for selection, <code>newValue=false</code> for deselection. If selecting, then passing <code>true</code> for <code>clearSelection</code> will select the node exclusively (i.e. NOT do multi select). If doing deselection, <code>clearSelection</code> has no impact."
        },
        "isSelected": {
            "description": "Returns <code>true</code> if node is selected, <code>false</code> if the not isn't selected or `undefined` if it's partially selected (group where not all children are selected)."
        },
        "addEventListener": {
            "description": "Add an event listener. Currently only <code>rowSelected</code> event supported."
        },
        "removeEventListener": {
            "description": "Remove event listener."
        },
        "resetQuickFilterAggregateText": {
            "description": "The first time <code>quickFilter</code> runs, the grid creates a one-off string representation of the row. This string is then used for the quick filter instead of hitting each column separately. When you edit, using grid editing, this string gets cleared down. However if you edit without using grid editing, you will need to clear this string down for the row to be updated with the new values. Otherwise new values will not work with the <code>quickFilter</code>."
        },
        "depthFirstSearch": {
            "description": "Perform a depth-first search of this node and its children."
        },
        "setRowHeight": {
            "description": "Sets the row height. Call if you want to change the height initially assigned to the row. After calling, you must call <code>api.onRowHeightChanged()</code> so the grid knows it needs to work out the placement of the rows."
        },
        "setData": {
            "description": "Sets the data for this item. Results in the entire row getting refreshed."
        }
    }
}