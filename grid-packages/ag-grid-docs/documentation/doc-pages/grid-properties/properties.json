{
    "_config_": {
        "codeSrc": "grid-api/grid-options.AUTO.json"
    },
    "columns": {
        "meta": {
            "displayName": "Column Definitions",
            "description": "See [Column](/column-definitions/) / [Column Group](/column-groups/) definitions for more information"
        },
        "columnDefs": {
            "description": "Array of Column / Column Group definitions."
        },
        "defaultColDef": {
            "description": "A [default column definition](/column-definitions/#default-column-definitions)."
        },
        "defaultColGroupDef": {
            "description": "A [default column group definition](/column-definitions/#default-column-definitions). All column group definitions will use these properties. Items defined in the actual column group definition get precedence."
        },
        "columnTypes": {
            "description": "An object map of [custom column types](/column-definitions/#default-column-definitions) which contain groups of properties that column definitions can inherit."
        },
        "maintainColumnOrder": {
            "default": false,
            "description": "Keeps the order of Columns maintained after new Column Definitions are updated.",
            "more": {
                "name": "Maintain Column Order",
                "url": "/column-updating-definitions/#maintain-column-order"
            }
        },
        "suppressFieldDotNotation": {
            "default": false,
            "description": "If `true`, then dots in field names (e.g. `address.firstline`) are not treated as deep references. Allows you to use dots in your field name if you prefer."
        }
    },
    "columnMoving": {
        "meta": {
            "displayName": "Column Moving",
            "page": {
                "name": "Column Moving",
                "url": "/column-moving/"
            }
        },
        "allowDragFromColumnsToolPanel": {
            "default": false,
            "description": "Allow reordering and pinning columns by dragging columns from the [Columns Tool Panel](/tool-panel-columns/) to the grid."
        },
        "suppressMovableColumns": {
            "default": false,
            "description": "Set to `true` to suppress column moving, i.e. to make the columns fixed position."
        },
        "suppressColumnMoveAnimation": {
            "default": false,
            "description": "If `true`, the `ag-column-moving` class is not added to the grid while columns are moving. In the default [themes](/themes/), this results in no animation when moving columns."
        },
        "suppressDragLeaveHidesColumns": {
            "default": false,
            "description": "If `true`, when you drag a column out of the grid (e.g. to the group zone) the column is not hidden."
        }
    },
    "columnSizing": {
        "meta": {
            "displayName": "Column Sizing",
            "page": {
                "name": "Column Sizing",
                "url": "/column-sizing/"
            }
        },
        "colResizeDefault": {
            "description": "Set to `'shift'` to have shift-resize as the default resize operation (same as user holding down <kbd>Shift</kbd> while resizing).",
            "options": [
                "shift"
            ]
        },
        "suppressAutoSize": {
            "default": false,
            "description": "Suppresses [auto-sizing columns](/column-sizing/#auto-size-columns) for columns. In other words, double clicking a column's header's edge will not auto-size."
        },
        "autoSizePadding": {
            "default": 4,
            "description": "Number of pixels to add to a column width after the [auto-sizing](/column-sizing/#auto-size-columns) calculation. Set this if you want to add extra room to accommodate (for example) sort icons, or some other dynamic nature of the header."
        },
        "skipHeaderOnAutoSize": {
            "default": false,
            "description": "Set this to `true` to skip the `headerName` when `autoSize` is called by default.",
            "more": {
                "name": "Resizing Example",
                "url": "/column-sizing/#resizing-example"
            }
        }
    },
    "sort": {
        "meta": {
            "displayName": "Sorting",
            "page": {
                "name": "Row Sorting",
                "url": "/row-sorting/"
            }
        },
        "sortingOrder": {
            "description": "Array defining the order in which sorting occurs (if sorting is enabled). Values can be `'asc'`, `'desc'` or `null`. For example: `sortingOrder: ['asc', 'desc']`.",
            "default": [
                null,
                "asc",
                "desc"
            ],
            "more": {
                "name": "Example Sorting Order and Animation",
                "url": "/row-sorting/#example-sorting-order-and-animation"
            }
        },
        "accentedSort": {
            "default": false,
            "description": "Set to `true` to specify that the sort should take accented characters into account. If this feature is turned on the sort will be slower.",
            "more": {
                "name": "Accented Sort",
                "url": "/row-sorting/#accented-sort"
            }
        },
        "unSortIcon": {
            "default": false,
            "description": "Set to `true` to show the 'no sort' icon.",
            "more": {
                "name": "Example Custom Sorting",
                "url": "/row-sorting/#example-custom-sorting"
            }
        },
        "suppressMultiSort": {
            "default": false,
            "description": "Set to `true` to suppress multi-sort when the user shift-clicks a column header."
        },
        "multiSortKey": {
            "description": "Set to `'ctrl'` to have multi sorting work using the <kbd>Ctrl</kbd> (or <kbd>Command âŒ˜</kbd> for Mac) key.",
            "options": [
                "ctrl"
            ],
            "more": {
                "name": "Multi Column Sorting",
                "url": "/row-sorting/#multi-column-sorting"
            }
        },
        "suppressMaintainUnsortedOrder": {
            "default": false,
            "description": "Set to `true` to suppress sorting of un-sorted data to match original row data.",
            "more": {
                "name": "Big Data Small Transactions",
                "url": "/immutable-data/"
            }
        }
    },
    "filter": {
        "meta": {
            "displayName": "Filtering",
            "page": {
                "name": "Filtering",
                "url": "/filtering-overview/"
            }
        },
        "quickFilterText": {
            "description": "Rows are filtered using this text as a quick filter.",
            "more": {
                "name": "Quick Filter",
                "url": "/filter-quick/"
            }
        },
        "cacheQuickFilter": {
            "default": false,
            "description": "Set to `true` to turn on the quick filter cache, used to improve performance when using the quick filter.",
            "more": {
                "name": "Quick Filter Cache",
                "url": "/filter-quick/#quick-filter-cache"
            }
        },
        "excludeChildrenWhenTreeDataFiltering": {
            "default": false,
            "description": "Set to `true` to override the default tree data filtering behaviour to instead exclude child nodes from filter results.",
            "more": {
                "name": "Tree Data Filtering",
                "url": "/tree-data/#tree-data-filtering"
            }
        }
    },
    "selection": {
        "meta": {
            "displayName": "Selection",
            "page": {
                "name": "Selection Overview",
                "url": "/selection-overview/"
            }
        },
        "rowSelection": {
            "options": [
                "single",
                "multiple"
            ],
            "description": "Type of [Row Selection](/row-selection/)."
        },
        "rowMultiSelectWithClick": {
            "default": false,
            "description": "Set to `true` to allow multiple rows to be selected using single click.",
            "more": {
                "name": "Multi Select Single Click",
                "url": "/row-selection/#example-multi-select-with-click"
            }
        },
        "suppressRowDeselection": {
            "default": false,
            "description": "If `true`, rows will not be deselected if you hold down <kbd>Ctrl</kbd> and click the row or press <kbd>Space</kbd>."
        },
        "suppressRowClickSelection": {
            "default": false,
            "description": "If `true`, [row selection](/row-selection/) won't happen when rows are clicked. Use when you only want checkbox selection."
        },
        "suppressCellSelection": {
            "default": false,
            "description": "If `true`, cells won't be selectable. This means cells will not get keyboard focus when you click on them."
        },
        "enableRangeSelection": {
            "default": false,
            "description": "Set to `true` to enable [Range Selection](/range-selection/)."
        },
        "enableRangeHandle": {
            "default": false,
            "description": "Set to `true` to enable the [Range Handle](/range-selection-handle/)."
        },
        "enableFillHandle": {
            "default": false,
            "description": "Set to `true` to enable the [Fill Handle](/range-selection-fill-handle/)"
        },
        "fillHandleDirection": {
            "default": "xy",
            "description": "Set to `'x'` to force the fill handle direction to horizontal, or set to `'y'` to force the fill handle direction to vertical.",
            "options": [
                "x",
                "y",
                "xy"
            ]
        },
        "suppressClearOnFillReduction": {
            "default": false,
            "description": "Set this to `true` to prevent cell values from being cleared when the Range Selection is reduced by the Fill Handle."
        }
    },
    "rowDragging": {
        "meta": {
            "displayName": "Row Drag and Drop",
            "page": {
                "name": "Row Dragging",
                "url": "/row-dragging/"
            }
        },
        "rowDragManaged": {
            "default": false,
            "description": "Set to `true` to enable [Managed Row Dragging](/row-dragging/#managed-dragging)."
        },
        "suppressRowDrag": {
            "default": false,
            "description": "Set to `true` to suppress row dragging."
        },
        "suppressMoveWhenRowDragging": {
            "default": false,
            "description": "Set to `true` to suppress moving rows while dragging the `rowDrag` waffle. This option highlights the position where the row will be placed and it will only move the row on mouse up."
        }
    },
    "editing": {
        "meta": {
            "displayName": "Editing",
            "page": {
                "name": "Cell Editing",
                "url": "/cell-editing/"
            }
        },
        "editType": {
            "description": "Set to `'fullRow'` to enable [Full Row Editing](/cell-editing/#full-row-editing). Otherwise leave blank to edit one cell at a time.",
            "options": [
                "fullRow"
            ]
        },
        "singleClickEdit": {
            "default": false,
            "description": "Set to `true` to enable [Single Click Editing](/cell-editing/#single-click-editing) for cells, to start editing with a single click."
        },
        "suppressClickEdit": {
            "default": false,
            "description": "Set to `true` so that neither single nor double click starts editing.",
            "more": {
                "name": "Single Click, Double Click, No Click Editing",
                "url": "/cell-editing/#single-click-double-click-no-click-editing"
            }
        },
        "stopEditingWhenCellsLoseFocus": {
            "default": false,
            "description": "Set this to `true` to [stop cell editing when grid loses focus](/cell-editing/#stop-editing-when-grid-loses-focus). The default is that the grid stays editing until focus goes onto another cell. For inline (non-popup) editors only."
        },
        "enterMovesDown": {
            "default": false,
            "description": "Set to `true` along with `enterMovesDownAfterEdit` to have Excel-style behaviour for the <kbd>Enter</kbd> key, i.e. pressing the <kbd>Enter</kbd> key will move down to the cell beneath [as described here](/cell-editing/#enter-key-navigation)."
        },
        "enterMovesDownAfterEdit": {
            "default": false,
            "description": "Set to `true` along with `enterMovesDown` to have Excel-style behaviour for the <kbd>Enter</kbd> key, i.e. pressing the <kbd>Enter</kbd> key will move down to the cell beneath [as described here](/cell-editing/#enter-key-navigation)."
        }
    },
    "headers": {
        "meta": {
            "displayName": "Column Headers",
            "page": {
                "name": "Column Headers",
                "url": "/column-headers/"
            }
        },
        "headerHeight": {
            "default": 25,
            "description": "The height in pixels for the row containing the column label header."
        },
        "groupHeaderHeight": {
            "description": "The height in pixels for the rows containing header column groups. If not specified, it uses `headerHeight`."
        },
        "floatingFiltersHeight": {
            "default": 20,
            "description": "The height in pixels for the row containing the floating filters."
        },
        "pivotHeaderHeight": {
            "description": "The height in pixels for the row containing the columns when in pivot mode. If not specified, it uses `headerHeight`."
        },
        "pivotGroupHeaderHeight": {
            "description": "The height in pixels for the row containing header column groups when in pivot mode. If not specified, it uses `groupHeaderHeight`."
        }
    },
    "rowGrouping": {
        "meta": {
            "displayName": "Row Grouping",
            "page": {
                "name": "Row Grouping",
                "url": "/grouping/"
            }
        },
        "groupDisplayType": {
            "description": "Specifies how the results of row grouping should be displayed. The options are: <ul><li>`'singleColumn'`: single group column automatically added by the grid.</li><li>`'multipleColumns'`: a group column per row group is added automatically.</li><li>`'groupRows'`: group rows are automatically added instead of group columns.</li><li>`'custom'`: informs the grid that group columns will be provided.</li></ul>",
            "more": {
                "name": "Row Grouping - Display Types",
                "url": "/grouping-display-types/"
            }
        },
        "groupDefaultExpanded": {
            "default": 0,
            "description": "If grouping, set to the number of levels to expand by default, e.g. `0` for none, `1` for first level only, etc. Set to `-1` to expand everything.",
            "more": {
                "name": "Opening Group Levels by Default",
                "url": "/grouping-opening-groups/#opening-group-levels-by-default"
            }
        },
        "autoGroupColumnDef": {
            "description": "Allows specifying the group 'auto column' if you are not happy with the default. If grouping, this column definition is included as the first column in the grid. If not grouping, this column is not included.",
            "more": {
                "name": "Group Column Configuration",
                "url": "/grouping-single-group-column/#group-column-configuration"
            }
        },
        "groupSelectsChildren": {
            "default": false,
            "description": "When `true`, if you select a group, the children of the group will also be selected.",
            "more": {
                "name": "Group Selection",
                "url": "/row-selection/#group-selection"
            }
        },
        "groupIncludeFooter": {
            "default": false,
            "description": "If grouping, this controls whether to show a group footer when the group is expanded. If `true`, then by default, the footer will contain aggregate data (if any) when shown and the header will be blank. When closed, the header will contain the aggregate data regardless of this setting (as the footer is hidden anyway). This is handy for 'total' rows, that are displayed below the data when the group is open, and alongside the group when it is closed.",
            "more": {
                "name": "Enabling Group Footers",
                "url": "/grouping-footers/#enabling-group-footers"
            }
        },
        "groupIncludeTotalFooter": {
            "default": false,
            "description": "Set to `true` to show a 'grand total' group footer across all groups.",
            "more": {
                "name": "Enabling Group Footers",
                "url": "/grouping-footers/#enabling-group-footers"
            }
        },
        "groupSuppressBlankHeader": {
            "default": false,
            "description": "If `true`, and showing footer, aggregate data will always be displayed at both the header and footer levels. This stops the possibly undesirable behaviour of the header details 'jumping' to the footer on expand."
        },
        "groupSelectsFiltered": {
            "default": false,
            "description": "If using `groupSelectsChildren`, then only the children that pass the current filter will get selected.",
            "more": {
                "name": "Group Selection",
                "url": "/row-selection/#group-selection"
            }
        },
        "showOpenedGroup": {
            "default": false,
            "description": "Shows the open group in the group column for non-group rows.",
            "more": {
                "name": "Showing Open Groups",
                "url": "/grouping-single-group-column/#showing-open-groups"
            }
        },
        "groupRemoveSingleChildren": {
            "default": false,
            "description": "Set to `true` to collapse groups that only have one child.",
            "more": {
                "name": "Remove Single Children",
                "url": "/grouping-single-group-column/#removing-single-children"
            }
        },
        "groupRemoveLowestSingleChildren": {
            "default": false,
            "description": "Set to `true` to collapse lowest level groups that only have one child.",
            "more": {
                "name": "Remove Single Children",
                "url": "/grouping-single-group-column/#removing-single-children"
            }
        },
        "groupHideOpenParents": {
            "default": false,
            "description": "Set to `true` to hide parents that are open. When used with multiple columns for showing groups, it can give a more pleasing user experience.",
            "more": {
                "name": "Hide Open Parents",
                "url": "/grouping-multiple-group-columns/#hide-open-parents"
            }
        },
        "rowGroupPanelShow": {
            "default": "never",
            "options": [
                "never",
                "always",
                "onlyWhenGrouping"
            ],
            "description": "When to show the 'row group panel' (where you drag rows to group) at the top.",
            "more": {
                "name": "Enabling Row Group Panel",
                "url": "/grouping-group-panel/#enabling-row-group-panel"
            }
        },
        "groupRowRenderer": {
            "description": "Sets the [Cell Renderer](/component-cell-renderer/) to use when `groupDisplayType = 'groupRows'`.",
            "interfaceHierarchyOverrides": {
                "exclude": [
                    "ICellRendererComp"
                ],
                "include": []
            }
        },
        "groupRowRendererFramework": {
            "description": "Same as `groupRowRenderer` but for a framework component."
        },
        "groupRowRendererParams": {
            "description": "Customise the parameters provided to the `groupRowRenderer` component."
        },
        "suppressDragLeaveHidesColumns": {
            "default": false,
            "description": "By default, dragging a column out of the grid, i.e. to the [Row Group Panel](/grouping-group-panel/), it will be hidden in the grid. This property prevents the column becoming hidden in the grid.",
            "more": {
                "name": "Keeping Columns Visible",
                "url": "/grouping-group-panel/#keeping-columns-visible"
            }
        },
        "suppressMakeColumnVisibleAfterUnGroup": {
            "default": false,
            "description": "By default, when a column is un-grouped, i.e. using the [Row Group Panel](/grouping-group-panel/), it is made visible in the grid. This property stops the column becoming visible again when un-grouping.",
            "more": {
                "name": "Keeping Columns Visible",
                "url": "/grouping-group-panel/#keeping-columns-visible"
            }
        },
        "treeData": {
            "description": "Set to `true` to enable the Grid to work with Tree Data. You must also implement the `getDataPath(data)` callback.",
            "more": {
                "name": "Tree Data",
                "url": "/tree-data/"
            }
        }
    },
    "rowPivoting": {
        "meta": {
            "displayName": "Pivot and Aggregation",
            "description": "See [Pivot](/pivoting/) and [Aggregation](/aggregation/) for more information"
        },
        "pivotMode": {
            "default": false,
            "description": "Set to `true` to enable pivot mode."
        },
        "pivotPanelShow": {
            "default": "never",
            "options": [
                "never",
                "always",
                "onlyWhenPivoting"
            ],
            "description": "When to show the 'pivot panel' (where you drag rows to pivot) at the top. Note that the pivot panel will never show if `pivotMode` is off."
        },
        "pivotColumnGroupTotals": {
            "options": [
                "before",
                "after"
            ],
            "description": "When set and the grid is in pivot mode, automatically calculated totals will appear within the Pivot Column Groups, in the position specified.",
            "more": {
                "name": "Pivot Column Group Totals",
                "url": "/pivoting/#pivot-column-group-totals"
            }
        },
        "pivotRowTotals": {
            "options": [
                "before",
                "after"
            ],
            "description": "When set and the grid is in pivot mode, automatically calculated totals will appear for each value column in the position specified.",
            "more": {
                "name": "Pivot Row Totals",
                "url": "/pivoting/#pivot-row-totals"
            }
        },
        "pivotSuppressAutoColumn": {
            "default": false,
            "description": "If `true`, the grid will not swap in the grouping column when pivoting. Useful if pivoting using [Server Side Row Model](/server-side-model/) or [Viewport Row Model](/viewport/) and you want full control of all columns including the group column."
        },
        "suppressExpandablePivotGroups": {
            "default": false,
            "description": "When enabled, pivot column groups will appear 'fixed', without the ability to expand and collapse the column groups.",
            "more": {
                "name": "Fixed Pivot Column Groups",
                "url": "/pivoting/#fixed-pivot-column-groups"
            }
        },
        "functionsReadOnly": {
            "default": false,
            "description": "If `true`, then row group, pivot and value aggregation will be read-only from the GUI. The grid will display what values are used for each, but will not allow the user to change the selection.",
            "more": {
                "name": "Read Only Functions",
                "url": "/tool-panel-columns/#read-only-functions"
            }
        },
        "aggFuncs": {
            "description": "A map of 'function name' to 'function' for custom aggregation functions.",
            "more": {
                "name": "Custom Aggregation Functions",
                "url": "/aggregation/#custom-aggregation-functions"
            }
        },
        "suppressAggFuncInHeader": {
            "default": false,
            "description": "When `true`, column headers won't include the `aggFunc` name, e.g. `'sum(Bank Balance)`' will just be `'Bank Balance'`."
        },
        "suppressAggAtRootLevel": {
            "default": false,
            "description": "When `true`, the aggregations won't be computed for the root node of the grid.",
            "more": {
                "name": "Big Data Small Transactions",
                "url": "/data-update-transactions/#example-small-changes-big-data"
            }
        },
        "aggregateOnlyChangedColumns": {
            "default": false,
            "description": "When using [change detection](/change-detection/#tree-path-selection), only the updated column will be re-aggregated."
        },
        "suppressAggFilteredOnly": {
            "default": false,
            "description": "Set to `true` so that aggregations are not impacted by filtering.",
            "more": {
                "name": "Custom Aggregation Functions",
                "url": "/aggregation/#filtering"
            }
        }
    },
    "rowPinning": {
        "meta": {
            "displayName": "Row Pinning",
            "page": {
                "name": "Row Pinning",
                "url": "/row-pinning/"
            }
        },
        "pinnedTopRowData": {
            "description": "Data to be displayed as pinned top rows in the grid."
        },
        "pinnedBottomRowData": {
            "description": "Data to be displayed as pinned bottom rows in the grid."
        }
    },
    "rowModels": {
        "meta": {
            "displayName": "RowModel",
            "page": {
                "name": "Row Model",
                "url": "/row-models/"
            }
        },
        "rowModelType": {
            "default": "clientSide",
            "options": [
                "clientSide",
                "infinite",
                "viewport",
                "serverSide"
            ],
            "description": "Sets the row model type."
        }
    },
    "clientRowModel": {
        "meta": {
            "displayName": "RowModel: Client-Side",
            "page": {
                "name": "Client-Side Row Model",
                "url": "/client-side-model/"
            }
        },
        "rowData": {
            "description": "Set the data to be displayed as rows in the grid."
        },
        "immutableData": {
            "default": false,
            "description": "Enables [Immutable Data](/immutable-data/) mode, for compatibility with immutable stores."
        },
        "asyncTransactionWaitMillis": {
            "description": "How many milliseconds to wait before executing a [batch of async transactions](/data-update-high-frequency/)."
        },
        "suppressModelUpdateAfterUpdateTransaction": {
            "default": false,
            "description": "Prevents [Transactions](/data-update-transactions/) changing sort, filter, group or pivot state when transaction only contains updates.",
            "more": {
                "name": "Suppress Model Updates",
                "url": "/data-update-transactions/#suppress-model-updates"
            }
        }
    },
    "serverSideRowModel": {
        "meta": {
            "displayName": "RowModel: Server-Side",
            "page": {
                "name": "Server-Side Row Model",
                "url": "/server-side-model/"
            }
        },
        "serverSideStoreType": {
            "description": "Whether to use Full Store or Partial Store for storing rows.",
            "default": "full",
            "more": {
                "name": "Row Stores",
                "url": "/server-side-model-row-stores/"
            }
        },
        "cacheBlockSize": {
            "default": 100,
            "description": "(Partial Store only) How many rows for each block in the store, i.e. how many rows returned from the server at a time."
        },
        "maxBlocksInCache": {
            "description": "(Partial Store only) How many blocks to keep in the store. Default is no limit, so every requested block is kept. Use this if you have memory concerns, and blocks that were least recently viewed will be purged when the limit is hit. The grid will additionally make sure it has all the blocks needed to display what is currently visible, in case this property is set to a low value."
        },
        "maxConcurrentDatasourceRequests": {
            "default": 1,
            "description": "How many requests to hit the server with concurrently. If the max is reached, requests are queued."
        },
        "blockLoadDebounceMillis": {
            "description": "How many milliseconds to wait before loading a block. Useful when scrolling over many rows, spanning many Partial Store blocks, as it prevents blocks loading until scrolling has settled."
        },
        "purgeClosedRowNodes": {
            "default": false,
            "description": "When enabled, closing group rows will remove children of that row. Next time the row is opened, child rows will be read from the datasource again. This property only applies when there is [Row Grouping](/server-side-model-grouping/)."
        },
        "serverSideSortingAlwaysResets": {
            "default": false,
            "description": "When enabled, always refreshes top level groups regardless of which column was sorted. This property only applies when there is [Row Grouping](/server-side-model-grouping/)."
        },
        "serverSideFilteringAlwaysResets": {
            "default": false,
            "description": "When enabled, always refreshes stores after filter has changed. Used by Full Store only, to allow Server-Side Filtering."
        }
    },
    "infiniteRowModel": {
        "meta": {
            "displayName": "RowModel: Infinite",
            "page": {
                "name": "Infinite Row Model",
                "url": "/infinite-scrolling/"
            }
        },
        "cacheOverflowSize": {
            "default": 1,
            "description": "How many extra blank rows to display to the user at the end of the dataset, which sets the vertical scroll and then allows the grid to request viewing more rows of data."
        },
        "maxConcurrentDatasourceRequests": {
            "default": 2,
            "description": "How many requests to hit the server with concurrently. If the max is reached, requests are queued."
        },
        "cacheBlockSize": {
            "default": 100,
            "description": "How many rows for each block in the store, i.e. how many rows returned from the server at a time."
        },
        "maxBlocksInCache": {
            "description": "How many blocks to keep in the store. Default is no limit, so every requested block is kept. Use this if you have memory concerns, and blocks that were least recently viewed will be purged when the limit is hit. The grid will additionally make sure it has all the blocks needed to display what is currently visible, in case this property is set to a low value."
        },
        "infiniteInitialRowCount": {
            "default": 1,
            "description": "How many extra blank rows to display to the user at the end of the dataset, which sets the vertical scroll and then allows the grid to request viewing more rows of data."
        }
    },
    "viewportRowModel": {
        "meta": {
            "displayName": "RowModel: Viewport",
            "page": {
                "name": "Viewport Row Model",
                "url": "/viewport-scrolling/"
            }
        },
        "viewportDatasource": {
            "description": "To use the viewport row model you need to provide the grid with a `viewportDatasource`.",
            "interfaceHierarchyOverrides": {
                "exclude": [],
                "include": [
                    "IViewportDatasourceParams"
                ]
            }
        },
        "viewportRowModelPageSize": {
            "description": "When using viewport row model, sets the page size for the viewport."
        },
        "viewportRowModelBufferSize": {
            "description": "When using viewport row model, sets the buffer size for the viewport."
        }
    },
    "scrolling": {
        "meta": {
            "displayName": "Scrolling",
            "page": {
                "name": "Scrolling",
                "url": "/scrolling-scenarios/"
            }
        },
        "alwaysShowHorizontalScroll": {
            "default": false,
            "description": "Set to `true` to always show the horizontal scrollbar."
        },
        "alwaysShowVerticalScroll": {
            "default": false,
            "description": "Set to `true` to always show the vertical scrollbar."
        },
        "debounceVerticalScrollbar": {
            "default": false,
            "description": "Set to `true` to debounce the vertical scrollbar. Can provide smoother scrolling on older browsers, e.g. Internet Explorer.",
            "more": {
                "name": "Debounce Vertical Scroll",
                "url": "/scrolling-performance/#8-debounce-vertical-scroll"
            }
        },
        "suppressHorizontalScroll": {
            "default": false,
            "description": "Set to `true` to never show the horizontal scroll. This is useful if the grid is aligned with another grid and will scroll when the other grid scrolls. (Should not be used in combination with `alwaysShowHorizontalScroll`.)",
            "more": {
                "name": "Aligned Grid as Footer",
                "url": "/aligned-grids/#example-aligned-floating-footer"
            }
        },
        "suppressColumnVirtualisation": {
            "default": false,
            "description": "Set to `true` so that the grid doesn't virtualise the columns. For example, if you have 100 columns, but only 10 visible due to scrolling, all 100 will always be rendered."
        },
        "suppressRowVirtualisation": {
            "strikeThrough": true,
            "type": "never",
            "description": "There is no such property as `suppressRowVirtualisation` - if you want to do this, then set the `rowBuffer` property to be very large, e.g. `9999`. **Warning: rendering lots of rows will mean a very large amount of rendering in the DOM which will slow things down.**"
        },
        "suppressMaxRenderedRowRestriction": {
            "default": false,
            "description": "By default the grid has a limit of rendering a maximum of 500 rows at once (remember the grid only renders rows you can see, so unless your display shows more than 500 rows without vertically scrolling this will never be an issue).<br />**This is only relevant if you are manually setting `rowBuffer` to a high value (rendering more rows than can be seen) or if your grid height is able to display more than 500 rows at once.**"
        },
        "suppressScrollOnNewData": {
            "default": false,
            "description": "When `true`, the grid will not scroll to the top when new row data is provided. Use this if you don't want the default behaviour of scrolling to the top every time you load new data."
        },
        "suppressAnimationFrame": {
            "default": false,
            "description": "When `true`, the grid will not use animation frames when drawing rows while scrolling. Use this if the grid is working fast enough that you don't need animation frames and you don't want the grid to flicker."
        },
        "suppressMiddleClickScrolls": {
            "default": false,
            "description": "If `true`, middle clicks will result in `click` events for cells and rows. Otherwise the browser will use middle click to scroll the grid.<br />**Note:** Not all browsers fire `click` events with the middle button. Most will fire only `mousedown` and `mouseup` events, which can be used to focus a cell, but will not work to call the `onCellClicked` function."
        },
        "suppressPreventDefaultOnMouseWheel": {
            "default": false,
            "description": "If `true`, mouse wheel events will be passed to the browser. Useful if your grid has no vertical scrolls and you want the mouse to scroll the browser page."
        }
    },
    "pagination": {
        "meta": {
            "displayName": "Pagination",
            "page": {
                "name": "Row Pagination",
                "url": "/row-pagination"
            }
        },
        "pagination": {
            "default": false,
            "description": "Set whether pagination is enabled."
        },
        "paginationPageSize": {
            "default": 100,
            "description": "How many rows to load per page. If `paginationAutoPageSize` is specified, this property is ignored.",
            "more": {
                "name": "Customising Pagination",
                "url": "/row-pagination/#example-customising-pagination"
            }
        },
        "paginationAutoPageSize": {
            "default": false,
            "description": "Set to `true` so that the number of rows to load per page is automatically adjusted by the grid so each page shows enough rows to just fill the area designated for the grid. If `false`, `paginationPageSize` is used.",
            "more": {
                "name": "Auto Page Size",
                "url": "/row-pagination/#example-auto-page-size"
            }
        },
        "paginateChildRows": {
            "default": false,
            "description": "Set to `true` to have pages split children of groups when using Row Grouping or detail rows with Master Detail.",
            "more": {
                "name": "Pagination & Child Rows",
                "url": "/row-pagination/#pagination--child-rows"
            }
        },
        "suppressPaginationPanel": {
            "default": false,
            "description": "If `true`, the default grid controls for navigation are hidden. This is useful if `pagination=true` and you want to provide your own pagination controls. Otherwise, when `pagination=true` the grid automatically shows the necessary controls at the bottom so that the user can navigate through the different pages.",
            "more": {
                "name": "Custom Pagination Controls",
                "url": "/row-pagination/#example-customising-pagination"
            }
        }
    },
    "fullWidth": {
        "meta": {
            "displayName": "Row Full Width",
            "page": {
                "name": "Full Width Rows",
                "url": "/full-width-rows/"
            }
        },
        "fullWidthCellRenderer": {
            "description": "Sets the [Cell Renderer](/component-cell-renderer/) to use for full width rows.",
            "interfaceHierarchyOverrides": {
                "exclude": [
                    "ICellRendererComp"
                ],
                "include": []
            }
        },
        "fullWidthCellRendererFramework": {
            "description": "Same as `fullWidthCellRenderer` but for a framework component."
        },
        "fullWidthCellRendererParams": {
            "description": "Customise the parameters provided to the `fullWidthCellRenderer` component."
        }
    },
    "masterDetail": {
        "meta": {
            "displayName": "Master Detail",
            "page": {
                "name": "Master Detail",
                "url": "/mater-detail/"
            }
        },
        "masterDetail": {
            "default": false,
            "description": "Set to `true` to enable Master Detail."
        },
        "detailCellRendererParams": {
            "description": "Specifies the params to be used by the default detail [Cell Renderer](/component-cell-renderer/).",
            "more": {
                "name": "Detail Grids",
                "url": "/master-detail-grids/"
            }
        },
        "detailRowHeight": {
            "description": "Set fixed height in pixels for each detail row."
        },
        "keepDetailRows": {
            "default": false,
            "description": "Set to `true` to keep detail rows for when they are displayed again."
        },
        "keepDetailRowsCount": {
            "default": 10,
            "description": "Sets the number of details rows to keep."
        }
    },
    "rendering": {
        "meta": {
            "displayName": "Rendering"
        },
        "animateRows": {
            "default": false,
            "description": "Set to `true` to enable [Row Animation](/row-animation/)."
        },
        "enableCellChangeFlash": {
            "default": false,
            "description": "Set to `true` to have cells flash after data changes.",
            "more": {
                "name": "Flashing Data Changes",
                "url": "/flashing-cells/"
            }
        },
        "cellFlashDelay": {
            "default": 500,
            "description": "To be used in combination with `enableCellChangeFlash`, this configuration will set the delay in milliseconds of how long a cell should remain in its \"flashed\" state."
        },
        "cellFadeDelay": {
            "default": 1000,
            "description": "To be used in combination with `enableCellChangeFlash`, this configuration will set the delay in milliseconds of how long the \"flashed\" state animation takes to fade away after the timer set by `cellFlashDelay` has completed."
        },
        "allowShowChangeAfterFilter": {
            "default": false,
            "description": "Set to `true` to have cells flash after data changes even when the change is due to filtering.",
            "more": {
                "name": "Flashing Data Changes",
                "url": "/flashing-cells/"
            }
        },
        "domLayout": {
            "default": "normal",
            "options": [
                "normal",
                "autoHeight",
                "print"
            ],
            "description": "Switch between layout options. See [Printing](/printing/) and [Auto Height](/grid-size/#grid-auto-height)."
        },
        "ensureDomOrder": {
            "default": false,
            "description": "When `true`, the order of rows and columns in the DOM are consistent with what is on screen.",
            "more": {
                "name": "Accessibility - Row and Column Order",
                "url": "/accessibility/#ensure-dom-element-order"
            }
        },
        "layoutInterval": {
            "default": 500,
            "description": "The interval in milliseconds that the grid uses to periodically check its size and lay itself out again if the size has changed, such as when your browser changes size, or your application changes the size of the `div` element that the grid lives inside. To stop the periodic layout, set it to `-1`."
        },
        "enableRtl": {
            "default": false,
            "description": "Set to `true` to operate the grid in [RTL (Right to Left)](/rtl/) mode."
        }
    },
    "styling": {
        "meta": {
            "displayName": "Styling"
        },
        "icons": {
            "description": "[Icons](/custom-icons/) to use inside the grid instead of the grid's default icons.",
            "more": {
                "name": "Custom Icons",
                "url": "/custom-icons/#set-the-icons-through-gridoptions-javascript"
            }
        },
        "rowHeight": {
            "default": 25,
            "description": "Default row height in pixels.",
            "more": {
                "name": "Row Height",
                "url": "/row-height/"
            }
        },
        "rowStyle": {
            "description": "The style properties to apply to all rows. Set to an object of key (style names) and values (style values)",
            "more": {
                "name": "Row Style",
                "url": "/row-styles/#row-style"
            }
        },
        "rowClass": {
            "description": "CSS class(es) for all rows. Provide either a string (class name) or array of strings (array of class names).",
            "more": {
                "name": "Row Class",
                "url": "/row-styles/#row-class"
            }
        },
        "rowClassRules": {
            "description": "Rules which can be applied to include certain CSS classes.",
            "more": {
                "name": "Row Class Rules",
                "url": "/row-styles/#row-class-rules"
            }
        },
        "suppressRowHoverHighlight": {
            "default": false,
            "description": "Set to `true` to not highlight rows by adding the `ag-row-hover` CSS class."
        },
        "suppressRowTransform": {
            "default": false,
            "description": "Uses CSS `top` instead of CSS `transform` for positioning rows. Useful if the transform function is causing issues such as used in [row spanning](/row-spanning/)."
        },
        "columnHoverHighlight": {
            "default": false,
            "description": "Set to `true` to highlight columns by adding the `ag-column-hover` CSS class."
        },
        "scrollbarWidth": {
            "description": "Tell the grid how wide in pixels the scrollbar is, which is used in grid width calculations. Set only if using non-standard browser-provided scrollbars, so the grid can use the non-standard size in its calculations."
        }
    },
    "clipboard": {
        "meta": {
            "displayName": "Clipboard",
            "page": {
                "name": "Clipboard",
                "url": "/clipboard/"
            }
        },
        "copyHeadersToClipboard": {
            "default": false,
            "description": "Set to `true` to also include headers when copying to clipboard using <kbd>Ctrl</kbd>+<kbd>C</kbd> clipboard."
        },
        "clipboardDeliminator": {
            "description": "Specify the deliminator to use when copying to clipboard."
        },
        "enableCellTextSelection": {
            "default": false,
            "description": "Set to `true` to be able to select the text within cells.<br />**Note:** When this is set to `true`, the clipboard service is disabled."
        },
        "suppressCopyRowsToClipboard": {
            "default": false,
            "description": "Set to `true` to only have the range selection, and not row selection, copied to clipboard."
        },
        "suppressLastEmptyLineOnPaste": {
            "default": false,
            "description": "Set to `true` to work around a bug with Excel (Windows) that adds an extra empty line at the end of ranges copied to the clipboard."
        }
    },
    "localisation": {
        "meta": {
            "displayName": "Localisation",
            "page": {
                "name": "Localisation",
                "url": "/localisation/"
            }
        },
        "localeText": {
            "description": "A map of key->value pairs for localising text within the grid."
        },
        "localeTextFunc": {
            "description": "A callback for localising text within the grid."
        }
    },
    "loading": {
        "meta": {
            "displayName": "Loading Cell Renderers",
            "page": {
                "name": "loadingCellRenderer",
                "url": "/component-loading-cell-renderer/"
            }
        },
        "loadingCellRenderer": {
            "description": "`cellRenderer` to use when data is loading via a DataSource.",
            "more": {
                "name": "Loading Cell Renderer",
                "url": "/component-loading-cell-renderer/"
            }
        },
        "loadingCellRendererFramework": {
            "description": "Framework `cellRenderer` to use when data is loading via a DataSource.",
            "more": {
                "name": "Loading Cell Renderer",
                "url": "/component-loading-cell-renderer/"
            }
        },
        "loadingCellRendererParams": {
            "description": "Params to be passed to loading cell renderer component.",
            "more": {
                "name": "Cell Renderer Params",
                "url": "/component-loading-cell-renderer/"
            }
        },
        "loadingCellRendererSelector": {
            "description": "Callback to select which loading cell renderer to be used when data is loading via a DataSource.",
            "more": {
                "name": "Loading Cell Renderer Selector",
                "url": "/component-loading-cell-renderer/"
            }
        }
    },
    "overlays": {
        "meta": {
            "displayName": "Overlays",
            "page": {
                "name": "Overlays",
                "url": "/overlays/"
            }
        },
        "overlayLoadingTemplate": {
            "description": "Provide a template for 'loading' overlay."
        },
        "loadingOverlayComponent": {
            "description": "Provide a custom [loading overlay component](/component-overlay/#loading-rows-overlay-interface).",
            "interfaceHierarchyOverrides": {
                "exclude": [
                    "ILoadingOverlayComp"
                ],
                "include": []
            }
        },
        "loadingOverlayComponentFramework": {
            "description": "Same as `loadingOverlayComponent` but for a framework component."
        },
        "loadingOverlayComponentParams": {
            "description": "Customise the parameters provided to the loading overlay component."
        },
        "suppressLoadingOverlay": {
            "default": false,
            "description": "Disables the 'loading' overlay."
        },
        "overlayNoRowsTemplate": {
            "description": "Provide a template for 'no rows' overlay."
        },
        "noRowsOverlayComponent": {
            "description": "Provide a custom [no rows overlay component](/component-overlay/#no-rows-overlay-interface).",
            "interfaceHierarchyOverrides": {
                "exclude": [
                    "INoRowsOverlayComp"
                ],
                "include": []
            }
        },
        "noRowsOverlayComponentFramework": {
            "description": "Same as `noRowsOverlayComponent` but for a framework component."
        },
        "noRowsOverlayComponentParams": {
            "description": "Customise the parameters provided to the no rows overlay component."
        },
        "suppressNoRowsOverlay": {
            "default": false,
            "description": "Disables the 'no rows' overlay."
        }
    },
    "charts": {
        "meta": {
            "displayName": "Integrated Charts",
            "page": {
                "name": "Integrated Charts",
                "url": "/integrated-charts/"
            }
        },
        "enableCharts": {
            "default": false,
            "description": "Set to `true` to [Enable Charts](/integrated-charts/#enabling-charts)."
        },
        "chartThemes": {
            "default": [
                "ag-default",
                "ag-material",
                "ag-pastel",
                "ag-vivid",
                "ag-solar"
            ],
            "description": "The list of chart themes to be used.",
            "more": {
                "name": "Chart Themes",
                "url": "/integrated-charts-customisation/#provided-themes"
            }
        },
        "customChartThemes": {
            "description": "A map containing custom chart themes.",
            "more": {
                "name": "Custom Chart Themes",
                "url": "/integrated-charts-customisation/#custom-chart-themes"
            }
        },
        "chartThemeOverrides": {
            "description": "Chart theme overrides applied to all themes, see [Overriding Existing Themes](/integrated-charts-customisation/#overriding-existing-themes)."
        }
    },
    "components": {
        "meta": {
            "displayName": "Components",
            "page": {
                "name": "Components",
                "url": "/components/"
            }
        },
        "components": {
            "description": "A map of component names to plain JavaScript components."
        },
        "frameworkComponents": {
            "description": "A map of component names to framework (React, Angular, etc.) components."
        }
    },
    "accessories": {
        "meta": {
            "displayName": "Accessories"
        },
        "statusBar": {
            "description": "Specifies the status bar components to use in the status bar.",
            "more": {
                "name": "Status Bar",
                "url": "/status-bar/"
            },
            "interfaceHierarchyOverrides": {
                "exclude": [
                    "IStatusPanelComp"
                ],
                "include": []
            }
        },
        "sideBar": {
            "description": "Specifies the side bar components.",
            "more": {
                "name": "Side Bar",
                "url": "/side-bar/"
            },
            "interfaceHierarchyOverrides": {
                "exclude": [
                    "IToolPanelComp"
                ],
                "include": []
            }
        },
        "suppressContextMenu": {
            "default": false,
            "description": "Set to `true` to not show the context menu. Use if you don't want to use the default 'right click' context menu.",
            "more": {
                "name": "Context Menu",
                "url": "/context-menu/"
            }
        },
        "preventDefaultOnContextMenu": {
            "default": false,
            "description": "When using `suppressContextMenu`, you can use the `onCellContextMenu` function to provide your own code to handle cell `contextmenu` events. This flag is useful to prevent the browser from showing its default context menu."
        },
        "allowContextMenuWithControlKey": {
            "default": false,
            "description": "Allows context menu to show, even when <kbd>Ctrl</kbd> key is held down."
        },
        "suppressMenuHide": {
            "default": false,
            "description": "Set to `true` to always show the column menu button, rather than only showing when the mouse is over the column header.",
            "more": {
                "name": "Column Menu",
                "url": "/column-menu/"
            }
        },
        "enableBrowserTooltips": {
            "default": false,
            "description": "Set to `true` to use the browser's default tooltip instead of using the grid's [Tooltip Component](/component-tooltip/)."
        },
        "tooltipShowDelay": {
            "default": 2000,
            "description": "The delay in milliseconds that it takes for tooltips to show up once an element is hovered over.<br />**Note:** This property does not work if `enableBrowserTooltips` is `true`."
        },
        "tooltipMouseTrack": {
            "default": false,
            "description": "Set to `true` to have tooltips follow the cursor once they are displayed."
        }
    },
    "export": {
        "meta": {
            "displayName": "Export",
            "page": {
                "name": "Export",
                "url": "/excel-export/"
            }
        },
        "defaultCsvExportParams": {
            "description": "A default configuration object used to export to CSV.",
            "more": {
                "name": "CSV Export",
                "url": "/csv-export"
            }
        },
        "suppressCsvExport": {
            "default": false,
            "description": "Prevents the user from exporting the grid to CSV."
        },
        "defaultExcelExportParams": {
            "description": "A default configuration object used to export to Excel.",
            "more": {
                "name": "Excel Export",
                "url": "/excel-export"
            }
        },
        "suppressExcelExport": {
            "default": false,
            "description": "Prevents the user from exporting the grid to Excel."
        },
        "excelStyles": {
            "description": "A list (array) of Excel styles to be used when [exporting to Excel with styles](/excel-export-styles/)"
        }
    },
    "miscellaneous": {
        "meta": {
            "displayName": "Miscellaneous"
        },
        "alignedGrids": {
            "description": "A list of grids to treat as [Aligned Grids](/aligned-grids/). If grids are aligned then the columns and horizontal scrolling will be kept in sync."
        },
        "context": {
            "description": "Provides a [context](/context/) object that is provided to different callbacks the grid uses. Used for passing additional information to the callbacks by your application."
        },
        "tabIndex": {
            "default": 0,
            "description": "Change this value to set the tabIndex order of the Grid within your application."
        },
        "rowBuffer": {
            "default": 10,
            "description": "The number of rows rendered outside the viewable area the grid renders. Having a buffer means the grid will have rows ready to show as the user slowly scrolls vertically."
        },
        "valueCache": {
            "default": false,
            "description": "Set to `true` to turn on the [value cache](/value-getters/#value-cache-properties)."
        },
        "valueCacheNeverExpires": {
            "default": false,
            "description": "Set to `true` to configure the [value cache](/value-getters/#value-cache-properties) to not expire after data updates."
        },
        "enableCellExpressions": {
            "default": false,
            "description": "Set to `true` to allow [cell expressions](/cell-expressions/#cell-expressions)."
        },
        "suppressParentsInRowNodes": {
            "default": false,
            "description": "If `true`, row nodes do not have their parents set. The grid doesn't use the parent reference, but it is included to help the client code navigate the node tree if it wants by providing bi-direction navigation up and down the tree. If this is a problem (e.g. if you need to convert the tree to JSON, which does not allow cyclic dependencies) then set this to `true`."
        },
        "suppressTouch": {
            "default": false,
            "description": "Disables [touch support](/touch/) (but does not remove the browser's efforts to simulate mouse events on touch)."
        },
        "suppressFocusAfterRefresh": {
            "default": false,
            "description": "Set to `true` to not set focus back on the grid after a refresh. This can avoid issues where you want to keep the focus on another part of the browser."
        },
        "suppressAsyncEvents": {
            "default": false,
            "description": "Disables the asynchronous nature of the events introduced in v10, and makes them synchronous. This property only exists for the purpose of supporting legacy code which has a dependency on synchronous events from earlier versions (v9 or earlier) of AG Grid. **It is strongly recommended that you do not change this property unless you have legacy issues.**"
        },
        "suppressBrowserResizeObserver": {
            "default": false,
            "description": "The grid will check for `ResizeObserver` and use it if it exists in the browser, otherwise it will use the grid's alternative implementation. Some users reported issues with Chrome's `ResizeObserver`. Use this property to always use the grid's alternative implementation should such problems exist."
        },
        "suppressPropertyNamesCheck": {
            "default": false,
            "description": "Disables showing a warning message in the console if using a `gridOptions` or `colDef` property that doesn't exist."
        },
        "debug": {
            "default": false,
            "description": "Set this to `true` to enable debug information from the grid and related components. Will result in additional logging being output, but very useful when investigating problems."
        }
    }
}