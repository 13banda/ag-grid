{
    "eventHandlers": [],
    "properties": [
        { "name": "rowData", "value": "createData(100, \"body\")" },
        { "name": "pinnedTopRowData", "value": "createData(3, \"pinned\")" },
        { "name": "pinnedBottomRowData", "value": "createData(3, \"pinned\")" },
        { "name": "columnDefs", "value": "getColumnDefs()" },
        { "name": "isFullWidthCell", "value": "function (rowNode) {\n        return rowNode.data.fullWidth;\n    }" },
        {
            "name": "fullWidthCellRenderer",
            "value": "function (params) {\n        let cssClass;\n        let message;\n        if (params.node.rowPinned) {\n            cssClass = \"example-full-width-pinned-row\";\n            message = \"Pinned full width row at index \" + params.rowIndex;\n        } else {\n            cssClass = \"example-full-width-row\";\n            message = \"Normal full width row at index\" + params.rowIndex;\n        }\n        const eDiv = document.createElement(\"div\");\n        eDiv.innerHTML = \"<div class=\\\"\" + cssClass + \"\\\"><button>Click</button> \" + message + \"</div>\";\n        const eButton = eDiv.querySelector(\"button\");\n        eButton.addEventListener(\"click\", function () {\n            alert(\"button clicked\");\n        });\n        return eDiv.firstChild;\n    }"
        },
        {
            "name": "getRowHeight",
            "value": "function (params) {\n        const isBodyRow = params.node.rowPinned === undefined;\n        const isFullWidth = params.node.data.fullWidth;\n        if (isBodyRow && isFullWidth) {\n            return 75;\n        }\n    }"
        }
    ],
    "components": [],
    "defaultColDef": null,
    "globalComponents": [],
    "parsedColDefs": "",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "function getColumnDefs() {\n    const columnDefs = [];\n    alphabet().forEach(function (letter) {\n        const colDef = {\n            headerName: letter,\n            field: letter,\n            width: 150\n        };\n        if (letter === 'A') {\n            colDef.pinned = 'left';\n        }\n        if (letter === 'Z') {\n            colDef.pinned = 'right';\n        }\n        columnDefs.push(colDef);\n    });\n    return columnDefs;\n}",
        "function alphabet() {\n    return 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n}",
        "function createData(count, prefix) {\n    const rowData = [];\n    for (let i = 0; i < count; i++) {\n        const item = {};\n        item.fullWidth = i % 3 === 2;\n        alphabet().forEach(function (letter) {\n            item[letter] = prefix + ' (' + letter + ',' + i + ')';\n        });\n        rowData.push(item);\n    }\n    return rowData;\n}"
    ],
    "template": "GRID_TEMPLATE_PLACEHOLDER",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine", "exampleHeight": 595 }
}
