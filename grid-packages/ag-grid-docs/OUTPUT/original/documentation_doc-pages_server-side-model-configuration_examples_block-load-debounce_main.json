{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n        {\n            field: \"id\",\n            maxWidth: 80\n        },\n        {\n            field: \"athlete\",\n            minWidth: 220\n        },\n        {\n            field: \"country\",\n            minWidth: 200\n        },\n        { field: \"year\" },\n        {\n            field: \"sport\",\n            minWidth: 200\n        },\n        { field: \"gold\" },\n        { field: \"silver\" },\n        { field: \"bronze\" }\n    ]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n        flex: 1,\n        minWidth: 100,\n        resizable: true\n    }"
        },
        { "name": "rowModelType", "value": "\"serverSide\"" },
        { "name": "serverSideStoreType", "value": "\"partial\"" },
        { "name": "blockLoadDebounceMillis", "value": "1000" },
        { "name": "debug", "value": "true" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n        {\n            field: \"id\",\n            maxWidth: 80\n        },\n        {\n            field: \"athlete\",\n            minWidth: 220\n        },\n        {\n            field: \"country\",\n            minWidth: 200\n        },\n        { field: \"year\" },\n        {\n            field: \"sport\",\n            minWidth: 200\n        },\n        { field: \"gold\" },\n        { field: \"silver\" },\n        { field: \"bronze\" }\n    ]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "function createServerSideDatasource(server) {\n    return {\n        getRows: function (params) {\n            console.log('[Datasource] - rows requested by grid: ', params.request);\n            var response = server.getData(params.request);\n            setTimeout(function () {\n                if (response.success) {\n                    params.success({\n                        rowData: response.rows,\n                        rowCount: response.lastRow\n                    });\n                } else {\n                    params.fail();\n                }\n            }, 100);\n        }\n    };\n}",
        "function createFakeServer(allData) {\n    return {\n        getData: function (request) {\n            var rowsForBlock = allData.slice(request.startRow, request.endRow);\n            var lastRow = allData.length;\n            return {\n                success: true,\n                rows: rowsForBlock,\n                lastRow: lastRow\n            };\n        }\n    };\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "{\n    var idSequence = 0;\n    data.forEach(function (item) {\n        item.id = idSequence++;\n    });\n    var fakeServer = createFakeServer(data);\n    var datasource = createServerSideDatasource(fakeServer);\n    params.api.setServerSideDatasource(datasource);\n}"
    },
    "template": "GRID_TEMPLATE_PLACEHOLDER",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine-dark",
        "enterprise": true,
        "modules": ["serverside", "menu", "columnpanel"]
    }
}
