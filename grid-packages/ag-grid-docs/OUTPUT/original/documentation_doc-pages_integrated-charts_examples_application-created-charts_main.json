{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n        {\n            field: \"product\",\n            chartDataType: \"category\"\n        },\n        {\n            field: \"book\",\n            chartDataType: \"category\"\n        },\n        {\n            field: \"current\",\n            type: \"measure\"\n        },\n        {\n            field: \"previous\",\n            type: \"measure\"\n        },\n        {\n            headerName: \"PL 1\",\n            field: \"pl1\",\n            type: \"measure\"\n        },\n        {\n            headerName: \"PL 2\",\n            field: \"pl2\",\n            type: \"measure\"\n        },\n        {\n            headerName: \"Gain-DX\",\n            field: \"gainDx\",\n            type: \"measure\"\n        },\n        {\n            headerName: \"SX / PX\",\n            field: \"sxPx\",\n            type: \"measure\"\n        },\n        {\n            field: \"trade\",\n            type: \"measure\"\n        },\n        {\n            field: \"submitterID\",\n            type: \"measure\"\n        },\n        {\n            field: \"submitterDealID\",\n            type: \"measure\",\n            minWidth: 170\n        },\n        { field: \"portfolio\" },\n        { field: \"dealType\" },\n        {\n            headerName: \"Bid\",\n            field: \"bidFlag\"\n        }\n    ]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n        editable: true,\n        sortable: true,\n        flex: 1,\n        minWidth: 150,\n        filter: true,\n        resizable: true\n    }"
        },
        {
            "name": "columnTypes",
            "value": "{\n        measure: {\n            chartDataType: \"series\",\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        }\n    }"
        },
        { "name": "animateRows", "value": "true" },
        { "name": "enableCharts", "value": "true" },
        { "name": "suppressAggFuncInHeader", "value": "true" },
        { "name": "getRowNodeId", "value": "function (data) {\n        return data.trade;\n    }" },
        { "name": "chartThemes", "value": "[\"ag-pastel-dark\"]" },
        {
            "name": "chartThemeOverrides",
            "value": "{\n        common: { legend: { position: \"bottom\" } },\n        column: {\n            axes: {\n                number: { label: { formatter: yAxisLabelFormatter } },\n                category: { label: { rotation: 0 } }\n            },\n            series: { tooltip: { renderer: tooltipRenderer } }\n        },\n        line: { series: { tooltip: { renderer: tooltipRenderer } } }\n    }"
        },
        { "name": "getChartToolbarItems", "value": "function () {\n        return [];\n    }" }
    ],
    "components": [],
    "defaultColDef": null,
    "globalComponents": [],
    "parsedColDefs": "",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "createChart",
            "params": "'stackedColumn'",
            "body": "function createChart(type) {\n    if (chartRef) {\n        chartRef.destroyChart();\n    }\n    var params = {\n        cellRange: {\n            columns: [\n                'product',\n                'current',\n                'previous',\n                'pl1',\n                'pl2',\n                'gainDx',\n                'sxPx'\n            ]\n        },\n        chartContainer: document.querySelector('#myChart'),\n        chartType: type,\n        suppressChartRanges: true,\n        aggFunc: 'sum'\n    };\n    chartRef = this.gridApi.createRangeChart(params);\n}"
        },
        {
            "name": "onStartLoad",
            "params": "",
            "body": "function onStartLoad() {\n    worker.postMessage('start');\n}"
        },
        {
            "name": "onStopMessages",
            "params": "",
            "body": "function onStopMessages() {\n    worker.postMessage('stop');\n}"
        }
    ],
    "utils": [
        "var chartRef;",
        "function numberCellFormatter(params) {\n    return Math.floor(params.value).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}",
        "function yAxisLabelFormatter(params) {\n    var n = params.value;\n    if (n < 1000)\n        return n;\n    if (n >= 1000 && n < 1000000)\n        return +(n / 1000).toFixed(1) + 'K';\n    if (n >= 1000000 && n < 1000000000)\n        return +(n / 1000000).toFixed(1) + 'M';\n    if (n >= 1000000000 && n < 1000000000000)\n        return +(n / 1000000000).toFixed(1) + 'B';\n    if (n >= 1000000000000)\n        return +(n / 1000000000000).toFixed(1) + 'T';\n}",
        "function tooltipRenderer(params) {\n    var value = '$' + params.datum[params.yKey].toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    var title = params.title || params.yName;\n    return '<div style=\"padding: 5px\"><b>' + title + '</b>: ' + value + '</div>';\n}",
        "var worker;"
    ],
    "template": "<div id=\"myApp\" class=\"wrapper\">\n    <div style=\"padding-bottom: 4px\">\n        <span>\n            <button onclick=\"onStopMessages()\">■ Stop</button>\n            <button onclick=\"onStartLoad()\">► Start</button>\n        </span>\n        <span style=\"margin-left: 30px;\">\n            <button onclick=\"createChart('stackedColumn')\">Stacked Column Chart</button>\n            <button onclick=\"createChart('groupedColumn')\">Grouped Column Chart</button>\n            <button onclick=\"createChart('line')\">Line Chart</button>\n        </span>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n    <div id=\"myChart\" class=\"ag-theme-balham-dark my-chart\"></div>\n</div>",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-balham-dark",
        "exampleHeight": 825,
        "enterprise": true
    }
}
