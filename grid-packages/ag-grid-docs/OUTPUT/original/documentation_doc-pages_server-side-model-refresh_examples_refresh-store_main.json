{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n        {\n            field: \"country\",\n            rowGroup: true,\n            enableRowGroup: true,\n            hide: true\n        },\n        {\n            field: \"year\",\n            rowGroup: true,\n            enableRowGroup: true,\n            hide: true\n        },\n        { field: \"version\" },\n        {\n            field: \"gold\",\n            aggFunc: \"sum\"\n        },\n        {\n            field: \"silver\",\n            aggFunc: \"sum\"\n        },\n        {\n            field: \"bronze\",\n            aggFunc: \"sum\"\n        }\n    ]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n        flex: 1,\n        minWidth: 150,\n        resizable: true,\n        sortable: true\n    }"
        },
        {
            "name": "autoGroupColumnDef",
            "value": "{\n        flex: 1,\n        minWidth: 280,\n        field: \"athlete\"\n    }"
        },
        { "name": "rowModelType", "value": "\"serverSide\"" },
        { "name": "serverSideStoreType", "value": "\"full\"" },
        { "name": "suppressAggFuncInHeader", "value": "true" },
        { "name": "rowGroupPanelShow", "value": "\"always\"" },
        { "name": "animateRows", "value": "true" },
        { "name": "debug", "value": "true" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 150,\n    resizable: true,\n    sortable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n        {\n            field: \"country\",\n            rowGroup: true,\n            enableRowGroup: true,\n            hide: true\n        },\n        {\n            field: \"year\",\n            rowGroup: true,\n            enableRowGroup: true,\n            hide: true\n        },\n        { field: \"version\" },\n        {\n            field: \"gold\",\n            aggFunc: \"sum\"\n        },\n        {\n            field: \"silver\",\n            aggFunc: \"sum\"\n        },\n        {\n            field: \"bronze\",\n            aggFunc: \"sum\"\n        }\n    ]",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "refreshCache",
            "params": "",
            "body": "function refreshCache(route) {\n    versionCounter++;\n    var purge = document.querySelector('#purge').checked === true;\n    this.gridApi.refreshServerSideStore({\n        route: route,\n        purge: purge\n    });\n}"
        },
        {
            "name": "getBlockState",
            "params": "",
            "body": "function getBlockState() {\n    var blockState = this.gridApi.getCacheBlockState();\n    console.log(blockState);\n}"
        }
    ],
    "utils": [
        "var versionCounter = 1;",
        "function getServerSideDatasource(server) {\n    return {\n        getRows: function (params) {\n            console.log('[Datasource] - rows requested by grid: ', params.request);\n            var response = server.getData(params.request);\n            response.rows = response.rows.map(function (item) {\n                var res = {};\n                Object.assign(res, item);\n                res.version = versionCounter + ' - ' + versionCounter + ' - ' + versionCounter;\n                return res;\n            });\n            setTimeout(function () {\n                if (response.success) {\n                    params.success({\n                        rowData: response.rows,\n                        rowCount: response.lastRow\n                    });\n                } else {\n                    params.fail();\n                }\n            }, 1000);\n        }\n    };\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "{\n    var fakeServer = new FakeServer(data);\n    var datasource = getServerSideDatasource(fakeServer);\n    params.api.setServerSideDatasource(datasource);\n}"
    },
    "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px;\">\n        <button onclick=\"refreshCache()\">Refresh Top Level</button>\n        <button onclick=\"refreshCache(['Canada'])\">Refresh [Canada]</button>\n        <button onclick=\"refreshCache(['Canada',2002])\">Refresh [Canada,2002]</button>\n        <button onclick=\"getBlockState()\">Print Block State</button>\n\n        <label><input type=\"checkbox\" id=\"purge\"> Purge</label>\n\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine-dark",
        "enterprise": true,
        "exampleHeight": 615,
        "extras": ["alasql"],
        "modules": ["serverside", "rowgrouping"]
    }
}
