{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'q1',\n        type: 'quarterFigure'\n    },\n    {\n        field: 'q2',\n        type: 'quarterFigure'\n    },\n    {\n        field: 'q3',\n        type: 'quarterFigure'\n    },\n    {\n        field: 'q4',\n        type: 'quarterFigure'\n    },\n    {\n        field: 'year',\n        rowGroup: true,\n        hide: true\n    },\n    {\n        headerName: 'Total',\n        colId: 'total',\n        cellClass: 'number-cell total-col',\n        aggFunc: 'sum',\n        valueFormatter: formatNumber,\n        valueGetter: function (params) {\n            var q1 = params.getValue('q1');\n            var q2 = params.getValue('q2');\n            var q3 = params.getValue('q3');\n            var q4 = params.getValue('q4');\n            var result = q1 + q2 + q3 + q4;\n            console.log(`Total Value Getter (${ callCount }, ${ params.column.getId() }): ${ [\n                q1,\n                q2,\n                q3,\n                q4\n            ].join(', ') } =  ${ result }`);\n            callCount++;\n            return result;\n        }\n    }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    resizable: true\n}" },
        { "name": "autoGroupColumnDef", "value": "{ minWidth: 140 }" },
        {
            "name": "columnTypes",
            "value": "{\n    quarterFigure: {\n        cellClass: 'number-cell',\n        aggFunc: 'sum',\n        valueFormatter: formatNumber,\n        valueParser: function numberParser(params) {\n            return Number(params.newValue);\n        }\n    }\n}"
        },
        { "name": "rowData", "value": "getData()" },
        { "name": "suppressAggFuncInHeader", "value": "true" },
        { "name": "enableCellChangeFlash", "value": "true" },
        { "name": "enableRangeSelection", "value": "true" },
        { "name": "groupDefaultExpanded", "value": "1" },
        { "name": "getRowNodeId", "value": "function (data) {\n    return data.id;\n}" }
    ],
    "components": [],
    "defaultColDef": null,
    "globalComponents": [],
    "parsedColDefs": "",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "onValueCache",
            "params": "true",
            "body": "function onValueCache(valueCacheOn) {\n    destroyOldGridIfExists();\n    createGrid(valueCacheOn);\n}"
        }
    ],
    "utils": [
        "var callCount = 1;",
        "function formatNumber(params) {\n    var number = params.value;\n    return Math.floor(number).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}",
        "function destroyOldGridIfExists() {\n    if (gridInstance.api) {\n        console.log('==========> destroying old grid');\n        gridInstance.api.destroy();\n    }\n}",
        "function createGrid(valueCacheOn) {\n    console.log('==========> creating grid');\n    callCount = 1;\n    gridInstance.valueCache = valueCacheOn;\n    var gridDiv = document.querySelector('#myGrid');\n    new agGrid.Grid(gridDiv, gridInstance);\n}"
    ],
    "template": "<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        Value Cache:\n        <input type=\"radio\" name=\"valueCache\" onclick=\"onValueCache(true)\">On\n        <input type=\"radio\" name=\"valueCache\" onclick=\"onValueCache(false)\" checked=\"\">Off\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine-dark", "enterprise": true }
}
