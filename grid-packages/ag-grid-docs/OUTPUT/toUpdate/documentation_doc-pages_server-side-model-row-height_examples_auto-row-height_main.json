{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        headerName: 'Group',\n        field: 'name',\n        rowGroup: true,\n        hide: true\n    },\n    {\n        field: 'autoA',\n        wrapText: true,\n        autoHeight: true,\n        aggFunc: 'last'\n    },\n    {\n        field: 'autoB',\n        wrapText: true,\n        autoHeight: true,\n        aggFunc: 'last'\n    }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    resizable: true,\n    sortable: true\n}" },
        { "name": "autoGroupColumnDef", "value": "{\n    flex: 1,\n    maxWidth: 200\n}" },
        { "name": "rowModelType", "value": "'serverSide'" },
        { "name": "serverSideStoreType", "value": "'partial'" },
        { "name": "animateRows", "value": "true" },
        { "name": "suppressAggFuncInHeader", "value": "true" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    resizable: true,\n    sortable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        headerName: 'Group',\n        field: 'name',\n        rowGroup: true,\n        hide: true\n    },\n    {\n        field: 'autoA',\n        wrapText: true,\n        autoHeight: true,\n        aggFunc: 'last'\n    },\n    {\n        field: 'autoB',\n        wrapText: true,\n        autoHeight: true,\n        aggFunc: 'last'\n    }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "function getServerSideDatasource(server) {\n    return {\n        getRows: function (params) {\n            console.log('[Datasource] - rows requested by grid: ', params.request);\n            var response = server.getData(params.request);\n            setTimeout(function () {\n                if (response.success) {\n                    params.success({\n                        rowData: response.rows,\n                        rowCount: response.lastRow\n                    });\n                } else {\n                    params.fail();\n                }\n            }, 200);\n        }\n    };\n}"
    ],
    "onGridReady": "{\n    var data = getData();\n    var fakeServer = new FakeServer(data);\n    var datasource = getServerSideDatasource(fakeServer);\n    params.api.setServerSideDatasource(datasource);\n}",
    "template": "GRID_TEMPLATE_PLACEHOLDER\n",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine-dark",
        "enterprise": true,
        "exampleHeight": 610,
        "extras": ["alasql"],
        "modules": ["serverside", "rowgrouping"]
    }
}
