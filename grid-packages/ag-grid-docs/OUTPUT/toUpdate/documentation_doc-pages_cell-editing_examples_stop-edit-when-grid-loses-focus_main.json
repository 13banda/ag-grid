{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        minWidth: 160\n    },\n    { field: 'age' },\n    {\n        field: 'country',\n        minWidth: 140\n    },\n    {\n        field: 'year',\n        cellEditor: 'yearCellEditor'\n    },\n    {\n        field: 'date',\n        minWidth: 140\n    },\n    {\n        field: 'sport',\n        minWidth: 160\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }\n]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    editable: true\n}"
        },
        { "name": "components", "value": "{ yearCellEditor: getYearCellEditor() }" },
        { "name": "stopEditingWhenCellsLoseFocus", "value": "true" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    editable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'athlete',\n        minWidth: 160\n    },\n    { field: 'age' },\n    {\n        field: 'country',\n        minWidth: 140\n    },\n    {\n        field: 'year',\n        cellEditor: 'yearCellEditor'\n    },\n    {\n        field: 'date',\n        minWidth: 140\n    },\n    {\n        field: 'sport',\n        minWidth: 160\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "function getYearCellEditor() {\n    class YearCellEditor {\n        constructor() {\n        }\n        getGui() {\n            return this.eGui;\n        }\n        getValue() {\n            return this.value;\n        }\n        isPopup() {\n            return true;\n        }\n        init(params) {\n            this.value = params.value;\n            const tempElement = document.createElement('div');\n            tempElement.innerHTML = '<div class=\"yearSelect\">' + '<div>Clicking here does not close the popup!</div>' + '<button id=\"bt2006\" class=\"yearButton\">2006</button>' + '<button id=\"bt2008\" class=\"yearButton\">2008</button>' + '<button id=\"bt2010\" class=\"yearButton\">2010</button>' + '<button id=\"bt2012\" class=\"yearButton\">2012</button>' + '<div>' + '<input type=\"text\" style=\"width: 100%;\" placeholder=\"clicking on this text field does not close\"/>' + '</div>' + '</div>';\n            const that = this;\n            [\n                2006,\n                2008,\n                2010,\n                2012\n            ].forEach(year => {\n                tempElement.querySelector('#bt' + year).addEventListener('click', () => {\n                    that.value = year;\n                    params.stopEditing();\n                });\n            });\n            this.eGui = tempElement.firstChild;\n        }\n    }\n    return YearCellEditor;\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "params.api.setRowData(data)"
    },
    "template": "<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        Clicking outside the grid will stop the editing <button style=\"font-size: 12px\">Dummy Save</button>\n        <input placeholder=\"click here, editing stops\">\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine", "exampleHeight": 510 }
}
