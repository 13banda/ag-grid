{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    { field: 'athlete' },\n    {\n        field: 'age',\n        maxWidth: 90,\n        valueParser: numberParser,\n        cellClassRules: {\n            'rag-green': 'x < 20',\n            'rag-amber': 'x >= 20 && x < 25',\n            'rag-red': 'x >= 25'\n        }\n    },\n    { field: 'country' },\n    {\n        field: 'year',\n        maxWidth: 90,\n        valueParser: numberParser,\n        cellClassRules: ragCellClassRules,\n        cellRenderer: ragRenderer\n    },\n    {\n        field: 'date',\n        cellClass: 'rag-amber'\n    },\n    {\n        field: 'sport',\n        cellClass: cellClass\n    },\n    {\n        field: 'gold',\n        valueParser: numberParser,\n        cellStyle: { backgroundColor: '#aaffaa' }\n    },\n    {\n        field: 'silver',\n        valueParser: numberParser,\n        cellStyle: cellStyle\n    },\n    {\n        field: 'bronze',\n        valueParser: numberParser,\n        cellStyle: cellStyle\n    }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    minWidth: 150,\n    editable: true\n}" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 150,\n    editable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    { field: 'athlete' },\n    {\n        field: 'age',\n        maxWidth: 90,\n        valueParser: 'AG_LITERAL_numberParser',\n        cellClassRules: {\n            'rag-green': 'x < 20',\n            'rag-amber': 'x >= 20 && x < 25',\n            'rag-red': 'x >= 25'\n        }\n    },\n    { field: 'country' },\n    {\n        field: 'year',\n        maxWidth: 90,\n        valueParser: 'AG_LITERAL_numberParser',\n        cellClassRules: 'AG_LITERAL_ragCellClassRules',\n        cellRenderer: 'AG_LITERAL_ragRenderer'\n    },\n    {\n        field: 'date',\n        cellClass: 'rag-amber'\n    },\n    {\n        field: 'sport',\n        cellClass: 'AG_LITERAL_cellClass'\n    },\n    {\n        field: 'gold',\n        valueParser: 'AG_LITERAL_numberParser',\n        cellStyle: { backgroundColor: '#aaffaa' }\n    },\n    {\n        field: 'silver',\n        valueParser: 'AG_LITERAL_numberParser',\n        cellStyle: 'AG_LITERAL_cellStyle'\n    },\n    {\n        field: 'bronze',\n        valueParser: 'AG_LITERAL_numberParser',\n        cellStyle: 'AG_LITERAL_cellStyle'\n    }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "const ragCellClassRules = {\n    'rag-green-outer': params => params.value === 2008,\n    'rag-amber-outer': params => params.value === 2004,\n    'rag-red-outer': params => params.value === 2000\n};",
        "function cellStyle(params) {\n    const color = numberToColor(params.value);\n    return { backgroundColor: color };\n}",
        "function cellClass(params) {\n    return params.value === 'Swimming' ? 'rag-green' : 'rag-amber';\n}",
        "function numberToColor(val) {\n    if (val === 0) {\n        return '#ffaaaa';\n    } else if (val == 1) {\n        return '#aaaaff';\n    } else {\n        return '#aaffaa';\n    }\n}",
        "function ragRenderer(params) {\n    return '<span class=\"rag-element\">' + params.value + '</span>';\n}",
        "function numberParser(params) {\n    const newValue = params.newValue;\n    let valueAsNumber;\n    if (newValue === null || newValue === undefined || newValue === '') {\n        valueAsNumber = null;\n    } else {\n        valueAsNumber = parseFloat(params.newValue);\n    }\n    return valueAsNumber;\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "params.api.setRowData(data)"
    },
    "template": "GRID_TEMPLATE_PLACEHOLDER",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine" }
}
