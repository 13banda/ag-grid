{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n        {\n            field: \"athlete\",\n            width: 150,\n            filter: false\n        },\n        {\n            field: \"gold\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        },\n        {\n            field: \"silver\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        },\n        {\n            field: \"bronze\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        },\n        {\n            field: \"total\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        }\n    ]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n        editable: true,\n        sortable: true,\n        flex: 1,\n        minWidth: 100,\n        filter: true,\n        floatingFilter: true,\n        resizable: true\n    }"
        },
        { "name": "components", "value": "{ customNumberFilter: getNumberFilter() }" },
        { "name": "rowData", "value": "null" }
    ],
    "components": [],
    "defaultColDef": "{\n    editable: true,\n    sortable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    floatingFilter: true,\n    resizable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n        {\n            field: \"athlete\",\n            width: 150,\n            filter: false\n        },\n        {\n            field: \"gold\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        },\n        {\n            field: \"silver\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        },\n        {\n            field: \"bronze\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        },\n        {\n            field: \"total\",\n            width: 100,\n            filter: \"customNumberFilter\",\n            suppressMenu: true\n        }\n    ]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "var _class;",
        "const isNumeric = n => !isNaN(parseFloat(n)) && isFinite(parseFloat(n));",
        "const getNumberFilter = () => {\n    return _class = class NumberFilter {\n        constructor() {\n            _class.prototype.__init.call(this);\n        }\n        __init() {\n            this.filterText = null;\n        }\n        init(params) {\n            this.filterParams = params;\n            this.filterText = null;\n            this.params = params;\n            this.setupGui();\n        }\n        setupGui() {\n            this.gui = document.createElement('div');\n            this.gui.innerHTML = '<div style=\"padding: 4px;\">' + '<div style=\"font-weight: bold;\">Greater than: </div>' + '<div><input style=\"margin: 4px 0px 4px 0px;\" type=\"number\" id=\"filterText\" placeholder=\"Number of medals...\"/></div>' + '</div>';\n            const that = this;\n            this.onFilterChanged = function () {\n                that.extractFilterText();\n                that.params.filterChangedCallback();\n            };\n            this.eFilterText = this.gui.querySelector('#filterText');\n            this.eFilterText.addEventListener('input', this.onFilterChanged);\n        }\n        extractFilterText() {\n            this.filterText = this.eFilterText.value;\n        }\n        getGui() {\n            return this.gui;\n        }\n        doesFilterPass(params) {\n            if (!this.isFilterActive()) {\n                return false;\n            }\n            const {api, colDef, column, columnApi, context} = this.filterParams;\n            const {node} = params;\n            const value = this.filterParams.valueGetter({\n                api,\n                colDef,\n                column,\n                columnApi,\n                context,\n                data: node.data,\n                getValue: field => node.data[field],\n                node\n            });\n            const filterValue = this.filterText;\n            if (!value)\n                return false;\n            return Number(value) > Number(filterValue);\n        }\n        isFilterActive() {\n            return this.filterText !== null && this.filterText !== undefined && this.filterText !== '' && isNumeric(this.filterText);\n        }\n        getModel() {\n            return this.isFilterActive() ? Number(this.eFilterText.value) : null;\n        }\n        setModel(model) {\n            this.eFilterText.value = model;\n            this.extractFilterText();\n        }\n        destroy() {\n            this.eFilterText.removeEventListener('input', this.onFilterChanged);\n        }\n        getModelAsString() {\n            return this.isFilterActive() ? '>' + this.filterText : '';\n        }\n    }, _class;\n};"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "{\n    params.api.setRowData(data);\n}"
    },
    "template": "\nGRID_TEMPLATE_PLACEHOLDER\n",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine" }
}
