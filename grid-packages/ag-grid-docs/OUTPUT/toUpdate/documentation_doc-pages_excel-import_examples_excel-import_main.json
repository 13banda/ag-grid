{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        minWidth: 180\n    },\n    { field: 'age' },\n    {\n        field: 'country',\n        minWidth: 150\n    },\n    { field: 'year' },\n    {\n        field: 'date',\n        minWidth: 130\n    },\n    {\n        field: 'sport',\n        minWidth: 100\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    resizable: true,\n    minWidth: 80,\n    flex: 1\n}" },
        { "name": "rowData", "value": "[]" }
    ],
    "components": [],
    "defaultColDef": null,
    "globalComponents": [],
    "parsedColDefs": "",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "importExcel",
            "params": "",
            "body": "function importExcel() {\n    makeRequest('GET', 'https://www.ag-grid.com/example-assets/olympic-data.xlsx', function (data) {\n        var workbook = convertDataToWorkbook(data);\n        populateGrid(workbook);\n    }, function (error) {\n        throw error;\n    });\n}"
        }
    ],
    "utils": [
        "function makeRequest(method, url, success, error) {\n    var httpRequest = new XMLHttpRequest();\n    httpRequest.open('GET', url, true);\n    httpRequest.responseType = 'arraybuffer';\n    httpRequest.open(method, url);\n    httpRequest.onload = function () {\n        success(httpRequest.response);\n    };\n    httpRequest.onerror = function () {\n        error(httpRequest.response);\n    };\n    httpRequest.send();\n}",
        "function convertDataToWorkbook(dataRows) {\n    var data = new Uint8Array(dataRows);\n    var arr = new Array();\n    for (var i = 0; i !== data.length; ++i) {\n        arr[i] = String.fromCharCode(data[i]);\n    }\n    var bstr = arr.join('');\n    return XLSX.read(bstr, { type: 'binary' });\n}",
        "function populateGrid(workbook) {\n    var firstSheetName = workbook.SheetNames[0];\n    var worksheet = workbook.Sheets[firstSheetName];\n    var columns = {\n        A: 'athlete',\n        B: 'age',\n        C: 'country',\n        D: 'year',\n        E: 'date',\n        F: 'sport',\n        G: 'gold',\n        H: 'silver',\n        I: 'bronze',\n        J: 'total'\n    };\n    var rowData = [];\n    var rowIndex = 2;\n    while (worksheet['A' + rowIndex]) {\n        var row = {};\n        Object.keys(columns).forEach(function (column) {\n            row[columns[column]] = worksheet[column + rowIndex].w;\n        });\n        rowData.push(row);\n        rowIndex++;\n    }\n    gridInstance.api.setRowData(rowData);\n}"
    ],
    "template": "<div class=\"example-wrapper\">\n    <button onclick=\"importExcel()\" style=\"margin-bottom: 5px\">Import Excel</button>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>\n",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine",
        "enterprise": true,
        "exampleHeight": 500,
        "extras": ["xlsx-style"]
    }
}
