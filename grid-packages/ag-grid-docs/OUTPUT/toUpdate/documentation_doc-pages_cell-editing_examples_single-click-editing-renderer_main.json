{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        minWidth: 180\n    },\n    { field: 'age' },\n    {\n        field: 'country',\n        minWidth: 160\n    },\n    { field: 'year' },\n    {\n        field: 'date',\n        minWidth: 160\n    },\n    {\n        field: 'sport',\n        minWidth: 180\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }\n]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n    flex: 1,\n    minWidth: 100,\n    editable: true,\n    cellRenderer: 'singleClickEditRenderer'\n}"
        },
        { "name": "suppressClickEdit", "value": "true" },
        { "name": "components", "value": "{ singleClickEditRenderer: getRenderer() }" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    editable: true,\n    cellRenderer: 'singleClickEditRenderer'\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'athlete',\n        minWidth: 180\n    },\n    { field: 'age' },\n    {\n        field: 'country',\n        minWidth: 160\n    },\n    { field: 'year' },\n    {\n        field: 'date',\n        minWidth: 160\n    },\n    {\n        field: 'sport',\n        minWidth: 180\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "function getRenderer() {\n    class CellRenderer {\n        createGui() {\n            const template = '<span><button id=\"theButton\" style=\"height: 39px\">#</button><span id=\"theValue\" style=\"padding-left: 4px;\"></span></span>';\n            const tempDiv = document.createElement('div');\n            tempDiv.innerHTML = template;\n            this.eGui = tempDiv.firstElementChild;\n        }\n        init(params) {\n            this.createGui();\n            this.params = params;\n            const eValue = this.eGui.querySelector('#theValue');\n            eValue.innerHTML = params.value;\n            this.eButton = this.eGui.querySelector('#theButton');\n            this.buttonClickListener = this.onButtonClicked.bind(this);\n            this.eButton.addEventListener('click', this.buttonClickListener);\n        }\n        onButtonClicked() {\n            const startEditingParams = {\n                rowIndex: this.params.rowIndex,\n                colKey: this.params.column.getId()\n            };\n            this.params.api.startEditingCell(startEditingParams);\n        }\n        getGui() {\n            return this.eGui;\n        }\n        refresh() {\n            return false;\n        }\n        destroy() {\n            this.eButton.removeEventListener('click', this.buttonClickListener);\n        }\n    }\n    return CellRenderer;\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "params.api.setRowData(data)"
    },
    "template": "GRID_TEMPLATE_PLACEHOLDER",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine", "exampleHeight": 520 }
}
