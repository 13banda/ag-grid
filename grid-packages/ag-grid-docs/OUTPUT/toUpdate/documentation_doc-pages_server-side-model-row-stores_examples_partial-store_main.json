{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        minWidth: 220\n    },\n    {\n        field: 'country',\n        minWidth: 200\n    },\n    { field: 'year' },\n    {\n        field: 'sport',\n        minWidth: 200\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    minWidth: 100\n}" },
        { "name": "rowModelType", "value": "'serverSide'" },
        { "name": "serverSideStoreType", "value": "'partial'" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 100\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'athlete',\n        minWidth: 220\n    },\n    {\n        field: 'country',\n        minWidth: 200\n    },\n    { field: 'year' },\n    {\n        field: 'sport',\n        minWidth: 200\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "function createServerSideDatasource(server) {\n    return {\n        getRows: function (params) {\n            console.log('[Datasource] - rows requested by grid: startRow = ' + params.request.startRow + ', endRow = ' + params.request.endRow);\n            var response = server.getData(params.request);\n            setTimeout(function () {\n                if (response.success) {\n                    params.success({\n                        rowData: response.rows,\n                        rowCount: response.lastRow\n                    });\n                } else {\n                    params.fail();\n                }\n            }, 1000);\n        }\n    };\n}",
        "function createFakeServer(allData) {\n    return {\n        getData: function (request) {\n            var requestedRows = allData.slice(request.startRow, request.endRow);\n            var lastRow = getLastRowIndex(request, requestedRows);\n            return {\n                success: true,\n                rows: requestedRows,\n                lastRow: lastRow\n            };\n        }\n    };\n}",
        "function getLastRowIndex(request, results) {\n    if (!results)\n        return undefined;\n    var currentLastRow = (request.startRow || 0) + results.length;\n    return currentLastRow < (request.endRow || 0) ? currentLastRow : undefined;\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "{\n    var fakeServer = createFakeServer(data);\n    var datasource = createServerSideDatasource(fakeServer);\n    params.api.setServerSideDatasource(datasource);\n}"
    },
    "template": "GRID_TEMPLATE_PLACEHOLDER",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine-dark",
        "enterprise": true,
        "modules": ["serverside"]
    }
}
