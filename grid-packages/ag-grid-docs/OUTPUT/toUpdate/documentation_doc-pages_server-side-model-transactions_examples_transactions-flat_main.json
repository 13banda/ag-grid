{
    "eventHandlers": [],
    "properties": [
        { "name": "columnDefs", "value": "[\n        { field: \"product\" },\n        { field: \"value\" }\n    ]" },
        { "name": "defaultColDef", "value": "{\n        width: 250,\n        resizable: true\n    }" },
        { "name": "getRowNodeId", "value": "function (data) {\n        return data.product;\n    }" },
        { "name": "rowSelection", "value": "\"multiple\"" },
        { "name": "serverSideStoreType", "value": "\"full\"" },
        { "name": "enableCellChangeFlash", "value": "true" },
        { "name": "rowModelType", "value": "\"serverSide\"" },
        { "name": "animateRows", "value": "true" }
    ],
    "components": [],
    "defaultColDef": "{\n    width: 250,\n    resizable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n        { field: \"product\" },\n        { field: \"value\" }\n    ]",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "onRemoveSelected",
            "params": "",
            "body": "function onRemoveSelected() {\n    var rowsToRemove = this.gridApi.getSelectedRows();\n    var tx = { remove: rowsToRemove };\n    this.gridApi.applyServerSideTransaction(tx);\n}"
        },
        {
            "name": "onRemoveRandom",
            "params": "",
            "body": "function onRemoveRandom() {\n    var rowsToRemove = [];\n    var firstRow;\n    this.gridApi.forEachNode(function (node) {\n        if (firstRow == null) {\n            firstRow = node.data;\n        }\n        if (Math.random() < 0.75) {\n            return;\n        }\n        rowsToRemove.push(node.data);\n    });\n    if (rowsToRemove.length == 0 && firstRow != null) {\n        rowsToRemove.push(firstRow);\n    }\n    var tx = { remove: rowsToRemove };\n    this.gridApi.applyServerSideTransaction(tx);\n}"
        },
        {
            "name": "onUpdateSelected",
            "params": "",
            "body": "function onUpdateSelected() {\n    var rowsToUpdate = this.gridApi.getSelectedRows();\n    rowsToUpdate.forEach(function (data) {\n        data.value = getNextValue();\n    });\n    var tx = { update: rowsToUpdate };\n    this.gridApi.applyServerSideTransaction(tx);\n}"
        },
        {
            "name": "onUpdateRandom",
            "params": "",
            "body": "function onUpdateRandom() {\n    var rowsToUpdate = [];\n    this.gridApi.forEachNode(function (node) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n        var data = node.data;\n        data.value = getNextValue();\n        rowsToUpdate.push(data);\n    });\n    var tx = { update: rowsToUpdate };\n    this.gridApi.applyServerSideTransaction(tx);\n}"
        },
        {
            "name": "onAdd",
            "params": "",
            "body": "function onAdd(index) {\n    var newProductName = all_products[Math.floor(all_products.length * Math.random())];\n    var itemsToAdd = [];\n    for (var i = 0; i < 5; i++) {\n        itemsToAdd.push({\n            product: newProductName + ' ' + newProductSequence++,\n            value: getNextValue()\n        });\n    }\n    var tx = {\n        addIndex: index,\n        add: itemsToAdd\n    };\n    this.gridApi.applyServerSideTransaction(tx);\n}"
        }
    ],
    "utils": [
        "var valueCounter = 0;",
        "function getNextValue() {\n    valueCounter++;\n    return Math.floor(valueCounter * 987654321 / 7) % 10000;\n}",
        "var products = [\n    'Palm Oil',\n    'Rubber',\n    'Wool',\n    'Amber',\n    'Copper'\n];",
        "var newProductSequence = 0;",
        "var all_products = [\n    'Palm Oil',\n    'Rubber',\n    'Wool',\n    'Amber',\n    'Copper',\n    'Lead',\n    'Zinc',\n    'Tin',\n    'Aluminium',\n    'Aluminium Alloy',\n    'Nickel',\n    'Cobalt',\n    'Molybdenum',\n    'Recycled Steel',\n    'Corn',\n    'Oats',\n    'Rough Rice',\n    'Soybeans',\n    'Rapeseed',\n    'Soybean Meal',\n    'Soybean Oil',\n    'Wheat',\n    'Milk',\n    'Coca',\n    'Coffee C',\n    'Cotton No.2',\n    'Sugar No.11',\n    'Sugar No.14'\n];"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "{\n    var dataSource = {\n        getRows: function (params) {\n            setTimeout(function () {\n                var rows = [];\n                products.forEach(function (product, index) {\n                    rows.push({\n                        product: product,\n                        value: getNextValue()\n                    });\n                });\n                params.success({\n                    rowData: rows,\n                    rowCount: rows.length\n                });\n            }, 500);\n        }\n    };\n    params.api.setServerSideDatasource(dataSource);\n}"
    },
    "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px;\">\n        <button onclick=\"onAdd()\">Add at End</button>\n        <button onclick=\"onAdd(0)\">Add at Start</button>\n        <button onclick=\"onUpdateSelected()\">Update Selected</button>\n        <button onclick=\"onUpdateRandom()\">Update Random</button>\n        <button onclick=\"onRemoveSelected()\">Remove Selected</button>\n        <button onclick=\"onRemoveRandom()\">Remove Random</button>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine-dark",
        "enterprise": true,
        "modules": ["serverside"]
    }
}
