{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        filterParams: athleteFilterParams\n    },\n    {\n        field: 'country',\n        filter: 'agTextColumnFilter',\n        filterParams: countryFilterParams\n    },\n    {\n        field: 'sport',\n        filter: 'agTextColumnFilter',\n        filterParams: {\n            caseSensitive: true,\n            defaultOption: 'startsWith'\n        }\n    }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    sortable: true,\n    filter: true\n}" },
        { "name": "rowData", "value": "null" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    sortable: true,\n    filter: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'athlete',\n        filterParams: 'AG_LITERAL_athleteFilterParams'\n    },\n    {\n        field: 'country',\n        filter: 'agTextColumnFilter',\n        filterParams: 'AG_LITERAL_countryFilterParams'\n    },\n    {\n        field: 'sport',\n        filter: 'agTextColumnFilter',\n        filterParams: {\n            caseSensitive: true,\n            defaultOption: 'startsWith'\n        }\n    }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "function contains(target, lookingFor) {\n    return target && target.indexOf(lookingFor) >= 0;\n}",
        "var athleteFilterParams = {\n    filterOptions: [\n        'contains',\n        'notContains'\n    ],\n    textFormatter: function (r) {\n        if (r == null)\n            return null;\n        return r.toLowerCase().replace(/[àáâãäå]/g, 'a').replace(/æ/g, 'ae').replace(/ç/g, 'c').replace(/[èéêë]/g, 'e').replace(/[ìíîï]/g, 'i').replace(/ñ/g, 'n').replace(/[òóôõö]/g, 'o').replace(/œ/g, 'oe').replace(/[ùúûü]/g, 'u').replace(/[ýÿ]/g, 'y');\n    },\n    debounceMs: 200,\n    suppressAndOrCondition: true\n};",
        "var countryFilterParams = {\n    filterOptions: ['contains'],\n    textMatcher: function ({value, filterText}) {\n        var filterTextLowerCase = filterText ? filterText.toLowerCase() : '';\n        var valueLowerCase = value.toString().toLowerCase();\n        var aliases = {\n            usa: 'united states',\n            holland: 'netherlands',\n            vodka: 'russia',\n            niall: 'ireland',\n            sean: 'south africa',\n            alberto: 'mexico',\n            john: 'australia',\n            xi: 'china'\n        };\n        var literalMatch = contains(valueLowerCase, filterTextLowerCase);\n        return !!literalMatch || !!contains(valueLowerCase, aliases[filterTextLowerCase]);\n    },\n    trimInput: true,\n    debounceMs: 1000\n};"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "params.api.setRowData(data)"
    },
    "template": "GRID_TEMPLATE_PLACEHOLDER",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine", "exampleHeight": 555 }
}
