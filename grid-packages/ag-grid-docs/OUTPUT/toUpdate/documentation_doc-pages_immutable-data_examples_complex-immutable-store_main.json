{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n        {\n            field: \"product\",\n            enableRowGroup: true,\n            enablePivot: true,\n            rowGroupIndex: 0,\n            hide: true\n        },\n        {\n            field: \"portfolio\",\n            enableRowGroup: true,\n            enablePivot: true,\n            rowGroupIndex: 1,\n            hide: true\n        },\n        {\n            field: \"book\",\n            enableRowGroup: true,\n            enablePivot: true,\n            rowGroupIndex: 2,\n            hide: true\n        },\n        {\n            field: \"trade\",\n            width: 100\n        },\n        {\n            field: \"batch\",\n            width: 100,\n            cellClass: \"number\",\n            aggFunc: \"max\",\n            enableValue: true,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            field: \"current\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            field: \"previous\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Change\",\n            valueGetter: changeValueGetter,\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"PL 1\",\n            field: \"pl1\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"PL 2\",\n            field: \"pl2\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Gain-DX\",\n            field: \"gainDx\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"SX / PX\",\n            field: \"sxPx\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"99 Out\",\n            field: \"_99Out\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Submitter ID\",\n            field: \"submitterID\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Submitted Deal ID\",\n            field: \"submitterDealID\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: numberCellFormatter,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            field: \"dealType\",\n            enableRowGroup: true,\n            enablePivot: true\n        },\n        {\n            headerName: \"Bid\",\n            field: \"bidFlag\",\n            enableRowGroup: true,\n            enablePivot: true,\n            width: 100\n        },\n        {\n            field: \"comment\",\n            editable: true\n        }\n    ]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n        width: 120,\n        sortable: true,\n        resizable: true\n    }"
        },
        {
            "name": "autoGroupColumnDef",
            "value": "{\n        width: 250,\n        cellRendererParams: { checkbox: true }\n    }"
        },
        { "name": "rowSelection", "value": "\"multiple\"" },
        { "name": "groupSelectsChildren", "value": "true" },
        { "name": "immutableData", "value": "true" },
        { "name": "animateRows", "value": "true" },
        { "name": "suppressAggFuncInHeader", "value": "true" },
        { "name": "getRowNodeId", "value": "function (data) {\n        return data.trade;\n    }" }
    ],
    "components": [],
    "defaultColDef": "{\n    width: 120,\n    sortable: true,\n    resizable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n        {\n            field: \"product\",\n            enableRowGroup: true,\n            enablePivot: true,\n            rowGroupIndex: 0,\n            hide: true\n        },\n        {\n            field: \"portfolio\",\n            enableRowGroup: true,\n            enablePivot: true,\n            rowGroupIndex: 1,\n            hide: true\n        },\n        {\n            field: \"book\",\n            enableRowGroup: true,\n            enablePivot: true,\n            rowGroupIndex: 2,\n            hide: true\n        },\n        {\n            field: \"trade\",\n            width: 100\n        },\n        {\n            field: \"batch\",\n            width: 100,\n            cellClass: \"number\",\n            aggFunc: \"max\",\n            enableValue: true,\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            field: \"current\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            field: \"previous\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Change\",\n            valueGetter: \"AG_LITERAL_changeValueGetter\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"PL 1\",\n            field: \"pl1\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"PL 2\",\n            field: \"pl2\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Gain-DX\",\n            field: \"gainDx\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"SX / PX\",\n            field: \"sxPx\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"99 Out\",\n            field: \"_99Out\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Submitter ID\",\n            field: \"submitterID\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            headerName: \"Submitted Deal ID\",\n            field: \"submitterDealID\",\n            width: 200,\n            aggFunc: \"sum\",\n            enableValue: true,\n            cellClass: \"number\",\n            valueFormatter: \"AG_LITERAL_numberCellFormatter\",\n            cellRenderer: \"agAnimateShowChangeCellRenderer\"\n        },\n        {\n            field: \"dealType\",\n            enableRowGroup: true,\n            enablePivot: true\n        },\n        {\n            headerName: \"Bid\",\n            field: \"bidFlag\",\n            enableRowGroup: true,\n            enablePivot: true,\n            width: 100\n        },\n        {\n            field: \"comment\",\n            editable: true\n        }\n    ]",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "updateData",
            "params": "",
            "body": "function updateData() {\n    removeSomeItems();\n    addSomeItems();\n    updateSomeItems();\n    this.gridApi.setRowData(globalRowData);\n}"
        }
    ],
    "utils": [
        "var MIN_BOOK_COUNT = 10;",
        "var MAX_BOOK_COUNT = 20;",
        "var MIN_TRADE_COUNT = 1;",
        "var MAX_TRADE_COUNT = 10;",
        "var products = [\n    'Palm Oil',\n    'Rubber',\n    'Wool',\n    'Amber',\n    'Copper',\n    'Lead',\n    'Zinc',\n    'Tin',\n    'Aluminium',\n    'Aluminium Alloy',\n    'Nickel',\n    'Cobalt',\n    'Molybdenum',\n    'Recycled Steel',\n    'Corn',\n    'Oats',\n    'Rough Rice',\n    'Soybeans',\n    'Rapeseed',\n    'Soybean Meal',\n    'Soybean Oil',\n    'Wheat',\n    'Milk',\n    'Coca',\n    'Coffee C',\n    'Cotton No.2',\n    'Sugar No.11',\n    'Sugar No.14'\n];",
        "var portfolios = [\n    'Aggressive',\n    'Defensive',\n    'Income',\n    'Speculative',\n    'Hybrid'\n];",
        "var productToPortfolioToBooks = {};",
        "var nextBookId = 62472;",
        "var nextTradeId = 24287;",
        "var nextBatchId = 101;",
        "function changeValueGetter(params) {\n    return params.data.previous - params.data.current;\n}",
        "var globalRowData = [];",
        "function createRowData() {\n    globalRowData = [];\n    var thisBatch = nextBatchId++;\n    for (var i = 0; i < products.length; i++) {\n        var product = products[i];\n        productToPortfolioToBooks[product] = {};\n        for (var j = 0; j < portfolios.length; j++) {\n            var portfolio = portfolios[j];\n            productToPortfolioToBooks[product][portfolio] = [];\n            var bookCount = randomBetween(MAX_BOOK_COUNT, MIN_BOOK_COUNT);\n            for (var k = 0; k < bookCount; k++) {\n                var book = createBookName();\n                productToPortfolioToBooks[product][portfolio].push(book);\n                var tradeCount = randomBetween(MAX_TRADE_COUNT, MIN_TRADE_COUNT);\n                for (var l = 0; l < tradeCount; l++) {\n                    var trade = createTradeRecord(product, portfolio, book, thisBatch);\n                    globalRowData.push(trade);\n                }\n            }\n        }\n    }\n}",
        "function randomBetween(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}",
        "function createTradeRecord(product, portfolio, book, batch) {\n    var current = Math.floor(Math.random() * 100000) + 100;\n    var previous = current + Math.floor(Math.random() * 10000) - 2000;\n    var trade = {\n        product: product,\n        portfolio: portfolio,\n        book: book,\n        trade: createTradeId(),\n        submitterID: randomBetween(10, 1000),\n        submitterDealID: randomBetween(10, 1000),\n        dealType: Math.random() < 0.2 ? 'Physical' : 'Financial',\n        bidFlag: Math.random() < 0.5 ? 'Buy' : 'Sell',\n        current: current,\n        previous: previous,\n        pl1: randomBetween(100, 1000),\n        pl2: randomBetween(100, 1000),\n        gainDx: randomBetween(100, 1000),\n        sxPx: randomBetween(100, 1000),\n        _99Out: randomBetween(100, 1000),\n        batch: batch\n    };\n    return trade;\n}",
        "function numberCellFormatter(params) {\n    return Math.floor(params.value).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}",
        "function createBookName() {\n    nextBookId++;\n    return 'GL-' + nextBookId;\n}",
        "function createTradeId() {\n    nextTradeId++;\n    return nextTradeId;\n}",
        "function updateSomeItems() {\n    var updateCount = randomBetween(1, 6);\n    var itemsToUpdate = [];\n    for (var k = 0; k < updateCount; k++) {\n        if (globalRowData.length === 0) {\n            continue;\n        }\n        var indexToUpdate = Math.floor(Math.random() * globalRowData.length);\n        var itemToUpdate = globalRowData[indexToUpdate];\n        var updatedItem = updateImmutableObject(itemToUpdate, {\n            previous: itemToUpdate.current,\n            current: itemToUpdate.current + randomBetween(0, 1000) - 500\n        });\n        globalRowData[indexToUpdate] = updatedItem;\n        itemsToUpdate.push(updatedItem);\n    }\n    return itemsToUpdate;\n}",
        "function addSomeItems() {\n    var addCount = randomBetween(1, 6);\n    var itemsToAdd = [];\n    var batch = nextBatchId++;\n    for (var j = 0; j < addCount; j++) {\n        var portfolio = portfolios[Math.floor(Math.random() * portfolios.length)];\n        var books = productToPortfolioToBooks['Palm Oil'][portfolio];\n        var book = books[Math.floor(Math.random() * books.length)];\n        var product = products[Math.floor(Math.random() * products.length)];\n        var trade = createTradeRecord(product, portfolio, book, batch);\n        itemsToAdd.push(trade);\n        globalRowData.push(trade);\n    }\n    return itemsToAdd;\n}",
        "function removeSomeItems() {\n    var removeCount = randomBetween(1, 6);\n    var itemsToRemove = [];\n    for (var i = 0; i < removeCount; i++) {\n        if (globalRowData.length === 0) {\n            continue;\n        }\n        var indexToRemove = randomBetween(0, globalRowData.length);\n        var itemToRemove = globalRowData[indexToRemove];\n        globalRowData.splice(indexToRemove, 1);\n        itemsToRemove.push(itemToRemove);\n    }\n    return itemsToRemove;\n}",
        "function updateImmutableObject(original, newValues) {\n    var newObject = {};\n    Object.keys(original).forEach(function (key) {\n        newObject[key] = original[key];\n    });\n    Object.keys(newValues).forEach(function (key) {\n        newObject[key] = newValues[key];\n    });\n    return newObject;\n}"
    ],
    "onGridReady": "{\n    createRowData();\n    params.api.setRowData(globalRowData);\n}",
    "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px;\">\n        <button onclick=\"updateData()\">Update</button>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>\n\n",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine",
        "enterprise": true,
        "exampleHeight": 590,
        "modules": ["clientside", "rowgrouping"]
    }
}
