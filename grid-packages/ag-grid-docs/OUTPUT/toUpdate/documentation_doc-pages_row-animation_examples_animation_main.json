{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        minWidth: 150\n    },\n    {\n        field: 'country',\n        minWidth: 150\n    },\n    {\n        field: 'year',\n        minWidth: 120\n    },\n    {\n        field: 'gold',\n        aggFunc: 'sum'\n    },\n    {\n        field: 'silver',\n        aggFunc: 'sum'\n    },\n    {\n        field: 'bronze',\n        aggFunc: 'sum'\n    }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    sortable: true,\n    filter: true\n}" },
        { "name": "enableRangeSelection", "value": "true" },
        { "name": "animateRows", "value": "true" },
        { "name": "suppressAggFuncInHeader", "value": "true" },
        {
            "name": "autoGroupColumnDef",
            "value": "{\n    cellRenderer: 'agGroupCellRenderer',\n    headerName: 'Athlete',\n    minWidth: 200,\n    field: 'athlete'\n}"
        }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    sortable: true,\n    filter: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'athlete',\n        minWidth: 150\n    },\n    {\n        field: 'country',\n        minWidth: 150\n    },\n    {\n        field: 'year',\n        minWidth: 120\n    },\n    {\n        field: 'gold',\n        aggFunc: 'sum'\n    },\n    {\n        field: 'silver',\n        aggFunc: 'sum'\n    },\n    {\n        field: 'bronze',\n        aggFunc: 'sum'\n    }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [],
    "utils": [
        "var countDownDirection = true;",
        "function startInterval(api, columnApi) {\n    var actionIndex = 0;\n    resetCountdown();\n    executeAfterXSeconds();\n    function executeAfterXSeconds() {\n        setTimeout(function () {\n            var action = getActions()[actionIndex];\n            action(api, columnApi);\n            actionIndex++;\n            if (actionIndex >= getActions().length) {\n                actionIndex = 0;\n            }\n            resetCountdown();\n            executeAfterXSeconds();\n        }, 3000);\n    }\n    setTitleFormatted(null);\n}",
        "function resetCountdown() {\n    document.querySelector('#animationCountdown').style.width = countDownDirection ? '100%' : '0%';\n    countDownDirection = !countDownDirection;\n}",
        "function setTitleFormatted(apiName, methodName, paramsName) {\n    var html;\n    if (apiName === null) {\n        html = '<span class=\"code-highlight-yellow\">command:> </span>';\n    } else {\n        html = '<span class=\"code-highlight-yellow\">command:> </span> ' + '<span class=\"code-highlight-blue\">' + apiName + '</span>' + '<span class=\"code-highlight-blue\">.</span>' + '<span class=\"code-highlight-yellow\">' + methodName + '</span>' + '<span class=\"code-highlight-blue\"></span>' + '<span class=\"code-highlight-blue\">(</span>' + '<span class=\"code-highlight-green\">' + paramsName + '</span>' + '<span class=\"code-highlight-blue\">)</span>';\n    }\n    document.querySelector('#animationAction').innerHTML = html;\n}",
        "function getActions() {\n    return [\n        function (api, columnApi) {\n            columnApi.applyColumnState({\n                state: [{\n                        colId: 'country',\n                        sort: 'asc'\n                    }],\n                defaultState: { sort: null }\n            });\n            setTitleFormatted('api', 'applyColumnState', 'country: \\'asc\\'');\n        },\n        function (api, columnApi) {\n            columnApi.applyColumnState({\n                state: [\n                    {\n                        colId: 'year',\n                        sort: 'asc'\n                    },\n                    {\n                        colId: 'country',\n                        sort: 'asc'\n                    }\n                ],\n                defaultState: { sort: null }\n            });\n            setTitleFormatted('api', 'applyColumnState', 'year: \\'asc\\', country \\'asc\\'');\n        },\n        function (api, columnApi) {\n            columnApi.applyColumnState({\n                state: [\n                    {\n                        colId: 'year',\n                        sort: 'asc'\n                    },\n                    {\n                        colId: 'country',\n                        sort: 'desc'\n                    }\n                ],\n                defaultState: { sort: null }\n            });\n            setTitleFormatted('api', 'applyColumnState', 'year: \\'asc\\', country: \\'desc\\'');\n        },\n        function (api, columnApi) {\n            columnApi.applyColumnState({ defaultState: { sort: null } });\n            setTitleFormatted('api', 'applyColumnState', 'clear sort');\n        }\n    ];\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "{\n    params.api.setRowData(data.slice(0, 50));\n    startInterval(params.api, params.columnApi);\n}"
    },
    "template": "<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <div style=\"display: inline-block; height: 10px; margin-top: 5px; margin-right: 10px; width: 100px; border: 1px solid grey;\">\n            <div id=\"animationCountdown\" class=\"transition-width\" style=\"background-color: grey; height: 100%; width: 0%;\"></div>\n        </div>\n        <span id=\"animationAction\"></span>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine-dark",
        "enterprise": true,
        "modules": ["clientside", "rowgrouping", "menu", "setfilter", "columnpanel"]
    }
}
