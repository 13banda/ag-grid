{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'symbol',\n        maxWidth: 120\n    },\n    {\n        field: 'name',\n        minWidth: 250\n    },\n    {\n        field: 'change',\n        cellRenderer: 'agSparklineCellRenderer'\n    },\n    {\n        field: 'volume',\n        type: 'numericColumn',\n        maxWidth: 140\n    }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true\n}" },
        { "name": "rowData", "value": "getData()" },
        { "name": "rowHeight", "value": "50" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'symbol',\n        maxWidth: 120\n    },\n    {\n        field: 'name',\n        minWidth: 250\n    },\n    {\n        field: 'change',\n        cellRenderer: 'agSparklineCellRenderer'\n    },\n    {\n        field: 'volume',\n        type: 'numericColumn',\n        maxWidth: 140\n    }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "start",
            "params": "",
            "body": "function start() {\n    if (intervalId) {\n        return;\n    }\n    var gridApi = this.gridApi;\n    function updateData() {\n        const itemsToUpdate = [];\n        gridApi.forEachNodeAfterFilterAndSort(function (rowNode) {\n            let data = rowNode.data;\n            const n = data.change.length;\n            const v = Math.random() > 0.5 ? Number(Math.random()) : -Number(Math.random());\n            data.change = [\n                ...data.change.slice(1, n),\n                v\n            ];\n            itemsToUpdate.push(data);\n        });\n        gridApi.applyTransaction({ update: itemsToUpdate });\n    }\n    intervalId = setInterval(updateData, 300);\n}"
        },
        {
            "name": "stop",
            "params": "",
            "body": "function stop() {\n    if (intervalId === undefined) {\n        return;\n    }\n    clearInterval(intervalId);\n    intervalId = undefined;\n}"
        }
    ],
    "utils": ["var intervalId;"],
    "template": "<div style=\"height: 100%; display: flex; flex-direction: column;\">\n    <div style=\"margin-bottom: 4px;\">\n        <button onclick=\"start()\">► Start</button>\n        <button onclick=\"stop()\">■ Stop</button>\n    </div>\n    <div style=\"flex-grow: 1;\">\n        GRID_TEMPLATE_PLACEHOLDER\n    </div>\n</div>",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine",
        "enterprise": true,
        "exampleHeight": 610,
        "modules": ["clientside", "sparklines"]
    }
}
