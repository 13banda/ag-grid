{
    "eventHandlers": [
        {
            "name": "rangeSelectionChanged",
            "handlerName": "onRangeSelectionChanged",
            "handler": "function onRangeSelectionChanged(event) {\n    var lbRangeCount = document.querySelector('#lbRangeCount');\n    var lbEagerSum = document.querySelector('#lbEagerSum');\n    var lbLazySum = document.querySelector('#lbLazySum');\n    var cellRanges = this.gridApi.getCellRanges();\n    if (!cellRanges || cellRanges.length === 0) {\n        lbRangeCount.innerHTML = '0';\n        lbEagerSum.innerHTML = '-';\n        lbLazySum.innerHTML = '-';\n        return;\n    }\n    lbRangeCount.innerHTML = cellRanges.length + '';\n    var sum = 0;\n    var api = this.gridApi;\n    if (cellRanges) {\n        cellRanges.forEach(function (range) {\n            var startRow = Math.min(range.startRow.rowIndex, range.endRow.rowIndex);\n            var endRow = Math.max(range.startRow.rowIndex, range.endRow.rowIndex);\n            for (var rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\n                range.columns.forEach(function (column) {\n                    var rowModel = api.getModel();\n                    var rowNode = rowModel.getRow(rowIndex);\n                    var value = api.getValue(column, rowNode);\n                    if (typeof value === 'number') {\n                        sum += value;\n                    }\n                });\n            }\n        });\n    }\n    lbEagerSum.innerHTML = sum + '';\n    if (event.started) {\n        lbLazySum.innerHTML = '?';\n    }\n    if (event.finished) {\n        lbLazySum.innerHTML = sum + '';\n    }\n}"
        }
    ],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        minWidth: 150\n    },\n    {\n        field: 'age',\n        maxWidth: 90\n    },\n    {\n        field: 'country',\n        minWidth: 150\n    },\n    {\n        field: 'year',\n        maxWidth: 90\n    },\n    {\n        field: 'date',\n        minWidth: 150\n    },\n    {\n        field: 'sport',\n        minWidth: 150\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }\n]"
        },
        { "name": "defaultColDef", "value": "{\n    flex: 1,\n    minWidth: 100,\n    editable: true\n}" },
        { "name": "enableRangeSelection", "value": "true" },
        {
            "name": "processCellForClipboard",
            "value": "function (params) {\n    if (params.column.getColId() === 'athlete' && params.value && params.value.toUpperCase) {\n        return params.value.toUpperCase();\n    }\n    return params.value;\n}"
        },
        {
            "name": "processCellFromClipboard",
            "value": "function (params) {\n    if (params.column.getColId() === 'athlete' && params.value && params.value.toLowerCase) {\n        return params.value.toLowerCase();\n    }\n    return params.value;\n}"
        }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    editable: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'athlete',\n        minWidth: 150\n    },\n    {\n        field: 'age',\n        maxWidth: 90\n    },\n    {\n        field: 'country',\n        minWidth: 150\n    },\n    {\n        field: 'year',\n        maxWidth: 90\n    },\n    {\n        field: 'date',\n        minWidth: 150\n    },\n    {\n        field: 'sport',\n        minWidth: 150\n    },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "onAddRange",
            "params": "",
            "body": "function onAddRange() {\n    this.gridApi.addCellRange({\n        rowStartIndex: 4,\n        rowEndIndex: 8,\n        columnStart: 'age',\n        columnEnd: 'date'\n    });\n}"
        },
        {
            "name": "onClearRange",
            "params": "",
            "body": "function onClearRange() {\n    this.gridApi.clearRangeSelection();\n}"
        }
    ],
    "utils": [],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "params.api.setRowData(data)"
    },
    "template": "<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <button onclick=\"onAddRange()\">Add Range</button>\n        <button onclick=\"onClearRange()\">Clear Range</button>\n        Range Count:\n        <span id=\"lbRangeCount\" style=\"padding-right: 20px;\"></span>\n        Eager Sum:\n        <span id=\"lbEagerSum\" style=\"padding-right: 20px;\"></span>\n        Lazy Sum:\n        <span id=\"lbLazySum\" style=\"padding-right: 20px;\"></span>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
    "gridSettings": {
        "width": "100%",
        "height": "100%",
        "theme": "ag-theme-alpine",
        "enterprise": true,
        "exampleHeight": 700,
        "modules": ["clientside", "range", "menu", "clipboard"]
    }
}
