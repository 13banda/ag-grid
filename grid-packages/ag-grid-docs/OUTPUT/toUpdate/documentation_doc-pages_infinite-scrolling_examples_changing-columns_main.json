{
    "eventHandlers": [],
    "properties": [
        {
            "name": "columnDefs",
            "value": "[\n    {\n        field: 'athlete',\n        colId: 'athlete',\n        minWidth: 180\n    },\n    {\n        field: 'age',\n        colId: 'age'\n    },\n    {\n        field: 'country',\n        colId: 'country',\n        minWidth: 180\n    },\n    {\n        field: 'year',\n        colId: 'year'\n    },\n    {\n        field: 'sport',\n        colId: 'sport',\n        minWidth: 180\n    }\n]"
        },
        {
            "name": "defaultColDef",
            "value": "{\n    flex: 1,\n    sortable: true,\n    resizable: true,\n    filter: true\n}"
        },
        { "name": "rowModelType", "value": "'infinite'" }
    ],
    "components": [],
    "defaultColDef": "{\n    flex: 1,\n    sortable: true,\n    resizable: true,\n    filter: true\n}",
    "globalComponents": [],
    "parsedColDefs": "[\n    {\n        field: 'athlete',\n        colId: 'athlete',\n        minWidth: 180\n    },\n    {\n        field: 'age',\n        colId: 'age'\n    },\n    {\n        field: 'country',\n        colId: 'country',\n        minWidth: 180\n    },\n    {\n        field: 'year',\n        colId: 'year'\n    },\n    {\n        field: 'sport',\n        colId: 'sport',\n        minWidth: 180\n    }\n]",
    "instanceMethods": [],
    "externalEventHandlers": [
        {
            "name": "onBtShowYearColumn",
            "params": "",
            "body": "function onBtShowYearColumn() {\n    this.gridApi.setColumnDefs([\n        {\n            field: 'athlete',\n            colId: 'athlete'\n        },\n        {\n            field: 'age',\n            colId: 'age'\n        },\n        {\n            field: 'country',\n            colId: 'country'\n        },\n        {\n            field: 'year',\n            colId: 'year'\n        },\n        {\n            field: 'sport',\n            colId: 'sport'\n        }\n    ]);\n}"
        },
        {
            "name": "onBtHideYearColumn",
            "params": "",
            "body": "function onBtHideYearColumn() {\n    this.gridApi.setColumnDefs([\n        {\n            field: 'athlete',\n            colId: 'athlete'\n        },\n        {\n            field: 'age',\n            colId: 'age'\n        },\n        {\n            field: 'country',\n            colId: 'country'\n        },\n        {\n            field: 'sport',\n            colId: 'sport'\n        }\n    ]);\n}"
        }
    ],
    "utils": [
        "function sortAndFilter(allOfTheData, sortModel, filterModel) {\n    return sortData(sortModel, filterData(filterModel, allOfTheData));\n}",
        "function sortData(sortModel, data) {\n    var sortPresent = sortModel && sortModel.length > 0;\n    if (!sortPresent) {\n        return data;\n    }\n    var resultOfSort = data.slice();\n    resultOfSort.sort(function (a, b) {\n        for (var k = 0; k < sortModel.length; k++) {\n            var sortColModel = sortModel[k];\n            var valueA = a[sortColModel.colId];\n            var valueB = b[sortColModel.colId];\n            if (valueA == valueB) {\n                continue;\n            }\n            var sortDirection = sortColModel.sort === 'asc' ? 1 : -1;\n            if (valueA > valueB) {\n                return sortDirection;\n            } else {\n                return sortDirection * -1;\n            }\n        }\n        return 0;\n    });\n    return resultOfSort;\n}",
        "function filterData(filterModel, data) {\n    var filterPresent = filterModel && Object.keys(filterModel).length > 0;\n    if (!filterPresent) {\n        return data;\n    }\n    var resultOfFilter = [];\n    for (var i = 0; i < data.length; i++) {\n        var item = data[i];\n        var filterFails = false;\n        var filterKeys = Object.keys(filterModel);\n        filterKeys.forEach(function (filterKey) {\n            var filterValue = filterModel[filterKey].filter;\n            var valueForRow = item[filterKey];\n            if (filterValue != valueForRow) {\n                filterFails = true;\n            }\n        });\n        if (!filterFails) {\n            resultOfFilter.push(item);\n        }\n    }\n    return resultOfFilter;\n}"
    ],
    "data": {
        "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
        "callback": "{\n    data.forEach(function (d, index) {\n        d.id = 'R' + (index + 1);\n    });\n    var dataSource = {\n        rowCount: undefined,\n        getRows: function (params) {\n            console.log('asking for ' + params.startRow + ' to ' + params.endRow);\n            setTimeout(function () {\n                var dataAfterSortingAndFiltering = sortAndFilter(data, params.sortModel, params.filterModel);\n                var rowsThisPage = dataAfterSortingAndFiltering.slice(params.startRow, params.endRow);\n                var lastRow = -1;\n                if (dataAfterSortingAndFiltering.length <= params.endRow) {\n                    lastRow = dataAfterSortingAndFiltering.length;\n                }\n                params.successCallback(rowsThisPage, lastRow);\n            }, 500);\n        }\n    };\n    params.api.setDatasource(dataSource);\n}"
    },
    "template": "<div class=\"test-container\">\n\n    <div class=\"test-header\">\n        <button onclick=\"onBtShowYearColumn()\">Show Year</button>\n        <button onclick=\"onBtHideYearColumn()\">Hide Year</button>\n    </div>\n\n    GRID_TEMPLATE_PLACEHOLDER\n\n</div>",
    "gridSettings": { "width": "100%", "height": "100%", "theme": "ag-theme-alpine", "modules": ["infinite"] }
}
