---
title: "Overlays"
---

Overlays are for displaying messages over the grid.

## Loading overlay

Is possible to show or hide the loading overlay by setting the property 'loading' to `true` or `false`.

{% apiDocumentation source="grid-options/properties.json" section="overlays" names=["loading"] /%}

{% gridExampleRunner title="Loading overlay" name="loading-overlay"  exampleHeight=350 /%}

## No rows overlay

By default, the grid shows a 'no rows' overlay when there are no rows to show and the grid is not in the 'loading' state.

To not show thee `no rows` overlay when `rowData` is empty, set the property `suppressNoRowsOverlay` to `true`.

{% gridExampleRunner title="No Rows Overlay" name="no-rows-overlay"  exampleHeight=350 /%}

Is also possible to programmatically show or hide the no-rows overlay using the grid APIs:

{% apiDocumentation source="grid-api/api.json" section="overlays" names=["showNoRowsOverlay", "hideOverlay"] /%}


## Initial loading

When `loading` is unset and `suppressNoRowsOverlay` is unset, the following behaviour is observed:

- The **Loading Overlay** is displayed if `rowData` or `columnDefs` are initially set to `null` or `undefined`.
- The **No Rows Overlay** is displayed if `rowData` is an empty list.

{% gridExampleRunner title="Overlays Default Behaviour" name="overlays-default-behaviour"  exampleHeight=350 /%}

## Customisation

HTML templates can be provided to the overlays using grid properties.

{% apiDocumentation source="grid-options/properties.json" section="overlays" names=["overlayLoadingTemplate", "overlayNoRowsTemplate"] /%}

### Custom Loading Overlay

Loading Overlay Component is configured via the grid properties `loadingOverlayComponent` and `loadingOverlayComponentParams`.

{% if isFramework("javascript", "angular") %}
Implement this interface to provide a custom overlay when data is being loaded.
{% /if %}

{% if isFramework("vue") %}
Any valid Vue component can be a loading overlay component, however it is also possible to implement the following optional methods:
{% /if %}

{% if isFramework("angular") %}
```ts
interface extends ILoadingOverlayAngularComp {
   // mandatory methods

   // The agInit(params) method is called on the overlay once.
   agInit(params: ILoadingOverlayParams);

   // optional methods

   // Gets called when the `loadingOverlayComponentParams` grid option is updated
   refresh(params: ILoadingOverlayParams): void;

}
```
{% /if %}

{% if isFramework("javascript") %}
```ts
interface ILoadingOverlayComp {
   // mandatory methods

   // Returns the DOM element for this overlay
   getGui(): HTMLElement;

   // optional methods

   // The init(params) method is called on the overlay once. See below for details on the parameters.
   init(params: ILoadingOverlayParams): void;

   // Gets called when the `loadingOverlayComponentParams` grid option is updated
   refresh(params: ILoadingOverlayParams): void;
}
```
{% /if %}

{% if isFramework("vue") %}
```ts
interface ILoadingOverlay {
   // Gets called when the `loadingOverlayComponentParams` grid option is updated
   refresh(params: ILoadingOverlayParams): void;
}
```
{% /if %}

{% if isFramework("angular") %}
The `agInit(params)` method takes a params object with the items listed below:
{% /if %}

{% if isFramework("javascript") %}
The interface for the overlay parameters is as follows:
{% /if %}

{% if isFramework("react") %}
When a loading overlay component is instantiated within the grid, the following will be made available on  `props`:
{% /if %}

{% if isFramework("vue") %}
When a custom loading overlay is instantiated, the following will be made available on `this.params`:
{% /if %}

{% if isFramework("javascript", "angular", "vue") %}
{% interfaceDocumentation interfaceName="ILoadingOverlayParams" /%}
{% /if %}

{% if isFramework("react") %}
{% interfaceDocumentation interfaceName="CustomLoadingOverlayProps" /%}
{% /if %}

This example demonstrates how to provide a custom loading overlay component.

{% gridExampleRunner title="Custom Loading Overlay Components" name="custom-overlay-loading" /%}

### Custom No Rows Overlay

No Rows Overlay Component is configured via the grid properties `noRowsOverlayComponent` and `noRowsOverlayComponentParams`.

{% if isFramework("javascript", "angular") %}
Implement this interface to provide a custom overlay when no rows loaded.
{% /if %}

{% if isFramework("vue") %}
Any valid Vue component can be a no rows overlay component, however it is also possible to implement the following optional methods:
{% /if %}

{% if isFramework("angular") %}
```ts
interface extends INowRowsOverlayAngularComp {
   // mandatory methods

   // The agInit(params) method is called on the overlay once.
   agInit(params: INoRowsOverlayParams);

   // optional methods

   // Gets called when the `noRowsOverlayComponentParams` grid option is updated
   refresh(params: INoRowsOverlayParams): void;
}
```
{% /if %}

{% if isFramework("javascript") %}
```ts
interface INoRowsOverlayComp {
   // mandatory methods

   // Returns the DOM element for this overlay
   getGui(): HTMLElement;

   // optional methods

   // The init(params) method is called on the overlay once. See below for details on the parameters.
   init(params: INoRowsOverlayParams): void;

   // Gets called when the `noRowsOverlayComponentParams` grid option is updated
   refresh(params: INoRowsOverlayParams): void;
}
```
{% /if %}

{% if isFramework("vue") %}
```ts
interface INoRowsOverlay {
   // Gets called when the `noRowsOverlayComponentParams` grid option is updated
   refresh(params: INoRowsOverlayParams): void;
}
```
{% /if %}

{% if isFramework("angular") %}
The `agInit(params)` method takes a params object with the items listed below:
{% /if %}

{% if isFramework("javascript") %}
The interface for the overlay parameters is as follows:
{% /if %}

{% if isFramework("react") %}
When a no rows overlay component is instantiated within the grid, the following will be made available on  `props`:
{% /if %}

{% if isFramework("vue") %}
When a custom no rows overlay is instantiated, the following will be made available on `this.params`:
{% /if %}

{% if isFramework("javascript", "angular", "vue") %}
{% interfaceDocumentation interfaceName="INoRowsOverlayParams" /%}
{% /if %}

{% if isFramework("react") %}
{% interfaceDocumentation interfaceName="CustomNoRowsOverlayProps" /%}
{% /if %}

This example demonstrates how to provide a custom no-rows overlay component.

{% gridExampleRunner title="Custom No Rows Overlay Components" name="custom-overlay-no-rows" /%}
