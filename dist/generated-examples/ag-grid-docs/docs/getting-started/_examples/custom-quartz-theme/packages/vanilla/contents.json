{"isEnterprise":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".ag-theme-quartz, .ag-theme-quartz-dark {\n      /* Changes the color of the grid text */\n      --ag-foreground-color: rgb(14, 68, 145);\n      /* Changes the color of the grid background */\n      --ag-background-color: rgba(241, 247, 255);\n      /* Changes the header color of the top row */\n      --ag-header-background-color: rgba(228, 237, 250);\n      /* Changes the hover color of the row*/\n      --ag-row-hover-color: rgba(0, 38, 255, 0.1);\n}\n","main.js":"const columnDefs = [\n  { field: 'athlete', minWidth: 170 },\n  { field: 'age' },\n  { field: 'country' },\n  { field: 'year' },\n  { field: 'date' },\n  { field: 'sport' },\n  { field: 'gold' },\n  { field: 'silver' },\n  { field: 'bronze' },\n  { field: 'total' },\n]\n\nlet gridApi;\n\nconst gridOptions = {\n  rowData: null,\n  columnDefs: columnDefs,\n  defaultColDef: {\n    editable: true,\n    filter: true,\n  }\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n  fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n    .then(response => response.json())\n    .then((data) => gridApi.setGridOption('rowData', data))\n})","index.html":"<div id=\"myGrid\" style=\"height: 100%;\" class=\"ag-theme-quartz ag-custom-theme\"></div>","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}