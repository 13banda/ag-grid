{"isEnterprise":true,"isIntegratedCharts":true,"entryFileName":"index.jsx","mainFileName":"index.jsx","styleFiles":[],"files":{"style.css":".wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.button-container {\n    flex-wrap: wrap;\n}\n\n#myGrid {\n    flex: 1;\n}\n\n#myChart {\n    flex: 2;\n    min-height: 530px;\n}","data.js":"export async function getData(chartType, delay = 100) {\n    return new Promise(resolve => setTimeout(() => resolve(generateData(chartType)), delay));\n}\n\nfunction generateData(chartType) {\n    switch (chartType) {\n        case 'heatmap': return generateHeatmapData();\n        case 'waterfall': return generateWaterfallData();\n    }\n}\n\nfunction generateHeatmapData() {\n    // Source: http://www.sheffieldweather.co.uk/Averages/MONTHLYAIRAVERAGE.htm\n    return [\n        { year: '2010', jan: 1.2, feb: 1.9, mar: 5.9, apr: 9.1, may: 10.9, jun: 15.2, jul: 16.2, aug: 14.9, sep: 13.4, oct: 9.5, nov: 4.9, dec: 0.4, },\n        { year: '2011', jan: 3.9, feb: 6, mar: 6.6, apr: 12, may: 12, jun: 14.2, jul: 15.8, aug: 15.8, sep: 14.9, oct: 12.2, nov: 8.9, dec: 5.4, },\n        { year: '2012', jan: 5.1, feb: 4.5, mar: 8.6, apr: 6.7, may: 11.6, jun: 13.4, jul: 15.5, aug: 16.2, sep: 12.7, oct: 8.8, nov: 6.1, dec: 4.2, },\n        { year: '2013', jan: 3.4, feb: 2.7, mar: 1.7, apr: 7.4, may: 10.6, jun: 14.1, jul: 18.4, aug: 16.8, sep: 13.3, oct: 11.7, nov: 6.2, dec: 6.3, },\n        { year: '2014', jan: 5, feb: 5.6, mar: 7.4, apr: 10.1, may: 12.2, jun: 15.3, jul: 17.9, aug: 14.9, sep: 14.4, oct: 11.4, nov: 7.8, dec: 5.2, },\n        { year: '2015', jan: 4.1, feb: 3.8, mar: 5.9, apr: 9.1, may: 10.6, jun: 13.9, jul: 15.7, aug: 15.8, sep: 12.2, oct: 10.2, nov: 8.7, dec: 8.6, },\n        { year: '2016', jan: 4.8, feb: 4.2, mar: 5.5, apr: 7, may: 11.8, jun: 14.6, jul: 16.6, aug: 16.6, sep: 15.4, oct: 10.2, nov: 5.4, dec: 6.3, },\n        { year: '2017', jan: 3.9, feb: 5.2, mar: 8, apr: 8.6, may: 12.8, jun: 15.7, jul: 16.4, aug: 15.2, sep: 13, oct: 11.9, nov: 6.5, dec: 4.7, },\n        { year: '2018', jan: 4.4, feb: 2.3, mar: 3.7, apr: 8.8, may: 13.8, jun: 16.4, jul: 19.5, aug: 17, sep: 13.4, oct: 10.3, nov: 7.4, dec: 6.4, },\n        { year: '2019', jan: 4.4, feb: 6.9, mar: 7.5, apr: 8.9, may: 11.5, jun: 14.1, jul: 17.8, aug: 17.1, sep: 13.7, oct: 9.2, nov: 5.4, dec: 5.4, },\n        { year: '2020', jan: 6.4, feb: 5.6, mar: 6.3, apr: 10.3, may: 12.8, jun: 15, jul: 15.6, aug: 17.2, sep: 13.7, oct: 9.8, nov: 8.1, dec: 4.6, },\n        { year: '2021', jan: 2.8, feb: 4.3, mar: 7.2, apr: 6.5, may: 10, jun: 16.1, jul: 18.4, aug: 16.1, sep: 16.2, oct: 11.6, nov: 7.7, dec: 5.4, },\n        { year: '2022', jan: 5.2, feb: 6.1, mar: 7.4, apr: 9.2, may: 13.3, jun: 15.5, jul: 18.5, aug: 18.4, sep: 14.5, oct: 12.1, nov: 8.4, dec: 3.6, },\n    ];\n}\n\nfunction generateWaterfallData() {\n    return [\n        { financials: 'Income\\nTax', amount: 185 },\n        { financials: 'VAT', amount: 145 },\n        { financials: 'NI', amount: 134 },\n        { financials: 'Corp\\nTax', amount: 55 },\n        { financials: 'Council\\nTax', amount: 34 },\n        { financials: 'Social\\nProtection', amount: -252 },\n        { financials: 'Health', amount: -155 },\n        { financials: 'Education', amount: -112 },\n        { financials: 'Defence', amount: -65 },\n        { financials: 'Debt\\nInterest', amount: -63 },\n        { financials: 'Housing', amount: -31 },\n    ];\n}","index.jsx":"\n'use strict';\n\nimport React, { useCallback, useMemo, useRef, useState, StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { AgGridReact } from '@ag-grid-community/react';\nimport '@ag-grid-community/styles/ag-grid.css';\nimport '@ag-grid-community/styles/ag-theme-quartz.css';\nimport './style.css';\nimport { getData } from './data.js';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { GridChartsModule } from '@ag-grid-enterprise/charts-enterprise';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ModuleRegistry } from '@ag-grid-community/core';\nModuleRegistry.registerModules([ClientSideRowModelModule, GridChartsModule, MenuModule]);\n\n\n\nlet chartRef;\n\nconst heatmapColIds = [\n    'year',\n    'jan',\n    'feb',\n    'mar',\n    'apr',\n    'may',\n    'jun',\n    'jul',\n    'aug',\n    'sep',\n    'oct',\n    'nov',\n    'dec',\n];\n\nconst heatmapColDefs = [\n    { field: 'year', width: 150, chartDataType: 'category' },\n    { field: 'jan' },\n    { field: 'feb' },\n    { field: 'mar' },\n    { field: 'apr' },\n    { field: 'may' },\n    { field: 'jun' },\n    { field: 'jul' },\n    { field: 'aug' },\n    { field: 'sep' },\n    { field: 'oct' },\n    { field: 'nov' },\n    { field: 'dec' },\n];\n\nconst waterfallColIds = ['financials', 'amount'];\n\nconst waterfallColDefs = [\n    { field: 'financials', width: 150, chartDataType: 'category' },\n    { field: 'amount', chartDataType: 'series' },\n];\n\n\n\nconst GridExample = () => {\n    const gridRef = useRef();\n    const containerStyle = useMemo(() => ({ width: '100%', height: '100%' }), []);\n    const gridStyle = useMemo(() => ({height: '100%', width: '100%'}), []);\n    \n    const [columnDefs, setColumnDefs] = useState(heatmapColDefs);\n    const defaultColDef = useMemo(() => { return {\n    flex: 1,\n    minWidth: 100,\n} }, []);\n    const popupParent = useMemo(() => { return document.body }, []);\n    const chartToolPanelsDef = useMemo(() => { return {\n    defaultToolPanel: 'settings'\n} }, []);\n\n\n            const onGridReady = useCallback((params) => {\n                /** DARK INTEGRATED START **/\n    const isInitialModeDark = () => {\n            const attr = document.documentElement.getAttribute('data-default-theme');\n            return attr ? attr.endsWith('-dark') : false;\n        };\n      \n        const updateChartThemes = (isDark) => {           \n            const themes = ['ag-default', 'ag-material', 'ag-sheets', 'ag-polychroma', 'ag-vivid'];            \n            const currentThemes = params.api.getGridOption('chartThemes');                    \n            const customTheme = currentThemes && currentThemes.some(theme => theme.startsWith('my-custom-theme'));\n            \n            let modifiedThemes = customTheme\n                ? (isDark ? ['my-custom-theme-dark', 'my-custom-theme-light'] : ['my-custom-theme-light', 'my-custom-theme-dark'])\n                : Array.from(new Set(themes.map((theme) => theme + (isDark ? '-dark' : ''))));                      \n\n            // updating the 'chartThemes' grid option will cause the chart to reactively update!\n            params.api.setGridOption('chartThemes', modifiedThemes);\n        };\n\n        // update chart themes when example first loads\n        updateChartThemes(isInitialModeDark());\n\n        const handleColorSchemeChange = (event) => {\n            const { darkMode } = event.detail;\n            updateChartThemes(darkMode);\n        }\n\n        // listen for user-triggered dark mode changes (not removing listener is fine here!)\n        document.addEventListener('color-scheme-change', handleColorSchemeChange);\n    /** DARK INTEGRATED END **/\n\n    getData('heatmap').then(rowData => params.api.setGridOption('rowData', rowData));\n\n            }, []);\n\nconst onFirstDataRendered = useCallback((params) => {\n    chartRef = params.api.createRangeChart({\n        chartContainer: document.querySelector('#myChart'),\n        chartType: 'heatmap',\n        cellRange: {\n            columns: heatmapColIds,\n        },\n    });\n}, [heatmapColIds])\n\n   const updateChart = useCallback((chartType) => {\n    getData(chartType).then((rowData) => {\n        gridRef.current.api.updateGridOptions({\n            columnDefs: chartType === 'heatmap' ? heatmapColDefs : waterfallColDefs,\n            rowData,\n        });\n        gridRef.current.api.updateChart({\n            type: 'rangeChartUpdate',\n            chartId: chartRef.chartId,\n            chartType,\n            cellRange: {\n                columns: chartType === 'heatmap' ? heatmapColIds : waterfallColIds,\n            },\n        });\n    });\n}, [getData,heatmapColDefs,waterfallColDefs,chartRef,heatmapColIds,waterfallColIds])\n\n    return  (\n            <div style={containerStyle}>\n                <div className=\"wrapper\">\n    <div className=\"button-container\">\n        <button onClick={() => updateChart('heatmap')}>Heatmap</button>\n        <button onClick={() => updateChart('waterfall')}>Waterfall</button>\n    </div>\n    \n        <div style={gridStyle} className={/** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/}>\n            <AgGridReact\n                ref={gridRef}\n                \ncolumnDefs={columnDefs}\ndefaultColDef={defaultColDef}\npopupParent={popupParent}\nenableRangeSelection={true}\nenableCharts={true}\nchartToolPanelsDef={chartToolPanelsDef}\nonGridReady={onGridReady}\nonFirstDataRendered={onFirstDataRendered}\n            />\n        </div>\n    <div id=\"myChart\" className=\"ag-theme-quartz\"></div>\n</div>\n            </div>\n        );\n\n}\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(<StrictMode><GridExample /></StrictMode>);\n","index.html":"<div class=\"wrapper\">\n    <div class=\"button-container\">\n        <button onclick=\"updateChart('heatmap')\">Heatmap</button>\n        <button onclick=\"updateChart('waterfall')\">Waterfall</button>\n    </div>\n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n    <div id=\"myChart\" class=\"ag-theme-quartz\"></div>\n</div>"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function(link, callback) {\n        setTimeout(function() {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href)\n                    return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function(link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    }\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link')\n        return filter(links, function(link) { return link.href === url; });\n    }\n\n    var noop = function() {};\n\n    var loadCSS = function(url, existingLinks) {\n        const stylesUrl = url.includes(\"styles.css\") || url.includes(\"style.css\");\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(() => {\n                new Promise(function(resolve, reject) {\n                    var timeout = setTimeout(function() {\n                        reject('Unable to load CSS');\n                    }, waitSeconds * 1000);\n                    var _callback = function(error) {\n                        clearTimeout(timeout);\n                        link.onload = link.onerror = noop;\n                        setTimeout(function() {\n                            if (error) {\n                                reject(error);\n                                outerReject(error)\n                            } else {\n                                resolve('');\n                                outerResolve('');\n                            }\n                        }, 7);\n                    };\n                    var link = document.createElement('link');\n                    link.type = 'text/css';\n                    link.rel = 'stylesheet';\n                    link.href = url;\n                    link.setAttribute('data-systemjs-css', '');\n                    if (!isWebkit) {\n                        link.onload = function() {\n                            _callback();\n                        }\n                    } else {\n                        webkitLoadCheck(link, _callback);\n                    }\n                    link.onerror = function(event) {\n                        _callback(event.error || new Error('Error loading CSS file.'));\n                    };\n                    if (existingLinks.length)\n                        head.insertBefore(link, existingLinks[0]);\n                    else\n                        head.appendChild(link);\n                })\n                    // Remove the old link regardless of loading outcome\n                    .then(function(result) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        return result;\n                    }, function(err) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        throw err;\n                    })\n            }, stylesUrl ? 5 : 0)\n        })\n    };\n\n    exports.fetch = function(load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links))\n            return '';\n        return loadCSS(load.address, links);\n    };\n}\nelse {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise)\n            return builderPromise;\n\n        return builderPromise = System['import']('./css-plugin-base.js', module.id)\n            .then(function(CSSPluginBase) {\n                return new CSSPluginBase(function compile(source, address) {\n                    return {\n                        css: source,\n                        map: null,\n                        moduleSource: null,\n                        moduleFormat: null\n                    };\n                });\n            });\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function(load, fetch) {\n        if (!this.builder)\n            return '';\n        return fetch(load);\n    };\n    exports.translate = function(load, opts) {\n        if (!this.builder)\n            return '';\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function(load, opts) {\n        if (!this.builder)\n            return;\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function(loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function(loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = []\n    forEach(arrayLike, function(item) {\n        if (func(item))\n            arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i])\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths\n        },\n        map: {\n            // css: boilerplatePath + \"css.js\",\n            'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n            redux: 'npm:redux@4.2.1',\n            'react-redux': 'npm:react-redux@8.0.5',\n            'prop-types': 'npm:prop-types@15.8.1',\n\n            app: appLocation + 'app',\n\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            css: {},\n            react: {\n                main: './umd/react.development.js',\n            },\n            'react-dom': {\n                main: './umd/react-dom.development.js',\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js',\n            },\n            app: {\n                main: './index.tsx',\n                defaultExtension: 'tsx',\n            },\n            '@ag-grid-community/react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js'\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            }\n        },\n        meta: {\n            '*.jsx': {\n                babelOptions: {\n                    react: true\n                }\n            },\n            '*.css': { loader: 'css' }\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths:\n            {\n                // paths serve as alias\n                \"npm:\": \"https://cdn.jsdelivr.net/npm/\",\n                ...systemJsPaths\n            },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + \"css.js\",\n            // 'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n            redux: 'npm:redux@4.2.1',\n            'react-redux': 'npm:react-redux@8.0.5',\n            'prop-types': 'npm:prop-types@15.8.1',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap\n        },\n        packages: {\n            react: {\n                main: './umd/react.production.min.js'\n            },\n            'react-dom': {\n                main: './umd/react-dom.production.min.js'\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js'\n            },\n            redux: {\n                main: './dist/redux.min.js',\n                defaultExtension: 'js'\n            },\n            'react-redux': {\n                main: './dist/react-redux.min.js',\n                defaultExtension: 'js'\n            },\n            'prop-types': {\n                main: './prop-types.min.js',\n                defaultExtension: 'js',\n            },\n\n            app: {\n                defaultExtension: 'jsx'\n            },\n            '@ag-grid-community/react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n        meta: {\n            '*.jsx': {\n                babelOptions: {\n                    react: true\n                }\n            },\n            '*.css': {loader: 'css'}\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n"},"packageJson":{"name":"ag-grid-modules","dependencies":{"react":"18","react-dom":"18","@types/react":"18","@types/react-dom":"18","@ag-grid-community/react":"^31.2.0","@ag-grid-community/core":"^31.2.0","@ag-grid-community/styles":"^31.2.0","@ag-grid-community/client-side-row-model":"^31.2.0","@ag-grid-community/infinite-row-model":"^31.2.0","@ag-grid-community/csv-export":"^31.2.0","@ag-grid-enterprise/core":"^31.2.0","@ag-grid-enterprise/charts-enterprise":"^31.2.0","@ag-grid-enterprise/sparklines":"^31.2.0","@ag-grid-enterprise/clipboard":"^31.2.0","@ag-grid-enterprise/column-tool-panel":"^31.2.0","@ag-grid-enterprise/excel-export":"^31.2.0","@ag-grid-enterprise/filter-tool-panel":"^31.2.0","@ag-grid-enterprise/master-detail":"^31.2.0","@ag-grid-enterprise/menu":"^31.2.0","@ag-grid-enterprise/range-selection":"^31.2.0","@ag-grid-enterprise/rich-select":"^31.2.0","@ag-grid-enterprise/row-grouping":"^31.2.0","@ag-grid-enterprise/server-side-row-model":"^31.2.0","@ag-grid-enterprise/set-filter":"^31.2.0","@ag-grid-enterprise/multi-filter":"^31.2.0","@ag-grid-enterprise/advanced-filter":"^31.2.0","@ag-grid-enterprise/side-bar":"^31.2.0","@ag-grid-enterprise/status-bar":"^31.2.0","@ag-grid-enterprise/viewport-row-model":"^31.2.0"}}}