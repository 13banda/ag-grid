{"isEnterprise":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":[],"styleFiles":[],"files":{"styles.css":".mood {\n    border-radius: 15px;\n    border: 1px solid grey;\n    background-color: #e6e6e6;\n    padding: 15px;\n    text-align: center;\n    display: inline-block;\n    outline: none\n}\n\n.default {\n    border: 1px solid transparent !important;\n    padding: 4px;\n}\n\n.selected {\n    border: 1px solid lightgreen !important;\n    padding: 4px;\n}\n\n.doubling-input,\n.numeric-input {\n    font-size: calc(var(--ag-font-size) + 1px);\n    padding-left: calc(var(--ag-cell-horizontal-padding) - 1px);\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n}\n\n/* Completely fill the space for number arrow buttons */\n.doubling-input::-webkit-outer-spin-button, \n.doubling-input::-webkit-inner-spin-button {\n    width: 25px;\n    position: absolute;\n    top: 0px;\n    right: 1px;\n    height: 100%;\n}\n","doublingEditorVue.js":"import {nextTick} from 'vue';\n\nexport default {\n    template: `<input type=\"number\" v-model=\"value\" ref=\"input\" class=\"doubling-input\" />`,\n    data() {\n        return {\n            value: null\n        };\n    },\n    methods: {\n        /* Component Editor Lifecycle methods */\n        // the final value to send to the grid, on completion of editing\n        getValue() {\n            // this simple editor doubles any value entered into the input\n            return this.value * 2;\n        },\n\n        // Gets called once before editing starts, to give editor a chance to\n        // cancel the editing before it even starts.\n        isCancelBeforeStart() {\n            return false;\n        },\n\n        // Gets called once when editing is finished (eg if Enter is pressed).\n        // If you return true, then the result of the edit will be ignored.\n        isCancelAfterEnd() {\n            // our editor will reject any value greater than 1000\n            return this.value > 1000;\n        }\n    },\n    mounted() {\n        this.value = this.params.value;\n        nextTick(() => this.$refs.input.focus());\n    }\n};\n","main.js":"import Vue from 'vue';\nimport { AgGridVue } from 'ag-grid-vue';\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\nimport './styles.css';\nimport DoublingEditor from './doublingEditorVue.js';\nimport MoodEditor from './moodEditorVue.js';\nimport MoodRenderer from './moodRendererVue.js';\nimport NumericEditor from './numericEditorVue.js';\n\n\n\nconst VueExample = {\n    template: `\n        <div style=\"height: 100%\">\n            <div style=\"height: 100%; box-sizing: border-box;\">\n                <ag-grid-vue\n                        style=\"width: 100%; height: 100%;\"\n                        :class=\"themeClass\"\n                        id=\"myGrid\"\n                        :columnDefs=\"columnDefs\"\n                        @grid-ready=\"onGridReady\"\n                        :rowData=\"rowData\"\n                        :defaultColDef=\"defaultColDef\"\n                        ></ag-grid-vue>\n            </div>\n        </div>\n    `,\n    components: {\n        'ag-grid-vue': AgGridVue,\n        doublingEditor: DoublingEditor,\n        moodRenderer: MoodRenderer,\n        moodEditor: MoodEditor,\n        numericEditor: NumericEditor\n    },\n    data: function () {\n        return {\n            columnDefs: [{\n                headerName: \"Doubling\",\n                field: \"number\",\n                cellEditor: \"doublingEditor\",\n                editable: true,\n                width: 300\n            }, {\n                field: \"mood\",\n                cellRenderer: \"moodRenderer\",\n                cellEditor: \"moodEditor\",\n                editable: true,\n                width: 300\n            }, {\n                headerName: \"Numeric\",\n                field: \"number\",\n                cellEditor: \"numericEditor\",\n                editable: true,\n                width: 280\n            }],\n            gridApi: null,\n            defaultColDef: {\n                editable: true,\n                flex: 1,\n                minWidth: 100,\n                filter: true,\n            },\n            rowData: null,\n            themeClass: /** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/,\n        }\n    },\n    beforeMount() {\n        this.rowData = [\n            {\n                name: \"Bob\",\n                mood: \"Happy\",\n                number: 10\n            },\n            {\n                name: \"Harry\",\n                mood: \"Sad\",\n                number: 3\n            },\n            {\n                name: \"Sally\",\n                mood: \"Happy\",\n                number: 20\n            },\n            {\n                name: \"Mary\",\n                mood: \"Sad\",\n                number: 5\n            },\n            {\n                name: \"John\",\n                mood: \"Happy\",\n                number: 15\n            },\n            {\n                name: \"Jack\",\n                mood: \"Happy\",\n                number: 25\n            },\n            {\n                name: \"Sue\",\n                mood: \"Sad\",\n                number: 43\n            },\n            {\n                name: \"Sean\",\n                mood: \"Sad\",\n                number: 1335\n            },\n            {\n                name: \"Niall\",\n                mood: \"Happy\",\n                number: 2\n            },\n            {\n                name: \"Alberto\",\n                mood: \"Happy\",\n                number: 123\n            },\n            {\n                name: \"Fred\",\n                mood: \"Sad\",\n                number: 532\n            },\n            {\n                name: \"Jenny\",\n                mood: \"Happy\",\n                number: 34\n            },\n            {\n                name: \"Larry\",\n                mood: \"Happy\",\n                number: 13\n            }\n        ]\n    },\n    methods: {\n        onGridReady(params) {\n            this.gridApi = params.api;\n\n        },\n    }\n}\n\n\nnew Vue({\n    el: '#app',\n    components: {\n        'my-component': VueExample\n    }\n});\n","moodEditorVue.js":"import {nextTick} from 'vue';\n\nexport default {\n    template: `\n      <div :ref=\"'container'\" class=\"mood\" tabindex=\"0\" @keydown=\"onKeyDown\">\n      <img src=\"https://www.ag-grid.com/example-assets/smileys/happy.png\" @click=\"onClick(true)\" :class=\"{ selected: happy, default: !happy }\">\n      <img src=\"https://www.ag-grid.com/example-assets/smileys/sad.png\" @click=\"onClick(false)\" :class=\"{ selected: !happy, default: happy }\">\n      </div>\n    `,\n    data() {\n        return {\n            happy: false,\n            imgForMood: null\n        };\n    },\n    methods: {\n        getValue() {\n            return this.happy ? 'Happy' : 'Sad';\n        },\n\n        isPopup() {\n            return true;\n        },\n\n        setHappy(happy) {\n            this.happy = happy;\n        },\n\n        toggleMood() {\n            this.setHappy(!this.happy);\n        },\n\n        onClick(happy) {\n            this.setHappy(happy);\n            this.params.api.stopEditing();\n        },\n\n        onKeyDown(event) {\n            const key = event.key;\n            if (key === 'ArrowLeft' ||  // left\n                key === 'ArrowRight') {  // right\n                this.toggleMood();\n                event.stopPropagation();\n            }\n        }\n    },\n    created() {\n        this.setHappy(this.params.value === 'Happy');\n    },\n    mounted() {\n        nextTick(() => {\n            this.$refs.container.focus();\n        });\n    }\n};\n","moodRendererVue.js":"export default {\n    template: '<img style=\"width: 20px\" :src=\"imgForMood\" />',\n    data() {\n        return {\n            mood: 'Happy',\n            imgForMood: null\n        };\n    },\n    methods: {\n        refresh(params) {\n            this.params = params;\n            this.setMood(params);\n        },\n\n        setMood(params) {\n            this.mood = params.value;\n            this.imgForMood = `https://www.ag-grid.com/example-assets/smileys/${this.mood === 'Happy' ? 'happy.png' : 'sad.png'}`;\n        }\n    },\n    created() {\n        this.setMood(this.params);\n    }\n};\n","numericEditorVue.js":"import {nextTick} from 'vue';\n\n// backspace starts the editor on Windows\nconst KEY_BACKSPACE = 'Backspace';\nconst KEY_F2 = 'F2';\nconst KEY_ENTER = 'Enter';\nconst KEY_TAB = 'Tab';\n\nexport default {\n    template: `<input :ref=\"'input'\" @keydown=\"onKeyDown($event)\" v-model=\"value\"  class=\"numeric-input\" />`,\n    data() {\n        return {\n            value: '',\n            cancelBeforeStart: true,\n            highlightAllOnFocus: true\n        };\n    },\n    methods: {\n        getValue() {\n            const value = this.value;\n            return value === '' || value == null ? null : parseInt(value);\n        },\n\n        isCancelBeforeStart() {\n            return this.cancelBeforeStart;\n        },\n\n        setInitialState(params) {\n            let startValue;\n            let highlightAllOnFocus = true;\n            const eventKey = params.eventKey;\n\n            if (eventKey === KEY_BACKSPACE) {\n                // if backspace or delete pressed, we clear the cell\n                startValue = '';\n            } else if (eventKey && eventKey.length === 1) {\n                // if a letter was pressed, we start with the letter\n                startValue = eventKey;\n                highlightAllOnFocus = false;\n            } else {\n                // otherwise we start with the current value\n                startValue = params.value;\n                if (eventKey === KEY_F2) {\n                    highlightAllOnFocus = false;\n                }\n            }\n\n            this.value = startValue;\n            this.highlightAllOnFocus = highlightAllOnFocus;\n        },\n\n        // will reject the number if it greater than 1,000,000\n        // not very practical, but demonstrates the method.\n        isCancelAfterEnd() {\n            const value = this.getValue();\n            return value != null && value > 1000000;\n        },\n\n        onKeyDown(event) {\n            if (this.isLeftOrRight(event) || this.isBackspace(event)) {\n                event.stopPropagation();\n                return;\n            }\n\n            if (!this.finishedEditingPressed(event) && !this.isNumericKey(event)) {\n                if (event.preventDefault) event.preventDefault();\n            }\n        },\n\n        isCharNumeric(charStr) {\n            return /^\\d+$/.test(charStr);\n        },\n\n        isNumericKey(event) {\n            const charStr = event.key;\n            return this.isCharNumeric(charStr);\n        },\n\n        finishedEditingPressed(event) {\n            const charCode = event.key;\n            return charCode === KEY_ENTER || charCode === KEY_TAB;\n        },\n\n        isBackspace(event) {\n            return event.key === KEY_BACKSPACE;\n        },\n\n        isLeftOrRight(event) {\n            return ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1;\n        }\n    },\n\n    created() {\n        this.setInitialState(this.params)\n\n        const eventKey = this.params.eventKey;\n        const isCharacter = eventKey && eventKey.length === 1;\n\n        // only start edit if key pressed is a number, not a letter\n        this.cancelBeforeStart = isCharacter && '1234567890'.indexOf(eventKey) < 0;\n    },\n    mounted() {\n\n        nextTick(() => {\n            // need to check if the input reference is still valid - if the edit was cancelled before it started there\n            // wont be an editor component anymore\n            if (this.$refs.input) {\n                this.$refs.input.focus();\n                if (this.highlightAllOnFocus) {\n                    this.$refs.input.select();\n\n                    this.highlightAllOnFocus = false;\n                } else {\n                    // when we started editing, we want the caret at the end, not the start.\n                    // this comes into play in two scenarios: \n                    //   a) when user hits F2 \n                    //   b) when user hits a printable character\n                    const length = this.$refs.input.value ? this.$refs.input.value.length : 0;\n                    if (length > 0) {\n                        this.$refs.input.setSelectionRange(length, length);\n                    }\n                }\n\n                this.$refs.input.focus();\n            }\n        });\n    },\n};\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function(link, callback) {\n        setTimeout(function() {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href)\n                    return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function(link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    }\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link')\n        return filter(links, function(link) { return link.href === url; });\n    }\n\n    var noop = function() {};\n\n    var loadCSS = function(url, existingLinks) {\n        const stylesUrl = url.includes(\"styles.css\") || url.includes(\"style.css\");\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(() => {\n                new Promise(function(resolve, reject) {\n                    var timeout = setTimeout(function() {\n                        reject('Unable to load CSS');\n                    }, waitSeconds * 1000);\n                    var _callback = function(error) {\n                        clearTimeout(timeout);\n                        link.onload = link.onerror = noop;\n                        setTimeout(function() {\n                            if (error) {\n                                reject(error);\n                                outerReject(error)\n                            } else {\n                                resolve('');\n                                outerResolve('');\n                            }\n                        }, 7);\n                    };\n                    var link = document.createElement('link');\n                    link.type = 'text/css';\n                    link.rel = 'stylesheet';\n                    link.href = url;\n                    link.setAttribute('data-systemjs-css', '');\n                    if (!isWebkit) {\n                        link.onload = function() {\n                            _callback();\n                        }\n                    } else {\n                        webkitLoadCheck(link, _callback);\n                    }\n                    link.onerror = function(event) {\n                        _callback(event.error || new Error('Error loading CSS file.'));\n                    };\n                    if (existingLinks.length)\n                        head.insertBefore(link, existingLinks[0]);\n                    else\n                        head.appendChild(link);\n                })\n                    // Remove the old link regardless of loading outcome\n                    .then(function(result) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        return result;\n                    }, function(err) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        throw err;\n                    })\n            }, stylesUrl ? 5 : 0)\n        })\n    };\n\n    exports.fetch = function(load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links))\n            return '';\n        return loadCSS(load.address, links);\n    };\n}\nelse {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise)\n            return builderPromise;\n\n        return builderPromise = System['import']('./css-plugin-base.js', module.id)\n            .then(function(CSSPluginBase) {\n                return new CSSPluginBase(function compile(source, address) {\n                    return {\n                        css: source,\n                        map: null,\n                        moduleSource: null,\n                        moduleFormat: null\n                    };\n                });\n            });\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function(load, fetch) {\n        if (!this.builder)\n            return '';\n        return fetch(load);\n    };\n    exports.translate = function(load, opts) {\n        if (!this.builder)\n            return '';\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function(load, opts) {\n        if (!this.builder)\n            return;\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function(loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function(loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = []\n    forEach(arrayLike, function(item) {\n        if (func(item))\n            arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i])\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n    var sjsPaths = {};\n    if (typeof systemJsPaths !== 'undefined') {\n        sjsPaths = systemJsPaths;\n    }\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...sjsPaths,\n        },\n        map: {\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            // css: boilerplatePath + \"css.js\",\n            'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            // vuejsw\n            'vue': 'npm:vue@2.6.12/dist/vue.min.js',\n            // vue property decorator\n            'vue-class-component': 'npm:vue-class-component@6.3.2/dist/vue-class-component.min.js',\n            'vue-property-decorator': 'npm:vue-property-decorator@7.2.0/lib/vue-property-decorator.umd.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap\n        },\n\n        packages: {\n            'vue': {\n                defaultExtension: 'js'\n            },\n            'vue-class-component': {\n                defaultExtension: 'js'\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js'\n            },\n            app: {\n                defaultExtension: 'js'\n            },\n            '@ag-grid-community/vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js'\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            }\n        },\n        meta: {\n            '*.js': {\n                babelOptions: {\n                    stage1: true,\n                    stage2: true,\n                    es2015: true\n                }\n            },\n            '*.css': {loader: 'css'}\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths:\n            {\n                // paths serve as alias\n                \"npm:\": \"https://cdn.jsdelivr.net/npm/\",\n                ...systemJsPaths\n            },\n        map: {\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + \"css.js\",\n            // 'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n\n            // vuejs\n            'vue': 'npm:vue@2.6.12/dist/vue.min.js',\n            // vue property decorator\n            'vue-class-component': 'npm:vue-class-component@6.3.2/dist/vue-class-component.min.js',\n            'vue-property-decorator': 'npm:vue-property-decorator@7.2.0/lib/vue-property-decorator.umd.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap\n        },\n        packages: {\n            'vue': {\n                defaultExtension: 'js'\n            },\n            'vue-class-component': {\n                defaultExtension: 'js'\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js'\n            },\n            app: {\n                defaultExtension: 'js'\n            },\n            '@ag-grid-community/vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n        meta: {\n            '*.js': {\n                babelOptions: {\n                    stage1: true,\n                    stage2: true,\n                    es2015: true\n                }\n            },\n            '*.css': {loader: 'css'}\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n"}}