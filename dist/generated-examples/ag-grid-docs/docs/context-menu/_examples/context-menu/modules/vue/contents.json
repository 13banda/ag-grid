{"isEnterprise":true,"isIntegratedCharts":true,"entryFileName":"main.js","mainFileName":"main.js","styleFiles":[],"files":{"style.css":".red {\n    background-color: #CC222244;\n}\n\n.bold {\n    font-weight: bold;\n}\n","main.js":"\nimport Vue from 'vue';\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport '@ag-grid-community/styles/ag-grid.css';\nimport \"@ag-grid-community/styles/ag-theme-quartz.css\";\nimport './style.css';\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { ClipboardModule } from '@ag-grid-enterprise/clipboard';\nimport { ExcelExportModule } from '@ag-grid-enterprise/excel-export';\nimport { GridChartsModule } from '@ag-grid-enterprise/charts-enterprise';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { RangeSelectionModule } from '@ag-grid-enterprise/range-selection';\nimport { ModuleRegistry } from \"@ag-grid-community/core\";\nModuleRegistry.registerModules([ClientSideRowModelModule, ClipboardModule, ExcelExportModule, GridChartsModule, MenuModule, RangeSelectionModule]);\n\n\n\n\n\nconst VueExample = {\n    template: `\n        <div style=\"height: 100%\">\n                <ag-grid-vue\n      style=\"width: 100%; height: 100%;\"\n      :class=\"themeClass\"\n      :columnDefs=\"columnDefs\"\n      @grid-ready=\"onGridReady\"\n      :defaultColDef=\"defaultColDef\"\n      :enableRangeSelection=\"true\"\n      :allowContextMenuWithControlKey=\"true\"\n      :getContextMenuItems=\"getContextMenuItems\"\n      :rowData=\"rowData\"></ag-grid-vue>\n        </div>\n    `,\n    components: {\n        'ag-grid-vue': AgGridVue,\n        \n    },\n    data: function() {\n        return {\n            columnDefs: [{field:\"athlete\",\nminWidth:200},{field:\"age\"},{field:\"country\",\nminWidth:200},{field:\"year\"},{field:\"date\",\nminWidth:180},{field:\"sport\",\nminWidth:200},{field:\"gold\"},{field:\"silver\"},{field:\"bronze\"},{field:\"total\"}],\n            gridApi: null,\n            themeClass: /** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/,\n            defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n},\n            rowData: null\n        }\n    },\n    created() {\n                \n    },\n    methods: {\n        onGridReady(params) {\n        \n        this.gridApi = params.api;\n        \n\n        \n            const updateData = (data) => this.rowData = data;\n            \n            fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n                .then(resp => resp.json())\n                .then(data => updateData(data));\n    },\ngetContextMenuItems(params) {\n    var result = [\n        {\n            // custom item\n            name: 'Alert ' + params.value,\n            action: () => {\n                window.alert('Alerting about ' + params.value);\n            },\n            cssClasses: ['red', 'bold'],\n        },\n        {\n            // custom item\n            name: 'Always Disabled',\n            disabled: true,\n            tooltip: 'Very long tooltip, did I mention that I am very long, well I am! Long!  Very Long!',\n        },\n        {\n            name: 'Country',\n            subMenu: [\n                {\n                    name: 'Ireland',\n                    action: () => {\n                        console.log('Ireland was pressed');\n                    },\n                    icon: createFlagImg('ie'),\n                },\n                {\n                    name: 'UK',\n                    action: () => {\n                        console.log('UK was pressed');\n                    },\n                    icon: createFlagImg('gb'),\n                },\n                {\n                    name: 'France',\n                    action: () => {\n                        console.log('France was pressed');\n                    },\n                    icon: createFlagImg('fr'),\n                },\n            ],\n        },\n        {\n            name: 'Person',\n            subMenu: [\n                {\n                    name: 'Niall',\n                    action: () => {\n                        console.log('Niall was pressed');\n                    },\n                },\n                {\n                    name: 'Sean',\n                    action: () => {\n                        console.log('Sean was pressed');\n                    },\n                },\n                {\n                    name: 'John',\n                    action: () => {\n                        console.log('John was pressed');\n                    },\n                },\n                {\n                    name: 'Alberto',\n                    action: () => {\n                        console.log('Alberto was pressed');\n                    },\n                },\n                {\n                    name: 'Tony',\n                    action: () => {\n                        console.log('Tony was pressed');\n                    },\n                },\n                {\n                    name: 'Andrew',\n                    action: () => {\n                        console.log('Andrew was pressed');\n                    },\n                },\n                {\n                    name: 'Kev',\n                    action: () => {\n                        console.log('Kev was pressed');\n                    },\n                },\n                {\n                    name: 'Will',\n                    action: () => {\n                        console.log('Will was pressed');\n                    },\n                },\n                {\n                    name: 'Armaan',\n                    action: () => {\n                        console.log('Armaan was pressed');\n                    },\n                },\n            ],\n        },\n        'separator',\n        {\n            // custom item\n            name: 'Windows',\n            shortcut: 'Alt + W',\n            action: () => {\n                console.log('Windows Item Selected');\n            },\n            icon: '<img src=\"https://www.ag-grid.com/example-assets/skills/windows.png\" />',\n        },\n        {\n            // custom item\n            name: 'Mac',\n            shortcut: 'Alt + M',\n            action: () => {\n                console.log('Mac Item Selected');\n            },\n            icon: '<img src=\"https://www.ag-grid.com/example-assets/skills/mac.png\"/>',\n        },\n        'separator',\n        {\n            // custom item\n            name: 'Checked',\n            checked: true,\n            action: () => {\n                console.log('Checked Selected');\n            },\n            icon: '<img src=\"https://www.ag-grid.com/example-assets/skills/mac.png\"/>',\n        },\n        'copy',\n        'separator',\n        'chartRange',\n    ];\n    return result;\n},\n    }\n}\n\nwindow.createFlagImg = function createFlagImg(flag) {\n    return ('<img border=\"0\" width=\"15\" height=\"10\" src=\"https://flags.fmcdn.net/data/flags/mini/' +\n        flag +\n        '.png\"/>');\n}\n\nnew Vue({\n    el: '#app',\n    components: {\n        'my-component': VueExample\n    }\n});\n","index.html":"<div id=\"myGrid\" class=\"ag-theme-quartz\" style=\"height: 100%;\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function(link, callback) {\n        setTimeout(function() {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href)\n                    return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function(link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    }\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link')\n        return filter(links, function(link) { return link.href === url; });\n    }\n\n    var noop = function() {};\n\n    var loadCSS = function(url, existingLinks) {\n        const stylesUrl = url.includes(\"styles.css\") || url.includes(\"style.css\");\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(() => {\n                new Promise(function(resolve, reject) {\n                    var timeout = setTimeout(function() {\n                        reject('Unable to load CSS');\n                    }, waitSeconds * 1000);\n                    var _callback = function(error) {\n                        clearTimeout(timeout);\n                        link.onload = link.onerror = noop;\n                        setTimeout(function() {\n                            if (error) {\n                                reject(error);\n                                outerReject(error)\n                            } else {\n                                resolve('');\n                                outerResolve('');\n                            }\n                        }, 7);\n                    };\n                    var link = document.createElement('link');\n                    link.type = 'text/css';\n                    link.rel = 'stylesheet';\n                    link.href = url;\n                    link.setAttribute('data-systemjs-css', '');\n                    if (!isWebkit) {\n                        link.onload = function() {\n                            _callback();\n                        }\n                    } else {\n                        webkitLoadCheck(link, _callback);\n                    }\n                    link.onerror = function(event) {\n                        _callback(event.error || new Error('Error loading CSS file.'));\n                    };\n                    if (existingLinks.length)\n                        head.insertBefore(link, existingLinks[0]);\n                    else\n                        head.appendChild(link);\n                })\n                    // Remove the old link regardless of loading outcome\n                    .then(function(result) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        return result;\n                    }, function(err) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        throw err;\n                    })\n            }, stylesUrl ? 5 : 0)\n        })\n    };\n\n    exports.fetch = function(load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links))\n            return '';\n        return loadCSS(load.address, links);\n    };\n}\nelse {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise)\n            return builderPromise;\n\n        return builderPromise = System['import']('./css-plugin-base.js', module.id)\n            .then(function(CSSPluginBase) {\n                return new CSSPluginBase(function compile(source, address) {\n                    return {\n                        css: source,\n                        map: null,\n                        moduleSource: null,\n                        moduleFormat: null\n                    };\n                });\n            });\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function(load, fetch) {\n        if (!this.builder)\n            return '';\n        return fetch(load);\n    };\n    exports.translate = function(load, opts) {\n        if (!this.builder)\n            return '';\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function(load, opts) {\n        if (!this.builder)\n            return;\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function(loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function(loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = []\n    forEach(arrayLike, function(item) {\n        if (func(item))\n            arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i])\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n    var sjsPaths = {};\n    if (typeof systemJsPaths !== 'undefined') {\n        sjsPaths = systemJsPaths;\n    }\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...sjsPaths,\n        },\n        map: {\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            // css: boilerplatePath + \"css.js\",\n            'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            // vuejsw\n            'vue': 'npm:vue@2.6.12/dist/vue.min.js',\n            // vue property decorator\n            'vue-class-component': 'npm:vue-class-component@6.3.2/dist/vue-class-component.min.js',\n            'vue-property-decorator': 'npm:vue-property-decorator@7.2.0/lib/vue-property-decorator.umd.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap\n        },\n\n        packages: {\n            'vue': {\n                defaultExtension: 'js'\n            },\n            'vue-class-component': {\n                defaultExtension: 'js'\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js'\n            },\n            app: {\n                defaultExtension: 'js'\n            },\n            '@ag-grid-community/vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js'\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            }\n        },\n        meta: {\n            '*.js': {\n                babelOptions: {\n                    stage1: true,\n                    stage2: true,\n                    es2015: true\n                }\n            },\n            '*.css': {loader: 'css'}\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths:\n            {\n                // paths serve as alias\n                \"npm:\": \"https://cdn.jsdelivr.net/npm/\",\n                ...systemJsPaths\n            },\n        map: {\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + \"css.js\",\n            // 'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n\n            // vuejs\n            'vue': 'npm:vue@2.6.12/dist/vue.min.js',\n            // vue property decorator\n            'vue-class-component': 'npm:vue-class-component@6.3.2/dist/vue-class-component.min.js',\n            'vue-property-decorator': 'npm:vue-property-decorator@7.2.0/lib/vue-property-decorator.umd.js',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap\n        },\n        packages: {\n            'vue': {\n                defaultExtension: 'js'\n            },\n            'vue-class-component': {\n                defaultExtension: 'js'\n            },\n            'vue-property-decorator': {\n                defaultExtension: 'js'\n            },\n            app: {\n                defaultExtension: 'js'\n            },\n            '@ag-grid-community/vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n        meta: {\n            '*.js': {\n                babelOptions: {\n                    stage1: true,\n                    stage2: true,\n                    es2015: true\n                }\n            },\n            '*.css': {loader: 'css'}\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n"}}