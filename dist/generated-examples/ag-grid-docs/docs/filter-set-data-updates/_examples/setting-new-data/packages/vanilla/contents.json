{"isEnterprise":true,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      headerName: 'Set Filter Column',\n      field: 'col1',\n      filter: 'agSetColumnFilter',\n      flex: 1,\n      editable: true,\n    },\n  ],\n  sideBar: 'filters',\n  rowData: getRowData(),\n  onFirstDataRendered: onFirstDataRendered,\n}\n\nfunction getRowData() {\n  return [{ col1: 'A' }, { col1: 'A' }, { col1: 'B' }, { col1: 'C' }]\n}\n\nfunction setNewData() {\n  var newData = [\n    { col1: 'A' },\n    { col1: 'A' },\n    { col1: 'B' },\n    { col1: 'C' },\n    { col1: 'D' },\n    { col1: 'E' },\n  ]\n  gridApi.setGridOption('rowData', newData)\n}\n\nfunction reset() {\n  gridApi.setFilterModel(null);\n  gridApi.setGridOption('rowData', getRowData());\n}\n\nfunction onFirstDataRendered(params) {\n  params.api.getToolPanelInstance('filters').expandFilters();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n})","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px;\">\n        <button onclick=\"setNewData()\">Set New Data</button>\n        <button onclick=\"reset()\" style=\"margin-left: 5px\">Reset</button>\n    </div>\n    \n    <div id=\"myGrid\" class=\"ag-theme-quartz\"></div>\n</div>"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}