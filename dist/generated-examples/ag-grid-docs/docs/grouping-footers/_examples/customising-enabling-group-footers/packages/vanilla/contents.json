{"isEnterprise":true,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: 'country', rowGroup: true, hide: true },\n    { field: 'year', rowGroup: true, hide: true },\n    { field: 'gold', aggFunc: 'sum' },\n    { field: 'silver', aggFunc: 'sum' },\n    { field: 'bronze', aggFunc: 'sum' },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 150,\n  },\n  autoGroupColumnDef: {\n    minWidth: 300,\n  },\n  groupIncludeFooter: (params) => {\n    const node = params.node;\n    if (node && node.level === 1) return true;\n    if (node && node.key === 'France') return true;\n\n    return false;\n  },\n  onFirstDataRendered: (params) => {\n    params.api.forEachNode((node) => {\n      if (node.key === 'France' || node.key === 'South Korea') {\n        params.api.setRowNodeExpanded(node, true);\n      }\n    });\n  }\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n  fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n    .then(response => response.json())\n    .then((data) => gridApi.setGridOption('rowData', data))\n})","index.html":"<div id=\"myGrid\" style=\"height: 100%;\" class=\"ag-theme-quartz\"></div>"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}