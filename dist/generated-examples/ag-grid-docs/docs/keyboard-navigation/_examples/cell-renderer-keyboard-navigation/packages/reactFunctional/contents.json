{"isEnterprise":false,"isIntegratedCharts":false,"entryFileName":"index.jsx","mainFileName":"index.jsx","scriptFiles":[],"styleFiles":[],"files":{"styles.css":"html,\nbody {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  box-sizing: border-box;\n  -webkit-overflow-scrolling: touch;\n}\n\nhtml {\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 0;\n  overflow: auto;\n}\n\nbody {\n  padding: 1rem;\n  overflow: auto;\n}\n\n.custom-element {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  height: 100%;\n}\n\n.custom-element button {\n  width: 80px;\n  padding: 5px!important;\n  height: initial!important;\n  margin: 0!important;\n}\n\n.custom-element input {\n  width: 100px;\n  padding: 5px!important;\n  height: initial!important;\n  margin: 0!important;\n}\n\n.custom-element a {\n  line-height: 1rem;\n}\n\na {\n  color: inherit;\n}","customElements.jsx":"import React from 'react';\n\nexport default ({ data }) => {\n    return (\n      <div className=\"custom-element\">\n        <button>Age: {data.age ? data.age : '?'}</button>\n        <input defaultValue={data.country ? data.country : ''} />\n        <a href={`https://www.google.com/search?q=${data.sport}`} target=\"_blank\">{data.sport}</a>\n      </div>\n    )\n  }\n","index.jsx":"\n'use strict';\n\nimport React, { useCallback, useMemo, useState, StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-quartz.css';\nimport './styles.css';\nimport CustomElements from './customElements.jsx';\n\n\n\nconst GRID_CELL_CLASSNAME = \"ag-cell\";\n\nconst getAllFocusableElementsOf = (el) => {\n    return Array.from(el.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')).filter((focusableEl) => {\n        return focusableEl.tabIndex !== -1;\n    });\n}\n\nconst getEventPath = (event) => {\n    const path = [];\n    let currentTarget = event.target;\n    while (currentTarget) {\n        path.push(currentTarget);\n        currentTarget = currentTarget.parentElement;\n    }\n    return path;\n}\n\n/**\n * Capture whether the user is tabbing forwards or backwards and suppress keyboard event if tabbing\n * outside of the children\n */\nconst suppressKeyboardEvent = ({ event }) => {\n    const { key, shiftKey } = event;\n    const path = getEventPath(event);\n    const isTabForward = key === \"Tab\" && shiftKey === false;\n    const isTabBackward = key === \"Tab\" && shiftKey === true;\n    let suppressEvent = false;\n    // Handle cell children tabbing\n    if (isTabForward || isTabBackward) {\n        const eGridCell = path.find(el => {\n            if (el.classList === undefined)\n                return false;\n            return el.classList.contains(GRID_CELL_CLASSNAME);\n        });\n        if (!eGridCell) {\n            return suppressEvent;\n        }\n        const focusableChildrenElements = getAllFocusableElementsOf(eGridCell);\n        const lastCellChildEl = focusableChildrenElements[focusableChildrenElements.length - 1];\n        const firstCellChildEl = focusableChildrenElements[0];\n        // Suppress keyboard event if tabbing forward within the cell and the current focused element is not the last child\n        if (isTabForward && focusableChildrenElements.length > 0) {\n            const isLastChildFocused = lastCellChildEl && document.activeElement === lastCellChildEl;\n            if (!isLastChildFocused) {\n                suppressEvent = true;\n            }\n        }\n        // Suppress keyboard event if tabbing backwards within the cell, and the current focused element is not the first child\n        else if (isTabBackward && focusableChildrenElements.length > 0) {\n            const cellHasFocusedChildren = eGridCell.contains(document.activeElement) &&\n                eGridCell !== document.activeElement;\n            // Manually set focus to the last child element if cell doesn't have focused children\n            if (!cellHasFocusedChildren) {\n                lastCellChildEl.focus();\n                // Cancel keyboard press, so that it doesn't focus on the last child and then pass through the keyboard press to\n                // move to the 2nd last child element\n                event.preventDefault();\n            }\n            const isFirstChildFocused = firstCellChildEl && document.activeElement === firstCellChildEl;\n            if (!isFirstChildFocused) {\n                suppressEvent = true;\n            }\n        }\n    }\n    return suppressEvent;\n}\n\nconst GridExample = () => {\n    const containerStyle = useMemo(() => ({ width: '100%', height: '100%' }), []);\n    const gridStyle = useMemo(() => ({height: '100%', width: '100%'}), []);\n    const [rowData, setRowData] = useState();\n    const [columnDefs, setColumnDefs] = useState([\n        {\n            field: \"athlete\"\n        },\n        {\n            field: \"country\",\n            flex: 1,\n            cellRenderer: CustomElements\n        }\n    ]);\n    const defaultColDef = useMemo(() => { return {\n        minWidth: 130,\n        suppressKeyboardEvent\n    } }, []);\n\n            const onGridReady = useCallback((params) => {\n                fetch('https://www.ag-grid.com/example-assets/small-olympic-winners.json')\n                    .then(resp => resp.json())\n                    .then(data => {\n                        setRowData( data);\n                    });\n            }, []);\n\n    return  (\n        <div style={containerStyle}>\n            <div  style={gridStyle} className={/** DARK MODE START **/document.documentElement.dataset.defaultTheme || 'ag-theme-quartz'/** DARK MODE END **/}>\n                <AgGridReact\n                    rowData={rowData}\n                    columnDefs={columnDefs}\n                    defaultColDef={defaultColDef}\n                    reactiveCustomComponents\n                    onGridReady={onGridReady}\n                />\n            </div>\n        </div>\n    );\n}\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(<StrictMode><GridExample /></StrictMode>);\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function(link, callback) {\n        setTimeout(function() {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href)\n                    return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function(link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    }\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link')\n        return filter(links, function(link) { return link.href === url; });\n    }\n\n    var noop = function() {};\n\n    var loadCSS = function(url, existingLinks) {\n        const stylesUrl = url.includes(\"styles.css\") || url.includes(\"style.css\");\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(() => {\n                new Promise(function(resolve, reject) {\n                    var timeout = setTimeout(function() {\n                        reject('Unable to load CSS');\n                    }, waitSeconds * 1000);\n                    var _callback = function(error) {\n                        clearTimeout(timeout);\n                        link.onload = link.onerror = noop;\n                        setTimeout(function() {\n                            if (error) {\n                                reject(error);\n                                outerReject(error)\n                            } else {\n                                resolve('');\n                                outerResolve('');\n                            }\n                        }, 7);\n                    };\n                    var link = document.createElement('link');\n                    link.type = 'text/css';\n                    link.rel = 'stylesheet';\n                    link.href = url;\n                    link.setAttribute('data-systemjs-css', '');\n                    if (!isWebkit) {\n                        link.onload = function() {\n                            _callback();\n                        }\n                    } else {\n                        webkitLoadCheck(link, _callback);\n                    }\n                    link.onerror = function(event) {\n                        _callback(event.error || new Error('Error loading CSS file.'));\n                    };\n                    if (existingLinks.length)\n                        head.insertBefore(link, existingLinks[0]);\n                    else\n                        head.appendChild(link);\n                })\n                    // Remove the old link regardless of loading outcome\n                    .then(function(result) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        return result;\n                    }, function(err) {\n                        forEach(existingLinks, function(link) {link.parentElement.removeChild(link);})\n                        throw err;\n                    })\n            }, stylesUrl ? 5 : 0)\n        })\n    };\n\n    exports.fetch = function(load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links))\n            return '';\n        return loadCSS(load.address, links);\n    };\n}\nelse {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise)\n            return builderPromise;\n\n        return builderPromise = System['import']('./css-plugin-base.js', module.id)\n            .then(function(CSSPluginBase) {\n                return new CSSPluginBase(function compile(source, address) {\n                    return {\n                        css: source,\n                        map: null,\n                        moduleSource: null,\n                        moduleFormat: null\n                    };\n                });\n            });\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function(load, fetch) {\n        if (!this.builder)\n            return '';\n        return fetch(load);\n    };\n    exports.translate = function(load, opts) {\n        if (!this.builder)\n            return '';\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function(load, opts) {\n        if (!this.builder)\n            return;\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function(loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function(loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function(builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = []\n    forEach(arrayLike, function(item) {\n        if (func(item))\n            arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i])\n    }\n}\n","systemjs.config.dev.js":"(function (global) {\n\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths: {\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths\n        },\n        map: {\n            // css: boilerplatePath + \"css.js\",\n            'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n            redux: 'npm:redux@4.2.1',\n            'react-redux': 'npm:react-redux@8.0.5',\n            'prop-types': 'npm:prop-types@15.8.1',\n\n            app: appLocation + 'app',\n\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            css: {},\n            react: {\n                main: './umd/react.development.js',\n            },\n            'react-dom': {\n                main: './umd/react-dom.development.js',\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js',\n            },\n            app: {\n                main: './index.tsx',\n                defaultExtension: 'tsx',\n            },\n            '@ag-grid-community/react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js'\n            },\n            '@ag-grid-enterprise/clipboard': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-enterprise-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            }\n        },\n        meta: {\n            '*.jsx': {\n                babelOptions: {\n                    react: true\n                }\n            },\n            '*.css': { loader: 'css' }\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'plugin-babel',\n        defaultExtension: 'js',\n        paths:\n            {\n                // paths serve as alias\n                \"npm:\": \"https://cdn.jsdelivr.net/npm/\",\n                ...systemJsPaths\n            },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + \"css.js\",\n            // 'css': 'npm:systemjs-plugin-css@0.1.37/css.js',\n\n            // babel transpiler\n            'plugin-babel': 'npm:systemjs-plugin-babel@0.0.25/plugin-babel.js',\n            'systemjs-babel-build': 'npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n            redux: 'npm:redux@4.2.1',\n            'react-redux': 'npm:react-redux@8.0.5',\n            'prop-types': 'npm:prop-types@15.8.1',\n\n            app: appLocation + 'app',\n            // systemJsMap comes from index.html\n            ...systemJsMap\n        },\n        packages: {\n            react: {\n                main: './umd/react.production.min.js'\n            },\n            'react-dom': {\n                main: './umd/react-dom.production.min.js'\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js'\n            },\n            redux: {\n                main: './dist/redux.min.js',\n                defaultExtension: 'js'\n            },\n            'react-redux': {\n                main: './dist/react-redux.min.js',\n                defaultExtension: 'js'\n            },\n            'prop-types': {\n                main: './prop-types.min.js',\n                defaultExtension: 'js',\n            },\n\n            app: {\n                defaultExtension: 'jsx'\n            },\n            '@ag-grid-community/react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/client-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/csv-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-community/infinite-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/advanced-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/charts-enterprise': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/clipboard': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/column-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/core': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/excel-export': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/filter-tool-panel': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/master-detail': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/menu': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/multi-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/range-selection': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/rich-select': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/row-grouping': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/server-side-row-model': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/set-filter': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/side-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/sparklines': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/status-bar': {\n                format: 'cjs',\n            },\n            '@ag-grid-enterprise/viewport-row-model': {\n                format: 'cjs',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-charts-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n        },\n        meta: {\n            '*.jsx': {\n                babelOptions: {\n                    react: true\n                }\n            },\n            '*.css': {loader: 'css'}\n        }\n    });\n})(this);\n\nwindow.addEventListener('error', e => {\n    console.error('ERROR', e.message, e.filename)\n});\n"},"packageJson":{"name":"ag-grid-packages","dependencies":{"react":"18","react-dom":"18","@types/react":"18","@types/react-dom":"18","ag-grid-react":"^31.2.0","ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}