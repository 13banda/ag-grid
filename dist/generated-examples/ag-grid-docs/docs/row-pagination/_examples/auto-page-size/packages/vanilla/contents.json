{"isEnterprise":true,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"var checkboxSelection = function (params) {\n  // we put checkbox on the name if we are not doing grouping\n  return params.api.getRowGroupColumns().length === 0\n}\nvar headerCheckboxSelection = function (params) {\n  // we put checkbox on the name if we are not doing grouping\n  return params.api.getRowGroupColumns().length === 0\n}\nconst columnDefs = [\n  {\n    field: 'athlete',\n    minWidth: 170,\n    checkboxSelection: checkboxSelection,\n    headerCheckboxSelection: headerCheckboxSelection,\n  },\n  { field: 'age' },\n  { field: 'country' },\n  { field: 'year' },\n  { field: 'date' },\n  { field: 'sport' },\n  { field: 'gold' },\n  { field: 'silver' },\n  { field: 'bronze' },\n  { field: 'total' },\n]\n\nvar autoGroupColumnDef = {\n  headerName: 'Group',\n  minWidth: 170,\n  field: 'athlete',\n  valueGetter: (params) => {\n    if (params.node.group) {\n      return params.node.key\n    } else {\n      return params.data[params.colDef.field]\n    }\n  },\n  headerCheckboxSelection: true,\n  // headerCheckboxSelectionFilteredOnly: true,\n  cellRenderer: 'agGroupCellRenderer',\n  cellRendererParams: {\n    checkbox: true,\n  } ,\n}\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    editable: true,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n    filter: true,\n    flex: 1,\n    minWidth: 100,\n  },\n  suppressRowClickSelection: true,\n  groupSelectsChildren: true,\n  // debug: true,\n  rowSelection: 'multiple',\n  rowGroupPanelShow: 'always',\n  pivotPanelShow: 'always',\n  columnDefs: columnDefs,\n  paginationAutoPageSize: true,\n  pagination: true,\n  autoGroupColumnDef: autoGroupColumnDef,\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n  fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n    .then(response => response.json())\n    .then((data) => gridApi.setGridOption('rowData', data))\n})","index.html":"<div style=\"height: 100%\" id=\"myGrid\" class=\"ag-theme-quartz\"></div>","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}