{"isEnterprise":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":".ag-theme-quartz, .ag-theme-quartz-dark {\n    --ag-value-change-value-highlight-background-color: #CC222244;\n}","main.js":"function formatNumber(number) {\n  return Math.floor(number).toLocaleString()\n}\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: 'a' },\n    { field: 'b' },\n    { field: 'c' },\n    { field: 'd' },\n    { field: 'e' },\n    { field: 'f' },\n  ],\n  defaultColDef: {\n    flex: 1,\n    cellClass: 'align-right',\n    enableCellChangeFlash: true,\n    valueFormatter: (params) => {\n      return formatNumber(params.value)\n    },\n  },\n  rowData: createRowData(),\n  cellFlashDuration: 2000,\n  cellFadeDuration: 500,\n}\n\nfunction onUpdateSomeValues() {\n  var rowCount = gridApi.getDisplayedRowCount()\n  // pick 20 cells at random to update\n  for (var i = 0; i < 20; i++) {\n    var row = Math.floor(Math.random() * rowCount)\n    var rowNode = gridApi.getDisplayedRowAtIndex(row)\n    var col = ['a', 'b', 'c', 'd', 'e', 'f'][i % 6]\n    rowNode.setDataValue(col, Math.floor(Math.random() * 10000))\n  }\n}\n\nfunction onFlashTwoRows() {\n  // pick fourth and fifth row at random\n  var rowNode1 = gridApi.getDisplayedRowAtIndex(4)\n  var rowNode2 = gridApi.getDisplayedRowAtIndex(5)\n  // flash whole row, so leave column selection out\n  gridApi.flashCells({\n    rowNodes: [rowNode1, rowNode2],\n    flashDuration: 3000,\n    fadeDuration: 2000,\n  })\n}\n\nfunction createRowData() {\n  var rowData = []\n\n  for (var i = 0; i < 20; i++) {\n    rowData.push({\n      a: Math.floor(((i + 323) * 25435) % 10000),\n      b: Math.floor(((i + 323) * 23221) % 10000),\n      c: Math.floor(((i + 323) * 468276) % 10000),\n      d: 0,\n      e: 0,\n      f: 0,\n    })\n  }\n\n  return rowData\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n})","index.html":"<div style=\"height: 100%; display: flex; flex-direction: column;\">\n    <div style=\"margin-bottom: 4px;\">\n        <button onclick=\"onUpdateSomeValues()\">Update Some Data</button>\n        <button onclick=\"onFlashTwoRows()\">Flash Two Rows</button>\n    </div>\n    <div style=\"flex-grow: 1;\">\n        <div id=\"myGrid\" style=\"height: 100%;\" class=\"ag-theme-quartz\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}