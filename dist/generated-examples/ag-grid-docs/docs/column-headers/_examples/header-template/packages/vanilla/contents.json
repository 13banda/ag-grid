{"isEnterprise":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const columnDefs = [\n  { headerName: 'Athlete Name', field: 'athlete', suppressHeaderMenuButton: true },\n  { field: 'age', sortable: false },\n  { field: 'country', suppressHeaderMenuButton: true },\n  { field: 'year', sortable: false },\n  { field: 'date', suppressHeaderMenuButton: true, sortable: false },\n  { field: 'sport', sortable: false },\n  { field: 'gold' },\n  { field: 'silver', sortable: false },\n  { field: 'bronze', suppressHeaderMenuButton: true },\n  { field: 'total', sortable: false },\n]\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  rowData: null,\n  suppressMenuHide: true,\n  defaultColDef: {\n    filter: true,\n    width: 150,\n    headerComponentParams: {\n      menuIcon: 'fa-bars',\n      template: `<div class=\"ag-cell-label-container\" role=\"presentation\">\n                    <span ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\"></span>\n                    <span ref=\"eFilterButton\" class=\"ag-header-icon ag-header-cell-filter-button\"></span>\n                    <div ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">\n                        <span ref=\"eSortOrder\" class=\"ag-header-icon ag-sort-order ag-hidden\"></span>\n                        <span ref=\"eSortAsc\" class=\"ag-header-icon ag-sort-ascending-icon ag-hidden\"></span>\n                        <span ref=\"eSortDesc\" class=\"ag-header-icon ag-sort-descending-icon ag-hidden\"></span>\n                        <span ref=\"eSortMixed\" class=\"ag-header-icon ag-sort-mixed-icon ag-hidden\"></span>\n                        <span ref=\"eSortNone\" class=\"ag-header-icon ag-sort-none-icon ag-hidden\"></span>\n                        ** <span ref=\"eText\" class=\"ag-header-cell-text\" role=\"columnheader\"></span>\n                        <span ref=\"eFilter\" class=\"ag-header-icon ag-filter-icon\"></span>\n                    </div>\n                </div>`,\n    },\n  },\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', () => {\n  const gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n  fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n    .then(response => response.json())\n    .then((data) => gridApi.setGridOption('rowData', data))\n})","index.html":"<div id=\"myGrid\" style=\"height: 100%;\" class=\"ag-theme-quartz\"></div>","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}},"extras":["fontawesome"]}