{"isEnterprise":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".ag-row.ag-row-first {\n    background-color: #2244CC44;\n}\n\n.ag-row.ag-row-last {\n    background-color: #CC333344;\n}","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      headerName: 'Participant',\n      children: [{ field: 'athlete' }, { field: 'age' }],\n    },\n    {\n      headerName: 'Details',\n      children: [\n        { field: 'country' },\n        { field: 'year' },\n        { field: 'date' },\n        { field: 'sport' },\n      ],\n    },\n    {\n      headerName: 'Medals',\n      children: [\n        { field: 'gold' },\n        { field: 'silver' },\n        { field: 'bronze' },\n        { field: 'total' },\n      ],\n    },\n  ],\n  defaultColDef: {\n    flex: 1\n  }\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n  fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n    .then(response => response.json())\n    .then((data) => gridApi.setGridOption('rowData', data.slice(0, 5)))\n})","index.html":"<div id=\"myGrid\" style=\"height: 100%;\" class=\"ag-theme-quartz\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}