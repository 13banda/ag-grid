{"isEnterprise":true,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const columnDefs = [\n  {\n    headerName: 'Athlete',\n    children: [\n      { field: 'athlete', filter: 'agTextColumnFilter', minWidth: 200 },\n      { field: 'age' },\n      { field: 'country', minWidth: 200 },\n    ],\n  },\n  {\n    headerName: 'Competition',\n    children: [{ field: 'year' }, { field: 'date', minWidth: 180 }],\n  },\n  { field: 'sport', minWidth: 200 },\n  {\n    headerName: 'Medals',\n    children: [\n      { field: 'gold' },\n      { field: 'silver' },\n      { field: 'bronze' },\n      { field: 'total' },\n    ],\n  },\n]\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    // allow every column to be aggregated\n    enableValue: true,\n    // allow every column to be grouped\n    enableRowGroup: true,\n    // allow every column to be pivoted\n    enablePivot: true,\n    filter: true,\n  },\n  autoGroupColumnDef: {\n    minWidth: 200,\n  },\n  sideBar: 'columns',\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener('DOMContentLoaded', function () {\n  var gridDiv = document.querySelector('#myGrid')\n  gridApi = agGrid.createGrid(gridDiv, gridOptions); \n\n  fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\n    .then(response => response.json())\n    .then((data) => gridApi.setGridOption('rowData', data))\n})","index.html":"<div id=\"myGrid\" class=\"ag-theme-quartz\" style=\"height: 100%;\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-packages","dependencies":{"ag-grid-community":"^31.2.0","ag-grid-charts-enterprise":"^31.2.0"}}}