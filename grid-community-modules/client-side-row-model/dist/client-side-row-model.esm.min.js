/**
          * @ag-grid-community/client-side-row-model - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.0
          * @link https://www.ag-grid.com/
          * @license MIT
          */
/**
          * @ag-grid-community/client-side-row-model - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.0
          * @link https://www.ag-grid.com/
          * @license MIT
          */
import{_ as e,Events as t,RowNode as o,Autowired as r,Optional as i,PostConstruct as s,Bean as n,BeanStub as d,ClientSideRowModelSteps as a,RowHighlightPosition as l,ChangedPath as h,ModuleNames as c}from"@ag-grid-community/core";class p{constructor(e,t,o,r,i,s){this.nextId=0,this.allNodesMap={},this.rootNode=e,this.gridOptionsService=t,this.eventService=o,this.columnModel=r,this.beans=s,this.selectionService=i,this.rootNode.group=!0,this.rootNode.level=-1,this.rootNode.id=p.ROOT_NODE_ID,this.rootNode.allLeafChildren=[],this.rootNode.childrenAfterGroup=[],this.rootNode.childrenAfterSort=[],this.rootNode.childrenAfterAggFilter=[],this.rootNode.childrenAfterFilter=[],this.postConstruct()}postConstruct(){this.suppressParentsInRowNodes=this.gridOptionsService.is("suppressParentsInRowNodes"),this.isRowMasterFunc=this.gridOptionsService.get("isRowMaster"),this.doingTreeData=this.gridOptionsService.isTreeData(),this.doingMasterDetail=this.gridOptionsService.isMasterDetail()}getCopyOfNodesMap(){return e.cloneObject(this.allNodesMap)}getRowNode(e){return this.allNodesMap[e]}setRowData(e){if("string"==typeof e)return void console.warn("AG Grid: rowData must be an array, however you passed in a string. If you are loading JSON, make sure you convert the JSON string to JavaScript objects first");const t=this.rootNode,o=this.rootNode.sibling;t.childrenAfterFilter=null,t.childrenAfterGroup=null,t.childrenAfterAggFilter=null,t.childrenAfterSort=null,t.childrenMapped=null,t.updateHasChildren(),this.nextId=0,this.allNodesMap={},e?t.allLeafChildren=e.map(e=>this.createNode(e,this.rootNode,p.TOP_LEVEL)):(t.allLeafChildren=[],t.childrenAfterGroup=[]),o&&(o.childrenAfterFilter=t.childrenAfterFilter,o.childrenAfterGroup=t.childrenAfterGroup,o.childrenAfterAggFilter=t.childrenAfterAggFilter,o.childrenAfterSort=t.childrenAfterSort,o.childrenMapped=t.childrenMapped,o.allLeafChildren=t.allLeafChildren)}updateRowData(t,o){const r={remove:[],update:[],add:[]},i=[];return this.executeRemove(t,r,i),this.executeUpdate(t,r,i),this.executeAdd(t,r),this.updateSelection(i,"rowDataChanged"),o&&e.sortRowNodesByOrder(this.rootNode.allLeafChildren,o),r}updateSelection(e,o){const r=e.length>0;if(r&&this.selectionService.setNodesSelected({newValue:!1,nodes:e,suppressFinishActions:!0,source:o}),this.selectionService.updateGroupsFromChildrenSelections(o),r){const e={type:t.EVENT_SELECTION_CHANGED,source:o};this.eventService.dispatchEvent(e)}}executeAdd(t,o){var r;const{add:i,addIndex:s}=t;if(e.missingOrEmpty(i))return;const n=i.map(e=>this.createNode(e,this.rootNode,p.TOP_LEVEL));if("number"==typeof s&&s>=0){const{allLeafChildren:e}=this.rootNode,t=e.length;let o=s;if(this.doingTreeData&&s>0&&t>0)for(let i=0;i<t;i++)if((null===(r=e[i])||void 0===r?void 0:r.rowIndex)==s-1){o=i+1;break}const i=e.slice(0,o),d=e.slice(o,e.length);this.rootNode.allLeafChildren=[...i,...n,...d]}else this.rootNode.allLeafChildren=[...this.rootNode.allLeafChildren,...n];this.rootNode.sibling&&(this.rootNode.sibling.allLeafChildren=this.rootNode.allLeafChildren),o.add=n}executeRemove(t,o,r){const{remove:i}=t;if(e.missingOrEmpty(i))return;const s={};i.forEach(e=>{const t=this.lookupRowNode(e);t&&(t.isSelected()&&r.push(t),t.clearRowTopAndRowIndex(),s[t.id]=!0,delete this.allNodesMap[t.id],o.remove.push(t))}),this.rootNode.allLeafChildren=this.rootNode.allLeafChildren.filter(e=>!s[e.id]),this.rootNode.sibling&&(this.rootNode.sibling.allLeafChildren=this.rootNode.allLeafChildren)}executeUpdate(t,o,r){const{update:i}=t;e.missingOrEmpty(i)||i.forEach(e=>{const t=this.lookupRowNode(e);t&&(t.updateData(e),!t.selectable&&t.isSelected()&&r.push(t),this.setMasterForRow(t,e,p.TOP_LEVEL,!1),o.update.push(t))})}lookupRowNode(e){const t=this.gridOptionsService.getCallback("getRowId");let o;if(t){const r=t({data:e,level:0});if(o=this.allNodesMap[r],!o)return console.error(`AG Grid: could not find row id=${r}, data item was not found for this id`),null}else if(o=this.rootNode.allLeafChildren.find(t=>t.data===e),!o)return console.error("AG Grid: could not find data item as object was not found",e),console.error("Consider using getRowId to help the Grid find matching row data"),null;return o||null}createNode(e,t,r){const i=new o(this.beans);return i.group=!1,this.setMasterForRow(i,e,r,!0),t&&!this.suppressParentsInRowNodes&&(i.parent=t),i.level=r,i.setDataAndId(e,this.nextId.toString()),this.allNodesMap[i.id]&&console.warn(`AG Grid: duplicate node id '${i.id}' detected from getRowId callback, this could cause issues in your grid.`),this.allNodesMap[i.id]=i,this.nextId++,i}setMasterForRow(e,t,o,r){if(this.doingTreeData)e.setMaster(!1),r&&(e.expanded=!1);else if(this.doingMasterDetail?this.isRowMasterFunc?e.setMaster(this.isRowMasterFunc(t)):e.setMaster(!0):e.setMaster(!1),r){const t=this.columnModel.getRowGroupColumns(),r=o+(t?t.length:0);e.expanded=!!e.master&&this.isExpanded(r)}}isExpanded(e){const t=this.gridOptionsService.getNum("groupDefaultExpanded");return-1===t||e<t}}p.TOP_LEVEL=0,p.ROOT_NODE_ID="ROOT_NODE_ID";var u,g=function(e,t,o,r){var i,s=arguments.length,n=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(n=(s<3?i(n):s>3?i(t,o,n):i(t,o))||n);return s>3&&n&&Object.defineProperty(t,o,n),n};!function(e){e[e.Normal=0]="Normal",e[e.AfterFilter=1]="AfterFilter",e[e.AfterFilterAndSort=2]="AfterFilterAndSort",e[e.PivotNodes=3]="PivotNodes"}(u||(u={}));let f=class extends d{constructor(){super(...arguments),this.onRowHeightChanged_debounced=e.debounce(this.onRowHeightChanged.bind(this),100),this.rowsToDisplay=[]}init(){const e=this.refreshModel.bind(this,{step:a.EVERYTHING}),r=!this.gridOptionsService.is("suppressAnimationFrame"),i=this.refreshModel.bind(this,{step:a.EVERYTHING,afterColumnsChanged:!0,keepRenderedRows:!0,animate:r});this.addManagedListener(this.eventService,t.EVENT_NEW_COLUMNS_LOADED,i),this.addManagedListener(this.eventService,t.EVENT_COLUMN_ROW_GROUP_CHANGED,e),this.addManagedListener(this.eventService,t.EVENT_COLUMN_VALUE_CHANGED,this.onValueChanged.bind(this)),this.addManagedListener(this.eventService,t.EVENT_COLUMN_PIVOT_CHANGED,this.refreshModel.bind(this,{step:a.PIVOT})),this.addManagedListener(this.eventService,t.EVENT_FILTER_CHANGED,this.onFilterChanged.bind(this)),this.addManagedListener(this.eventService,t.EVENT_SORT_CHANGED,this.onSortChanged.bind(this)),this.addManagedListener(this.eventService,t.EVENT_COLUMN_PIVOT_MODE_CHANGED,e),this.addManagedListener(this.eventService,t.EVENT_GRID_STYLES_CHANGED,this.onGridStylesChanges.bind(this));const s=this.refreshModel.bind(this,{step:a.MAP,keepRenderedRows:!0,animate:r});this.addManagedPropertyListener("groupRemoveSingleChildren",s),this.addManagedPropertyListener("groupRemoveLowestSingleChildren",s),this.rootNode=new o(this.beans),this.nodeManager=new p(this.rootNode,this.gridOptionsService,this.eventService,this.columnModel,this.selectionService,this.beans)}start(){const e=this.gridOptionsService.get("rowData");e&&this.setRowData(e)}ensureRowHeightsValid(e,t,o,r){let i,s=!1;do{i=!1;const n=this.getRowIndexAtPixel(e),d=this.getRowIndexAtPixel(t),a=Math.max(n,o),l=Math.min(d,r);for(let e=a;e<=l;e++){const t=this.getRow(e);if(t.rowHeightEstimated){const e=this.gridOptionsService.getRowHeightForNode(t);t.setRowHeight(e.height),i=!0,s=!0}}i&&this.setRowTopAndRowIndex()}while(i);return s}setRowTopAndRowIndex(){const e=this.environment.getDefaultRowHeight();let t=0;const o=new Set,r=this.gridOptionsService.isDomLayout("normal");for(let i=0;i<this.rowsToDisplay.length;i++){const s=this.rowsToDisplay[i];if(null!=s.id&&o.add(s.id),null==s.rowHeight){const t=this.gridOptionsService.getRowHeightForNode(s,r,e);s.setRowHeight(t.height,t.estimated)}s.setRowTop(t),s.setRowIndex(i),t+=s.rowHeight}return o}clearRowTopAndRowIndex(e,t){const o=e.isActive(),r=e=>{e&&null!=e.id&&!t.has(e.id)&&e.clearRowTopAndRowIndex()},i=e=>{if(r(e),r(e.detailNode),r(e.sibling),e.hasChildren()&&e.childrenAfterGroup){const t=-1==e.level;o&&!t&&!e.expanded||e.childrenAfterGroup.forEach(i)}};i(this.rootNode)}ensureRowsAtPixel(t,o,r=0){const i=this.getRowIndexAtPixel(o),s=this.getRow(i),n=!this.gridOptionsService.is("suppressAnimationFrame");return s!==t[0]&&(t.forEach(t=>{e.removeFromArray(this.rootNode.allLeafChildren,t)}),t.forEach((t,o)=>{e.insertIntoArray(this.rootNode.allLeafChildren,t,Math.max(i+r,0)+o)}),this.refreshModel({step:a.EVERYTHING,keepRenderedRows:!0,keepEditingRows:!0,animate:n}),!0)}highlightRowAtPixel(e,t){const o=null!=t?this.getRowIndexAtPixel(t):null,r=null!=o?this.getRow(o):null;if(!r||!e||r===e||null==t)return void(this.lastHighlightedRow&&(this.lastHighlightedRow.setHighlighted(null),this.lastHighlightedRow=null));const i=this.getHighlightPosition(t,r);this.lastHighlightedRow&&this.lastHighlightedRow!==r&&(this.lastHighlightedRow.setHighlighted(null),this.lastHighlightedRow=null),r.setHighlighted(i),this.lastHighlightedRow=r}getHighlightPosition(e,t){if(!t){const o=this.getRowIndexAtPixel(e);if(!(t=this.getRow(o||0)))return l.Below}const{rowTop:o,rowHeight:r}=t;return e-o<r/2?l.Above:l.Below}getLastHighlightedRowNode(){return this.lastHighlightedRow}isLastRowIndexKnown(){return!0}getRowCount(){return this.rowsToDisplay?this.rowsToDisplay.length:0}getTopLevelRowCount(){if(this.rowsToDisplay&&this.rowsToDisplay[0]===this.rootNode)return 1;const e=this.rootNode.childrenAfterAggFilter;return e?e.length:0}getTopLevelRowDisplayedIndex(e){if(this.rowsToDisplay&&this.rowsToDisplay[0]===this.rootNode)return e;let t=this.rootNode.childrenAfterSort[e];if(this.gridOptionsService.is("groupHideOpenParents"))for(;t.expanded&&t.childrenAfterSort&&t.childrenAfterSort.length>0;)t=t.childrenAfterSort[0];return t.rowIndex}getRowBounds(t){if(e.missing(this.rowsToDisplay))return null;const o=this.rowsToDisplay[t];return o?{rowTop:o.rowTop,rowHeight:o.rowHeight}:null}onRowGroupOpened(){const e=this.gridOptionsService.isAnimateRows();this.refreshModel({step:a.MAP,keepRenderedRows:!0,animate:e})}onFilterChanged(e){if(e.afterDataChange)return;const t=this.gridOptionsService.isAnimateRows(),o=0===e.columns.length||e.columns.some(e=>e.isPrimary())?a.FILTER:a.FILTER_AGGREGATES;this.refreshModel({step:o,keepRenderedRows:!0,animate:t})}onSortChanged(){const e=this.gridOptionsService.isAnimateRows();this.refreshModel({step:a.SORT,keepRenderedRows:!0,animate:e,keepEditingRows:!0})}getType(){return"clientSide"}onValueChanged(){this.columnModel.isPivotActive()?this.refreshModel({step:a.PIVOT}):this.refreshModel({step:a.AGGREGATE})}createChangePath(t){const o=e.missingOrEmpty(t),r=new h(!1,this.rootNode);return(o||this.gridOptionsService.isTreeData())&&r.setInactive(),r}isSuppressModelUpdateAfterUpdateTransaction(e){if(!this.gridOptionsService.is("suppressModelUpdateAfterUpdateTransaction"))return!1;if(null==e.rowNodeTransactions)return!1;const t=e.rowNodeTransactions.filter(e=>null!=e.add&&e.add.length>0||null!=e.remove&&e.remove.length>0);return null==t||0==t.length}buildRefreshModelParams(t){let o=a.EVERYTHING;const r={everything:a.EVERYTHING,group:a.EVERYTHING,filter:a.FILTER,map:a.MAP,aggregate:a.AGGREGATE,sort:a.SORT,pivot:a.PIVOT};if(e.exists(t)&&(o=r[t]),e.missing(o))return void console.error(`AG Grid: invalid step ${t}, available steps are ${Object.keys(r).join(", ")}`);return{step:o,keepRenderedRows:!0,keepEditingRows:!0,animate:!this.gridOptionsService.is("suppressAnimationFrame")}}refreshModel(e){let o="object"==typeof e&&"step"in e?e:this.buildRefreshModelParams(e);if(!o)return;if(this.isSuppressModelUpdateAfterUpdateTransaction(o))return;const r=this.createChangePath(o.rowNodeTransactions);switch(o.step){case a.EVERYTHING:this.doRowGrouping(o.groupState,o.rowNodeTransactions,o.rowNodeOrder,r,!!o.afterColumnsChanged);case a.FILTER:this.doFilter(r);case a.PIVOT:this.doPivot(r);case a.AGGREGATE:this.doAggregate(r);case a.FILTER_AGGREGATES:this.doFilterAggregates(r);case a.SORT:this.doSort(o.rowNodeTransactions,r);case a.MAP:this.doRowsToDisplay()}const i=this.setRowTopAndRowIndex();this.clearRowTopAndRowIndex(r,i);const s={type:t.EVENT_MODEL_UPDATED,animate:o.animate,keepRenderedRows:o.keepRenderedRows,newData:o.newData,newPage:!1,keepUndoRedoStack:o.keepUndoRedoStack};this.eventService.dispatchEvent(s)}isEmpty(){const t=e.missing(this.rootNode.allLeafChildren)||0===this.rootNode.allLeafChildren.length;return e.missing(this.rootNode)||t||!this.columnModel.isReady()}isRowsToRender(){return e.exists(this.rowsToDisplay)&&this.rowsToDisplay.length>0}getNodesInRangeForSelection(e,t){let o=!t,r=!1;const i=[],s=this.gridOptionsService.is("groupSelectsChildren");return this.forEachNodeAfterFilterAndSort(n=>{if(r)return;if(o&&(n===t||n===e)&&(r=!0,n.group&&s))return void i.push(...n.allLeafChildren);if(!o){if(n!==t&&n!==e)return;o=!0}(!n.group||!s)&&i.push(n)}),i}setDatasource(e){console.error("AG Grid: should never call setDatasource on clientSideRowController")}getTopLevelNodes(){return this.rootNode?this.rootNode.childrenAfterGroup:null}getRootNode(){return this.rootNode}getRow(e){return this.rowsToDisplay[e]}isRowPresent(e){return this.rowsToDisplay.indexOf(e)>=0}getRowIndexAtPixel(t){if(this.isEmpty()||0===this.rowsToDisplay.length)return-1;let o=0,r=this.rowsToDisplay.length-1;if(t<=0)return 0;if(e.last(this.rowsToDisplay).rowTop<=t)return this.rowsToDisplay.length-1;let i=-1,s=-1;for(;;){const e=Math.floor((o+r)/2),n=this.rowsToDisplay[e];if(this.isRowInPixel(n,t))return e;n.rowTop<t?o=e+1:n.rowTop>t&&(r=e-1);if(i===o&&s===r)return e;i=o,s=r}}isRowInPixel(e,t){const o=e.rowTop,r=e.rowTop+e.rowHeight;return o<=t&&r>t}forEachLeafNode(e){this.rootNode.allLeafChildren&&this.rootNode.allLeafChildren.forEach((t,o)=>e(t,o))}forEachNode(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterGroup||[]],callback:e,recursionType:u.Normal,index:0,includeFooterNodes:t})}forEachNodeAfterFilter(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterAggFilter||[]],callback:e,recursionType:u.AfterFilter,index:0,includeFooterNodes:t})}forEachNodeAfterFilterAndSort(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterSort||[]],callback:e,recursionType:u.AfterFilterAndSort,index:0,includeFooterNodes:t})}forEachPivotNode(e,t=!1){this.recursivelyWalkNodesAndCallback({nodes:[this.rootNode],callback:e,recursionType:u.PivotNodes,index:0,includeFooterNodes:t})}recursivelyWalkNodesAndCallback(e){var t;const{nodes:o,callback:r,recursionType:i,includeFooterNodes:s}=e;let{index:n}=e;const d=o[0];s&&(null===(t=null==d?void 0:d.parent)||void 0===t?void 0:t.sibling)&&o.push(d.parent.sibling);for(let e=0;e<o.length;e++){const t=o[e];if(r(t,n++),t.hasChildren()&&!t.footer){let e=null;switch(i){case u.Normal:e=t.childrenAfterGroup;break;case u.AfterFilter:e=t.childrenAfterAggFilter;break;case u.AfterFilterAndSort:e=t.childrenAfterSort;break;case u.PivotNodes:e=t.leafGroup?null:t.childrenAfterSort}e&&(n=this.recursivelyWalkNodesAndCallback({nodes:[...e],callback:r,recursionType:i,index:n,includeFooterNodes:s}))}}return n}doAggregate(e){this.aggregationStage&&this.aggregationStage.execute({rowNode:this.rootNode,changedPath:e})}doFilterAggregates(e){this.filterAggregatesStage?this.filterAggregatesStage.execute({rowNode:this.rootNode,changedPath:e}):this.rootNode.childrenAfterAggFilter=this.rootNode.childrenAfterFilter}expandOrCollapseAll(o){const r=this.gridOptionsService.isTreeData(),i=this.columnModel.isPivotActive(),s=t=>{t&&t.forEach(t=>{const n=()=>{t.expanded=o,s(t.childrenAfterGroup)};if(r){return void(e.exists(t.childrenAfterGroup)&&n())}if(i){return void(!t.leafGroup&&n())}t.group&&n()})};this.rootNode&&s(this.rootNode.childrenAfterGroup),this.refreshModel({step:a.MAP});const n=o?"expandAll":"collapseAll",d={type:t.EVENT_EXPAND_COLLAPSE_ALL,source:n};this.eventService.dispatchEvent(d)}doSort(e,t){this.sortStage.execute({rowNode:this.rootNode,rowNodeTransactions:e,changedPath:t})}doRowGrouping(e,o,r,i,s){if(this.groupStage){if(o?this.groupStage.execute({rowNode:this.rootNode,rowNodeTransactions:o,rowNodeOrder:r,changedPath:i}):(this.groupStage.execute({rowNode:this.rootNode,changedPath:i,afterColumnsChanged:s}),this.restoreGroupState(e)),this.gridOptionsService.is("groupSelectsChildren")){if(this.selectionService.updateGroupsFromChildrenSelections("rowGroupChanged",i)){const e={type:t.EVENT_SELECTION_CHANGED,source:"rowGroupChanged"};this.eventService.dispatchEvent(e)}}}else this.rootNode.childrenAfterGroup=this.rootNode.allLeafChildren,this.rootNode.sibling&&(this.rootNode.sibling.childrenAfterGroup=this.rootNode.childrenAfterGroup),this.rootNode.updateHasChildren()}restoreGroupState(t){t&&e.traverseNodesWithKey(this.rootNode.childrenAfterGroup,(e,o)=>{"boolean"==typeof t[o]&&(e.expanded=t[o])})}doFilter(e){this.filterStage.execute({rowNode:this.rootNode,changedPath:e})}doPivot(e){this.pivotStage&&this.pivotStage.execute({rowNode:this.rootNode,changedPath:e})}getGroupState(){if(!this.rootNode.childrenAfterGroup||!this.gridOptionsService.is("rememberGroupStateWhenNewData"))return null;const t={};return e.traverseNodesWithKey(this.rootNode.childrenAfterGroup,(e,o)=>t[o]=e.expanded),t}getCopyOfNodesMap(){return this.nodeManager.getCopyOfNodesMap()}getRowNode(e){if("string"==typeof e&&0==e.indexOf(o.ID_PREFIX_ROW_GROUP)){let t=void 0;return this.forEachNode(o=>{o.id===e&&(t=o)}),t}return this.nodeManager.getRowNode(e)}setRowData(e){const o=this.getGroupState();this.nodeManager.setRowData(e),this.selectionService.reset(),this.filterManager.onNewRowsLoaded("rowDataUpdated");const r={type:t.EVENT_ROW_DATA_UPDATED};this.eventService.dispatchEvent(r),this.refreshModel({step:a.EVERYTHING,groupState:o,newData:!0})}batchUpdateRowData(e,t){if(null==this.applyAsyncTransactionsTimeout){this.rowDataTransactionBatch=[];const e=this.gridOptionsService.getAsyncTransactionWaitMillis();this.applyAsyncTransactionsTimeout=window.setTimeout(()=>{this.executeBatchUpdateRowData()},e)}this.rowDataTransactionBatch.push({rowDataTransaction:e,callback:t})}flushAsyncTransactions(){null!=this.applyAsyncTransactionsTimeout&&(clearTimeout(this.applyAsyncTransactionsTimeout),this.executeBatchUpdateRowData())}executeBatchUpdateRowData(){this.valueCache.onDataChanged();const e=[],o=[];let r=!1;if(this.rowDataTransactionBatch&&this.rowDataTransactionBatch.forEach(t=>{const i=this.nodeManager.updateRowData(t.rowDataTransaction,void 0);o.push(i),t.callback&&e.push(t.callback.bind(null,i)),"number"==typeof t.rowDataTransaction.addIndex&&(r=!0)}),this.commonUpdateRowData(o,void 0,r),e.length>0&&window.setTimeout(()=>{e.forEach(e=>e())},0),o.length>0){const e={type:t.EVENT_ASYNC_TRANSACTIONS_FLUSHED,results:o};this.eventService.dispatchEvent(e)}this.rowDataTransactionBatch=null,this.applyAsyncTransactionsTimeout=void 0}updateRowData(e,t){this.valueCache.onDataChanged();const o=this.nodeManager.updateRowData(e,t),r="number"==typeof e.addIndex;return this.commonUpdateRowData([o],t,r),o}createRowNodeOrder(){if(this.gridOptionsService.is("suppressMaintainUnsortedOrder"))return;const e={};if(this.rootNode&&this.rootNode.allLeafChildren)for(let t=0;t<this.rootNode.allLeafChildren.length;t++){e[this.rootNode.allLeafChildren[t].id]=t}return e}commonUpdateRowData(e,o,r){const i=!this.gridOptionsService.is("suppressAnimationFrame");r&&(o=this.createRowNodeOrder()),this.refreshModel({step:a.EVERYTHING,rowNodeTransactions:e,rowNodeOrder:o,keepRenderedRows:!0,keepEditingRows:!0,animate:i}),this.filterManager.onNewRowsLoaded("rowDataUpdated");const s={type:t.EVENT_ROW_DATA_UPDATED};this.eventService.dispatchEvent(s)}doRowsToDisplay(){this.rowsToDisplay=this.flattenStage.execute({rowNode:this.rootNode})}onRowHeightChanged(){this.refreshModel({step:a.MAP,keepRenderedRows:!0,keepEditingRows:!0,keepUndoRedoStack:!0})}onRowHeightChangedDebounced(){this.onRowHeightChanged_debounced()}resetRowHeights(){const e=this.resetRowHeightsForAllRowNodes();this.rootNode.setRowHeight(this.rootNode.rowHeight,!0),e&&this.onRowHeightChanged()}resetRowHeightsForAllRowNodes(){let e=!1;return this.forEachNode(t=>{t.setRowHeight(t.rowHeight,!0);const o=t.detailNode;o&&o.setRowHeight(o.rowHeight,!0),e=!0}),e}onGridStylesChanges(){this.columnModel.isAutoRowHeightActive()||this.resetRowHeights()}};g([r("columnModel")],f.prototype,"columnModel",void 0),g([r("selectionService")],f.prototype,"selectionService",void 0),g([r("filterManager")],f.prototype,"filterManager",void 0),g([r("valueCache")],f.prototype,"valueCache",void 0),g([r("beans")],f.prototype,"beans",void 0),g([r("filterStage")],f.prototype,"filterStage",void 0),g([r("sortStage")],f.prototype,"sortStage",void 0),g([r("flattenStage")],f.prototype,"flattenStage",void 0),g([i("groupStage")],f.prototype,"groupStage",void 0),g([i("aggregationStage")],f.prototype,"aggregationStage",void 0),g([i("pivotStage")],f.prototype,"pivotStage",void 0),g([i("filterAggregatesStage")],f.prototype,"filterAggregatesStage",void 0),g([s],f.prototype,"init",null),f=g([n("rowModel")],f);var w=function(e,t,o,r){var i,s=arguments.length,n=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(n=(s<3?i(n):s>3?i(t,o,n):i(t,o))||n);return s>3&&n&&Object.defineProperty(t,o,n),n};let R=class extends d{execute(e){const{changedPath:t}=e;this.filterService.filter(t)}};w([r("filterService")],R.prototype,"filterService",void 0),R=w([n("filterStage")],R);var v=function(e,t,o,r){var i,s=arguments.length,n=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(n=(s<3?i(n):s>3?i(t,o,n):i(t,o))||n);return s>3&&n&&Object.defineProperty(t,o,n),n};let N=class extends d{execute(t){const o=this.sortController.getSortOptions(),r=e.exists(o)&&o.length>0,i=r&&e.exists(t.rowNodeTransactions)&&this.gridOptionsService.is("deltaSort"),s=o.some(e=>!!this.columnModel.getGroupDisplayColumnForGroup(e.column.getId()));this.sortService.sort(o,r,i,t.rowNodeTransactions,t.changedPath,s)}};v([r("sortService")],N.prototype,"sortService",void 0),v([r("sortController")],N.prototype,"sortController",void 0),v([r("columnModel")],N.prototype,"columnModel",void 0),N=v([n("sortStage")],N);var A=function(e,t,o,r){var i,s=arguments.length,n=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(n=(s<3?i(n):s>3?i(t,o,n):i(t,o))||n);return s>3&&n&&Object.defineProperty(t,o,n),n};let S=class extends d{execute(e){const t=e.rowNode,o=[],r={value:0},i=this.columnModel.isPivotMode(),s=i&&t.leafGroup,n=s?[t]:t.childrenAfterSort;this.recursivelyAddToRowsToDisplay(n,o,r,i,0);return!s&&o.length>0&&this.gridOptionsService.is("groupIncludeTotalFooter")&&(t.createFooter(),this.addRowNodeToRowsToDisplay(t.sibling,o,r,0)),o}recursivelyAddToRowsToDisplay(t,o,r,i,s){if(e.missingOrEmpty(t))return;const n=this.gridOptionsService.is("groupHideOpenParents"),d=this.gridOptionsService.is("groupRemoveSingleChildren"),a=!d&&this.gridOptionsService.is("groupRemoveLowestSingleChildren");for(let e=0;e<t.length;e++){const l=t[e],h=l.hasChildren(),c=i&&!h,p=d&&h&&1===l.childrenAfterGroup.length,u=a&&h&&l.leafGroup&&1===l.childrenAfterGroup.length,g=i&&l.leafGroup,f=n&&l.expanded&&!l.master&&!g;if(!(c||f||p||u)&&this.addRowNodeToRowsToDisplay(l,o,r,s),!i||!l.leafGroup)if(h){const e=p||u;if(l.expanded||e){const t=e?s:s+1;this.recursivelyAddToRowsToDisplay(l.childrenAfterSort,o,r,i,t),this.gridOptionsService.is("groupIncludeFooter")&&this.addRowNodeToRowsToDisplay(l.sibling,o,r,t)}}else if(l.master&&l.expanded){const e=this.createDetailNode(l);this.addRowNodeToRowsToDisplay(e,o,r,s)}}}addRowNodeToRowsToDisplay(e,t,o,r){const i=this.gridOptionsService.isGroupMultiAutoColumn();t.push(e),e.setUiLevel(i?0:r)}createDetailNode(t){if(e.exists(t.detailNode))return t.detailNode;const r=new o(this.beans);return r.detail=!0,r.selectable=!1,r.parent=t,e.exists(t.id)&&(r.id="detail_"+t.id),r.data=t.data,r.level=t.level+1,t.detailNode=r,r}};A([r("columnModel")],S.prototype,"columnModel",void 0),A([r("beans")],S.prototype,"beans",void 0),S=A([n("flattenStage")],S);var T=function(e,t,o,r){var i,s=arguments.length,n=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(n=(s<3?i(n):s>3?i(t,o,n):i(t,o))||n);return s>3&&n&&Object.defineProperty(t,o,n),n};let y=class extends d{init(){this.postSortFunc=this.gridOptionsService.getCallback("postSortRows")}sort(e,t,o,r,i,s){const n=this.gridOptionsService.is("groupMaintainOrder"),d=this.columnModel.getAllGridColumns().some(e=>e.isRowGroupActive());let a={};o&&r&&(a=this.calculateDirtyNodes(r));const l=this.columnModel.isPivotMode(),h=r=>{this.pullDownGroupDataForHideOpenParents(r.childrenAfterAggFilter,!0);const h=l&&r.leafGroup;if(n&&d&&!r.leafGroup&&!s){const e=r.childrenAfterAggFilter.slice(0);if(r.childrenAfterSort){const t={};r.childrenAfterSort.forEach((e,o)=>{t[e.id]=o}),e.sort((e,o)=>{var r,i;return(null!==(r=t[e.id])&&void 0!==r?r:0)-(null!==(i=t[o.id])&&void 0!==i?i:0)})}r.childrenAfterSort=e}else r.childrenAfterSort=!t||h?r.childrenAfterAggFilter.slice(0):o?this.doDeltaSort(r,a,i,e):this.rowNodeSorter.doFullSort(r.childrenAfterAggFilter,e);if(r.sibling&&(r.sibling.childrenAfterSort=r.childrenAfterSort),this.updateChildIndexes(r),this.postSortFunc){const e={nodes:r.childrenAfterSort};this.postSortFunc(e)}};i&&i.forEachChangedNodeDepthFirst(h),this.updateGroupDataForHideOpenParents(i)}calculateDirtyNodes(e){const t={},o=e=>{e&&e.forEach(e=>t[e.id]=!0)};return e&&e.forEach(e=>{o(e.add),o(e.update),o(e.remove)}),t}doDeltaSort(e,t,o,r){const i=e.childrenAfterAggFilter,s=e.childrenAfterSort;if(!s)return this.rowNodeSorter.doFullSort(i,r);const n={},d=[];i.forEach(e=>{t[e.id]||!o.canSkip(e)?d.push(e):n[e.id]=!0});const a=s.filter(e=>n[e.id]),l=(e,t)=>({currentPos:t,rowNode:e}),h=d.map(l).sort((e,t)=>this.rowNodeSorter.compareRowNodes(r,e,t));return this.mergeSortedArrays(r,h,a.map(l)).map(({rowNode:e})=>e)}mergeSortedArrays(e,t,o){const r=[];let i=0,s=0;for(;i<t.length&&s<o.length;){this.rowNodeSorter.compareRowNodes(e,t[i],o[s])<0?r.push(t[i++]):r.push(o[s++])}for(;i<t.length;)r.push(t[i++]);for(;s<o.length;)r.push(o[s++]);return r}updateChildIndexes(t){if(e.missing(t.childrenAfterSort))return;const o=t.childrenAfterSort;for(let e=0;e<o.length;e++){const r=o[e],i=0===e,s=e===t.childrenAfterSort.length-1;r.setFirstChild(i),r.setLastChild(s),r.setChildIndex(e)}}updateGroupDataForHideOpenParents(t){if(!this.gridOptionsService.is("groupHideOpenParents"))return;if(this.gridOptionsService.isTreeData()){const t="AG Grid: The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them (as opposed to Row Grouping, which only has Aggregated Values at the group level).";return e.doOnce(()=>console.warn(t),"sortService.hideOpenParentsWithTreeData"),!1}const o=e=>{this.pullDownGroupDataForHideOpenParents(e.childrenAfterSort,!1),e.childrenAfterSort.forEach(e=>{e.hasChildren()&&o(e)})};t&&t.executeFromRootNode(e=>o(e))}pullDownGroupDataForHideOpenParents(t,o){this.gridOptionsService.is("groupHideOpenParents")&&!e.missing(t)&&t.forEach(e=>{this.columnModel.getGroupDisplayColumns().forEach(t=>{const r=t.getColDef().showRowGroup;if("string"!=typeof r)return void console.error("AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup");const i=r,s=this.columnModel.getPrimaryColumn(i);if(!(s===e.rowGroupColumn))if(o)e.setGroupValue(t.getId(),void 0);else{const o=e.getFirstChildOfFirstChild(s);o&&e.setGroupValue(t.getId(),o.key)}})})}};T([r("columnModel")],y.prototype,"columnModel",void 0),T([r("rowNodeSorter")],y.prototype,"rowNodeSorter",void 0),T([s],y.prototype,"init",null),y=T([n("sortService")],y);var m=function(e,t,o,r){var i,s=arguments.length,n=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(n=(s<3?i(n):s>3?i(t,o,n):i(t,o))||n);return s>3&&n&&Object.defineProperty(t,o,n),n};let D=class extends d{filter(e){const t=this.filterManager.isColumnFilterPresent()||this.filterManager.isQuickFilterPresent()||this.filterManager.isExternalFilterPresent();this.filterNodes(t,e)}filterNodes(e,t){const o=(t,o)=>{t.hasChildren()?t.childrenAfterFilter=e&&!o?t.childrenAfterGroup.filter(e=>{const t=e.childrenAfterFilter&&e.childrenAfterFilter.length>0,o=e.data&&this.filterManager.doesRowPassFilter({rowNode:e});return t||o}):t.childrenAfterGroup:t.childrenAfterFilter=t.childrenAfterGroup,t.sibling&&(t.sibling.childrenAfterFilter=t.childrenAfterFilter)};if(this.doingTreeDataFiltering()){const e=(t,r)=>{if(t.childrenAfterGroup)for(let i=0;i<t.childrenAfterGroup.length;i++){const s=t.childrenAfterGroup[i],n=r||this.filterManager.doesRowPassFilter({rowNode:s});s.childrenAfterGroup?e(t.childrenAfterGroup[i],n):o(s,n)}o(t,r)},r=t=>e(t,!1);t.executeFromRootNode(r)}else{const e=e=>o(e,!1);t.forEachChangedNodeDepthFirst(e,!0)}}doingTreeDataFiltering(){return this.gridOptionsService.isTreeData()&&!this.gridOptionsService.is("excludeChildrenWhenTreeDataFiltering")}};m([r("filterManager")],D.prototype,"filterManager",void 0),D=m([n("filterService")],D);var E=function(e,t,o,r){var i,s=arguments.length,n=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,r);else for(var d=e.length-1;d>=0;d--)(i=e[d])&&(n=(s<3?i(n):s>3?i(t,o,n):i(t,o))||n);return s>3&&n&&Object.defineProperty(t,o,n),n};let O=class extends d{postConstruct(){"clientSide"===this.rowModel.getType()&&(this.clientSideRowModel=this.rowModel)}isActive(){const e=this.gridOptionsService.exists("getRowId");return!this.gridOptionsService.is("resetRowDataOnUpdate")&&e}setRowData(e){const t=this.createTransactionForRowData(e);if(!t)return;const[o,r]=t;this.clientSideRowModel.updateRowData(o,r)}createTransactionForRowData(t){if(e.missing(this.clientSideRowModel))return void console.error("AG Grid: ImmutableService only works with ClientSideRowModel");const o=this.gridOptionsService.getCallback("getRowId");if(null==o)return void console.error("AG Grid: ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!");const r={remove:[],update:[],add:[]},i=this.clientSideRowModel.getCopyOfNodesMap(),s=this.gridOptionsService.is("suppressMaintainUnsortedOrder")?void 0:{};return e.exists(t)&&t.forEach((e,t)=>{const n=o({data:e,level:0}),d=i[n];if(s&&(s[n]=t),d){d.data!==e&&r.update.push(e),i[n]=void 0}else r.add.push(e)}),e.iterateObject(i,(e,t)=>{t&&r.remove.push(t.data)}),[r,s]}};E([r("rowModel")],O.prototype,"rowModel",void 0),E([r("rowRenderer")],O.prototype,"rowRenderer",void 0),E([s],O.prototype,"postConstruct",null),O=E([n("immutableService")],O);const C={version:"30.0.0",moduleName:c.ClientSideRowModelModule,rowModel:"clientSide",beans:[f,R,N,S,y,D,O]};export{C as ClientSideRowModelModule};