{"version":3,"sources":["shared/customComp/dateComponentWrapper.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAGlE,MAAM,OAAO,oBAAqB,SAAQ,sBAAyE;IAAnH;;QACY,SAAI,GAAgB,IAAI,CAAC;IAoCrC,CAAC;IAlCU,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,OAAO,CAAC,IAAiB;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,OAAO,CAAC,MAAmB;QAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAES,kBAAkB;QACxB,OAAO,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAAC;IAC3F,CAAC;IAEO,UAAU,CAAC,IAAiB;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAES,QAAQ;QACd,MAAM,KAAK,GAAoB,gCACxB,IAAI,CAAC,YAAY,KACpB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,YAAY,EAAE,CAAC,IAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAC1D,GAAG,EAAE,IAAI,CAAC,GAAG,GACT,CAAC;QACT,qDAAqD;QACrD,OAAQ,KAAa,CAAC,aAAa,CAAC;QACpC,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ","file":"dateComponentWrapper.mjs","sourcesContent":["import { IDate, IDateParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomDateProps, CustomDateCallbacks } from \"./interfaces\";\n\nexport class DateComponentWrapper extends CustomComponentWrapper<IDateParams, CustomDateProps, CustomDateCallbacks> implements IDate {\n    private date: Date | null = null;\n\n    public getDate(): Date | null {\n        return this.date;\n    }\n\n    public setDate(date: Date | null): void {\n        this.date = date;\n        this.refreshProps();\n    }\n\n    public refresh(params: IDateParams): void {\n        this.sourceParams = params;\n        this.refreshProps();\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['afterGuiAttached', 'setInputPlaceholder', 'setInputAriaLabel', 'setDisabled'];\n    }\n\n    private updateDate(date: Date | null): void {\n        this.setDate(date);\n        this.sourceParams.onDateChanged();\n    }\n\n    protected getProps(): CustomDateProps {\n        const props: CustomDateProps = {\n            ...this.sourceParams,\n            date: this.date,\n            onDateChange: (date: Date | null) => this.updateDate(date),\n            key: this.key\n        } as any;\n        // remove props in IDataParams but not BaseDateParams\n        delete (props as any).onDateChanged;\n        return props;\n    }\n}\n"]}