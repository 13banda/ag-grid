{"version":3,"sources":["shared/customComp/filterComponentWrapper.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAGlE,MAAM,OAAO,sBAAuB,SAAQ,sBAA+E;IAA3H;;QACY,UAAK,GAAQ,IAAI,CAAC;IAmD9B,CAAC;IAjDU,cAAc;QACjB,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;IAC9B,CAAC;IAEM,cAAc,CAAC,MAAkC;QACpD,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACvD,CAAC;IAEM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,QAAQ,CAAC,KAAU;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,OAAO,CAAC,SAAwB;QACnC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,kBAAkB;QACxB,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,oBAAoB,CAAC,CAAC;IACjH,CAAC;IAEO,WAAW,CAAC,KAAU;QAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,UAAU,CAAC,GAAG,EAAE;YACZ,oCAAoC;YACpC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAES,QAAQ;QACd,MAAM,KAAK,GAAsB,gCAC1B,IAAI,CAAC,YAAY,KACpB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,aAAa,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EACtD,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,EAC3D,GAAG,EAAE,IAAI,CAAC,GAAG,GACT,CAAC;QACT,0DAA0D;QAC1D,OAAQ,KAAa,CAAC,qBAAqB,CAAC;QAC5C,OAAQ,KAAa,CAAC,sBAAsB,CAAC;QAC7C,OAAQ,KAAa,CAAC,WAAW,CAAC;QAClC,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ","file":"filterComponentWrapper.mjs","sourcesContent":["import { IDoesFilterPassParams, IFilter, IFilterParams } from \"@ag-grid-community/core\";\nimport { CustomComponentWrapper } from \"./customComponentWrapper\";\nimport { CustomFilterProps, CustomFilterCallbacks } from \"./interfaces\";\n\nexport class FilterComponentWrapper extends CustomComponentWrapper<IFilterParams, CustomFilterProps, CustomFilterCallbacks> implements IFilter {\n    private model: any = null;\n\n    public isFilterActive(): boolean {\n        return this.model != null;\n    }\n\n    public doesFilterPass(params: IDoesFilterPassParams<any>): boolean {\n        return this.providedMethods.doesFilterPass(params);\n    }\n\n    public getModel(): any {\n        return this.model;\n    }\n\n    public setModel(model: any): void {\n        this.model = model;\n        this.refreshProps();\n    }\n\n    public refresh(newParams: IFilterParams): boolean {\n        this.sourceParams = newParams;\n        this.refreshProps();\n        return true;\n    }\n\n    protected getOptionalMethods(): string[] {\n        return ['afterGuiAttached', 'afterGuiDetached', 'onNewRowsLoaded', 'getModelAsString', 'onAnyFilterChanged'];\n    }\n\n    private updateModel(model: any): void {\n        this.setModel(model);\n        setTimeout(() => {\n            // ensure prop updates have happened\n            this.sourceParams.filterChangedCallback();\n        });\n    }\n\n    protected getProps(): CustomFilterProps {\n        const props: CustomFilterProps = {\n            ...this.sourceParams,\n            model: this.model,\n            onModelChange: (model: any) => this.updateModel(model),\n            onUiChange: () => this.sourceParams.filterChangedCallback(),\n            key: this.key\n        } as any;\n        // remove props in IFilterParams but not CustomFilterProps\n        delete (props as any).filterChangedCallback;\n        delete (props as any).filterModifiedCallback;\n        delete (props as any).valueGetter;\n        return props;\n    }\n}\n"]}