/**
          * @ag-grid-enterprise/server-side-row-model - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.1
          * @link https://www.ag-grid.com/
          * @license Commercial
          */
/**
          * @ag-grid-enterprise/server-side-row-model - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.1
          * @link https://www.ag-grid.com/
          * @license Commercial
          */
import{Autowired as e,PostConstruct as t,PreDestroy as o,RowNodeBlock as s,NumberSequence as r,_ as i,ServerSideTransactionResultStatus as n,Events as d,BeanStub as l,RowNodeBlockLoader as a,Bean as c,RowNode as h,GROUP_AUTO_COLUMN_ID as u,ModuleNames as p}from"@ag-grid-community/core";import{EnterpriseCoreModule as g}from"@ag-grid-enterprise/core";var f=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};class S extends s{constructor(e,t,o){super(0),this.nodeIdSequence=new r,this.info={},this.ssrmParams=e,this.parentRowNode=o,this.level=o.level+1,this.groupLevel=e.rowGroupCols?this.level<e.rowGroupCols.length:void 0,this.leafGroup=!!e.rowGroupCols&&this.level===e.rowGroupCols.length-1}postConstruct(){if(this.usingTreeData=this.gridOptionsService.isTreeData(),this.nodeIdPrefix=this.blockUtils.createNodeIdPrefix(this.parentRowNode),!this.usingTreeData&&this.groupLevel){const e=this.ssrmParams.rowGroupCols[this.level];this.groupField=e.field,this.rowGroupColumn=this.columnModel.getRowGroupColumns()[this.level]}let e=1;const t=-1===this.parentRowNode.level,o=this.storeUtils.getServerSideInitialRowCount();t&&void 0!==o&&(e=o),this.initialiseRowNodes(e),this.rowNodeBlockLoader.addBlock(this),this.addDestroyFunc(()=>this.rowNodeBlockLoader.removeBlock(this))}destroyRowNodes(){this.blockUtils.destroyRowNodes(this.allRowNodes),this.allRowNodes=[],this.nodesAfterSort=[],this.nodesAfterFilter=[],this.allNodesMap={}}initialiseRowNodes(e,t=!1){this.destroyRowNodes();for(let o=0;o<e;o++){const e=this.blockUtils.createRowNode({field:this.groupField,group:this.groupLevel,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn});t&&(e.failedLoad=!0),this.allRowNodes.push(e),this.nodesAfterFilter.push(e),this.nodesAfterSort.push(e)}}getBlockStateJson(){return{id:this.nodeIdPrefix?this.nodeIdPrefix:"",state:this.getState()}}loadFromDatasource(){this.storeUtils.loadFromDatasource({startRow:void 0,endRow:void 0,parentBlock:this,parentNode:this.parentRowNode,storeParams:this.ssrmParams,successCallback:this.pageLoaded.bind(this,this.getVersion()),success:this.success.bind(this,this.getVersion()),failCallback:this.pageLoadFailed.bind(this,this.getVersion()),fail:this.pageLoadFailed.bind(this,this.getVersion())})}getStartRow(){return 0}getEndRow(){return this.nodesAfterSort.length}createDataNode(e,t){const o=this.blockUtils.createRowNode({field:this.groupField,group:this.groupLevel,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn});null!=t?i.insertIntoArray(this.allRowNodes,o,t):this.allRowNodes.push(o);const s=this.prefixId(this.nodeIdSequence.next());return this.blockUtils.setDataIntoRowNode(o,e,s,void 0),this.nodeManager.addRowNode(o),this.blockUtils.checkOpenByDefault(o),this.allNodesMap[o.id]=o,o}prefixId(e){return this.nodeIdPrefix?this.nodeIdPrefix+"-"+e:e.toString()}processServerFail(){this.initialiseRowNodes(1,!0),this.fireStoreUpdatedEvent(),this.flushAsyncTransactions()}processServerResult(e){if(!this.isAlive())return;const t=e.storeInfo||e.groupLevelInfo;t&&Object.assign(this.info,t);const o=this.allRowNodes.length>0?this.allNodesMap:void 0;if(this.allRowNodes=[],this.nodesAfterSort=[],this.nodesAfterFilter=[],this.allNodesMap={},!e.rowData){const t='AG Grid: "params.data" is missing from Server-Side Row Model success() callback. Please use the "data" attribute. If no data is returned, set an empty list.';i.doOnce(()=>console.warn(t,e),"FullStore.noData")}this.createOrRecycleNodes(o,e.rowData),o&&this.blockUtils.destroyRowNodes(i.getAllValuesInObject(o)),this.filterAndSortNodes(),this.fireStoreUpdatedEvent(),this.flushAsyncTransactions()}createOrRecycleNodes(e,t){if(!t)return;const o=t=>{if(!e)return;const o=this.gridOptionsService.getCallback("getRowId");if(!o)return;const s=this.parentRowNode.getGroupKeys(),r=this.level,i=o({data:t,parentKeys:s.length>0?s:void 0,level:r}),n=e[i];return n?(delete e[i],n):void 0},s=(e,t)=>{this.allNodesMap[e.id]=e,this.blockUtils.updateDataIntoRowNode(e,t),this.allRowNodes.push(e)};t.forEach(e=>{const t=o(e);t?s(t,e):this.createDataNode(e)})}flushAsyncTransactions(){window.setTimeout(()=>this.transactionManager.flushAsyncTransactions(),0)}filterAndSortNodes(){this.filterRowNodes(),this.sortRowNodes()}sortRowNodes(){const e=this.storeUtils.isServerSideSortAllLevels()||this.storeUtils.isServerSideSortOnServer(),t=this.sortController.getSortOptions(),o=!t||0==t.length;this.nodesAfterSort=e||o?this.nodesAfterFilter:this.rowNodeSorter.doFullSort(this.nodesAfterFilter,t)}filterRowNodes(){const e=!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||this.storeUtils.isServerSideFilterOnServer(),t=this.groupLevel;this.nodesAfterFilter=e||t?this.allRowNodes:this.allRowNodes.filter(e=>this.filterManager.doesRowPassFilter({rowNode:e}))}clearDisplayIndexes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.allRowNodes.forEach(e=>this.blockUtils.clearDisplayIndex(e))}getDisplayIndexEnd(){return this.displayIndexEnd}isDisplayIndexInStore(e){return 0!==this.getRowCount()&&(e>=this.displayIndexStart&&e<this.displayIndexEnd)}setDisplayIndexes(e,t){this.displayIndexStart=e.peek(),this.topPx=t.value;const o={};this.nodesAfterSort.forEach(s=>{this.blockUtils.setDisplayIndex(s,e,t),o[s.id]=!0}),this.allRowNodes.forEach(e=>{o[e.id]||this.blockUtils.clearDisplayIndex(e)}),this.displayIndexEnd=e.peek(),this.heightPx=t.value-this.topPx}forEachStoreDeep(e,t=new r){e(this,t.next()),this.allRowNodes.forEach(o=>{const s=o.childStore;s&&s.forEachStoreDeep(e,t)})}forEachNodeDeep(e,t=new r){this.allRowNodes.forEach(o=>{e(o,t.next());const s=o.childStore;s&&s.forEachNodeDeep(e,t)})}forEachNodeDeepAfterFilterAndSort(e,t=new r){this.nodesAfterSort.forEach(o=>{e(o,t.next());const s=o.childStore;s&&s.forEachNodeDeepAfterFilterAndSort(e,t)})}getRowUsingDisplayIndex(e){if(!this.isDisplayIndexInStore(e))return;return this.blockUtils.binarySearchForDisplayIndex(e,this.nodesAfterSort)}getRowBounds(e){for(let t=0;t<this.nodesAfterSort.length;t++){const o=this.nodesAfterSort[t],s=this.blockUtils.extractRowBounds(o,e);if(s)return s}return null}isPixelInRange(e){return e>=this.topPx&&e<this.topPx+this.heightPx}getRowIndexAtPixel(e){if(e<=this.topPx){return this.nodesAfterSort[0].rowIndex}if(e>=this.topPx+this.heightPx){const t=this.nodesAfterSort[this.nodesAfterSort.length-1],o=t.rowTop+t.rowHeight;if(e>=o&&t.expanded){if(t.childStore&&t.childStore.getRowCount()>0)return t.childStore.getRowIndexAtPixel(e);if(t.detailNode)return t.detailNode.rowIndex}return t.rowIndex}let t=null;this.nodesAfterSort.forEach(o=>{const s=this.blockUtils.getIndexAtPixel(o,e);null!=s&&(t=s)});return null==t?this.displayIndexEnd-1:t}getChildStore(e){return this.storeUtils.getChildStore(e,this,e=>this.allRowNodes.find(t=>t.key==e))}forEachChildStoreShallow(e){this.allRowNodes.forEach(t=>{const o=t.childStore;o&&e(o)})}refreshAfterFilter(e){const t=this.storeUtils.isServerSideFilterOnServer(),o=this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e);if(!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||t&&o)return this.refreshStore(!0),void this.sortRowNodes();this.filterRowNodes(),this.sortRowNodes(),this.forEachChildStoreShallow(t=>t.refreshAfterFilter(e))}refreshAfterSort(e){const t=this.storeUtils.isServerSideSortOnServer(),o=this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e);if(this.storeUtils.isServerSideSortAllLevels()||t&&o)return this.refreshStore(!0),void this.filterRowNodes();this.filterRowNodes(),this.sortRowNodes(),this.forEachChildStoreShallow(t=>t.refreshAfterSort(e))}applyTransaction(e){switch(this.getState()){case s.STATE_FAILED:return{status:n.StoreLoadingFailed};case s.STATE_LOADING:return{status:n.StoreLoading};case s.STATE_WAITING_TO_LOAD:return{status:n.StoreWaitingToLoad}}const t=this.gridOptionsService.getCallback("isApplyServerSideTransaction");if(t){if(!t({transaction:e,parentNode:this.parentRowNode,storeInfo:this.info,groupLevelInfo:this.info}))return{status:n.Cancelled}}const o={status:n.Applied,remove:[],update:[],add:[]},r=[];return this.executeAdd(e,o),this.executeRemove(e,o,r),this.executeUpdate(e,o,r),this.filterAndSortNodes(),this.updateSelection(r),o}updateSelection(e){if(e.length>0){this.selectionService.setNodesSelected({newValue:!1,nodes:e,suppressFinishActions:!0,clearSelection:!1,source:"rowDataChanged"});const t={type:d.EVENT_SELECTION_CHANGED,source:"rowDataChanged"};this.eventService.dispatchEvent(t)}}executeAdd(e,t){const{add:o,addIndex:s}=e;if(i.missingOrEmpty(o))return;"number"==typeof s&&s>=0?o.reverse().forEach(e=>{const o=this.createDataNode(e,s);t.add.push(o)}):o.forEach(e=>{const o=this.createDataNode(e);t.add.push(o)})}executeRemove(e,t,o){const{remove:s}=e;if(null==s)return;const r={};s.forEach(e=>{const s=this.lookupRowNode(e);s&&(s.isSelected()&&o.push(s),s.clearRowTopAndRowIndex(),r[s.id]=!0,delete this.allNodesMap[s.id],t.remove.push(s),this.nodeManager.removeNode(s))}),this.allRowNodes=this.allRowNodes.filter(e=>!r[e.id])}executeUpdate(e,t,o){const{update:s}=e;null!=s&&s.forEach(e=>{const s=this.lookupRowNode(e);s&&(this.blockUtils.updateDataIntoRowNode(s,e),!s.selectable&&s.isSelected()&&o.push(s),t.update.push(s))})}lookupRowNode(e){const t=this.gridOptionsService.getCallback("getRowId");let o;if(null!=t){const s=this.level,r=this.parentRowNode.getGroupKeys(),i=t({data:e,parentKeys:r.length>0?r:void 0,level:s});if(o=this.allNodesMap[i],!o)return console.error(`AG Grid: could not find row id=${i}, data item was not found for this id`),null}else if(o=this.allRowNodes.find(t=>t.data===e),!o)return console.error("AG Grid: could not find data item as object was not found",e),null;return o}addStoreStates(e){e.push({suppressInfiniteScroll:!0,route:this.parentRowNode.getGroupKeys(),rowCount:this.allRowNodes.length,info:this.info}),this.forEachChildStoreShallow(t=>t.addStoreStates(e))}refreshStore(e){if(e){const e=this.nodesAfterSort?this.nodesAfterSort.length:1;this.initialiseRowNodes(e)}this.scheduleLoad(),this.fireStoreUpdatedEvent()}retryLoads(){this.getState()===s.STATE_FAILED&&(this.initialiseRowNodes(1),this.scheduleLoad()),this.forEachChildStoreShallow(e=>e.retryLoads())}scheduleLoad(){this.setStateWaitingToLoad(),this.rowNodeBlockLoader.checkBlockToLoad()}fireStoreUpdatedEvent(){const e={type:d.EVENT_STORE_UPDATED};this.eventService.dispatchEvent(e)}getRowCount(){return this.nodesAfterSort.length}getTopLevelRowDisplayedIndex(e){return this.nodesAfterSort[e].rowIndex}isLastRowIndexKnown(){return this.getState()==s.STATE_LOADED}getRowNodesInRange(e,t){const o=[];let s=!1;i.missing(e)&&(s=!0),this.nodesAfterSort.forEach(r=>{const i=r===e||r===t;(s||i)&&o.push(r),i&&(s=!s)});return s?[]:o}getStoreBounds(){return{topPx:this.topPx,heightPx:this.heightPx}}}f([e("ssrmStoreUtils")],S.prototype,"storeUtils",void 0),f([e("ssrmBlockUtils")],S.prototype,"blockUtils",void 0),f([e("columnModel")],S.prototype,"columnModel",void 0),f([e("rowNodeBlockLoader")],S.prototype,"rowNodeBlockLoader",void 0),f([e("rowNodeSorter")],S.prototype,"rowNodeSorter",void 0),f([e("sortController")],S.prototype,"sortController",void 0),f([e("selectionService")],S.prototype,"selectionService",void 0),f([e("ssrmNodeManager")],S.prototype,"nodeManager",void 0),f([e("filterManager")],S.prototype,"filterManager",void 0),f([e("ssrmTransactionManager")],S.prototype,"transactionManager",void 0),f([t],S.prototype,"postConstruct",null),f([o],S.prototype,"destroyRowNodes",null);var w=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};class v extends l{constructor(e,t,o){super(),this.loadingNodes=new Set,this.checkForLoadQueued=!1,this.loaderTimeout=void 0,this.nextBlockToLoad=void 0,this.parentNode=t,this.cache=e,this.storeParams=o}init(){this.addManagedListener(this.rowNodeBlockLoader,a.BLOCK_LOADED_EVENT,()=>this.queueLoadAction())}isRowLoading(e){return this.loadingNodes.has(e)}getBlockToLoad(){var e;const t=this.api.getFirstDisplayedRow(),o=this.api.getLastDisplayedRow();for(let e=t;e<=o;e++){const t=this.cache.getNodeCachedByDisplayIndex(e);if(!t)continue;const o=this.cache.getNodes().getBy("node",t);if(o&&(!this.isRowLoading(o.index)&&(t.__needsRefreshWhenVisible||t.stub&&!t.failedLoad)))return this.getBlockStartIndexForIndex(o.index)}const s=this.cache.getNodesToRefresh();let r=null,i=Number.MAX_SAFE_INTEGER;s.forEach(e=>{if(null==e.rowIndex)return void(r=e);const s=Math.abs(t-e.rowIndex),n=Math.abs(e.rowIndex-o);s<i&&(r=e,i=s),n<i&&(r=e,i=n)});const n=null===(e=this.cache.getNodes().getBy("node",r))||void 0===e?void 0:e.index;return null==n?void 0:this.getBlockStartIndexForIndex(n)}reset(){this.loadingNodes.clear(),clearTimeout(this.loaderTimeout),this.loaderTimeout=void 0}executeLoad(e,t){var o;const s=this.cache.getSsrmParams(),r={startRow:e,endRow:t,rowGroupCols:s.rowGroupCols,valueCols:s.valueCols,pivotCols:s.pivotCols,pivotMode:s.pivotMode,groupKeys:this.parentNode.getGroupKeys(),filterModel:s.filterModel,sortModel:s.sortModel},i=()=>{for(let o=0;o<t-e;o++)this.loadingNodes.delete(e+o)},n=o=>{this.rowNodeBlockLoader.loadComplete(),this.cache.onLoadSuccess(e,t-e,o),i(),this.queueLoadAction()},d=()=>{this.rowNodeBlockLoader.loadComplete(),this.cache.onLoadFailed(e,t-e),i(),this.queueLoadAction()},l={request:r,successCallback:(e,t)=>n({rowData:e,rowCount:t}),success:n,failCallback:d,fail:d,parentNode:this.parentNode,api:this.api,columnApi:this.columnApi,context:this.gridOptionsService.context};(()=>{for(let o=0;o<t-e;o++)this.loadingNodes.add(e+o)})(),null===(o=this.cache.getSsrmParams().datasource)||void 0===o||o.getRows(l)}getNextBlockToLoad(){const e=this.getBlockToLoad();return null!=e&&e<0&&this.getBlockToLoad(),null!=e?[String(e),e+this.getBlockSize()]:null}queueLoadCheck(){this.checkForLoadQueued||(this.checkForLoadQueued=!0,window.queueMicrotask(()=>{this.checkForLoadQueued=!1,this.queueLoadAction()}))}queueLoadAction(){var e;const t=this.getNextBlockToLoad();if(!t)return window.clearTimeout(this.loaderTimeout),this.loaderTimeout=void 0,void(this.nextBlockToLoad=void 0);if(!this.nextBlockToLoad||this.nextBlockToLoad[0]!==t[0]&&this.nextBlockToLoad[1]!==t[1]){this.nextBlockToLoad=t,window.clearTimeout(this.loaderTimeout);const[o,s]=this.nextBlockToLoad,r=Number(o);this.loaderTimeout=window.setTimeout(()=>{this.cache.isAlive()&&(this.loaderTimeout=void 0,this.attemptLoad(r,s),this.nextBlockToLoad=void 0)},null!==(e=this.gridOptionsService.getNum("blockLoadDebounceMillis"))&&void 0!==e?e:0)}}attemptLoad(e,t){const o=this.rowNodeBlockLoader.getAvailableLoadingCount();null!=o&&0===o||(this.rowNodeBlockLoader.registerLoads(1),this.executeLoad(e,t),this.queueLoadAction())}getBlockSize(){return this.storeParams.cacheBlockSize||v.DEFAULT_BLOCK_SIZE}getBlockStartIndexForIndex(e){return e-e%this.getBlockSize()}getBlockBoundsForIndex(e){const t=this.getBlockStartIndexForIndex(e);return[t,t+this.getBlockSize()]}}v.DEFAULT_BLOCK_SIZE=100,w([e("gridApi")],v.prototype,"api",void 0),w([e("columnApi")],v.prototype,"columnApi",void 0),w([e("rowNodeBlockLoader")],v.prototype,"rowNodeBlockLoader",void 0),w([t],v.prototype,"init",null);class R{constructor(...e){if(e.length<1)throw new Error("AG Grid: At least one index must be provided.");this.indexes=e,this.maps=new Map(this.indexes.map(e=>[e,new Map]))}getBy(e,t){const o=this.maps.get(e);if(!o)throw new Error(`AG Grid: ${String(e)} not found`);return o.get(t)}set(e){this.indexes.forEach(t=>{const o=this.maps.get(t);if(!o)throw new Error(`AG Grid: ${String(t)} not found`);o.set(e[t],e)})}delete(e){this.indexes.forEach(t=>{const o=this.maps.get(t);if(!o)throw new Error(`AG Grid: ${String(t)} not found`);o.delete(e[t])})}clear(){this.maps.forEach(e=>e.clear())}getIterator(e){const t=this.maps.get(e);if(!t)throw new Error(`AG Grid: ${String(e)} not found`);return t.values()}forEach(e){const t=this.getIterator(this.indexes[0]);let o;for(;(o=t.next())&&!o.done;)e(o.value)}find(e){const t=this.getIterator(this.indexes[0]);let o;for(;(o=t.next())&&!o.done;)if(e(o.value))return o.value}filter(e){const t=this.getIterator(this.indexes[0]);let o;const s=[];for(;(o=t.next())&&!o.done;)e(o.value)&&s.push(o.value);return s}}var N=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};class y extends l{constructor(e,t,o){super(),this.live=!0,this.store=e,this.numberOfRows=t,this.isLastRowKnown=!1,this.storeParams=o}init(){this.nodeMap=new R("index","id","node"),this.nodeDisplayIndexMap=new Map,this.nodesToRefresh=new Set,this.defaultNodeIdPrefix=this.blockUtils.createNodeIdPrefix(this.store.getParentNode()),this.rowLoader=this.createManagedBean(new v(this,this.store.getParentNode(),this.storeParams)),this.getRowIdFunc=this.gridOptionsService.getCallback("getRowId"),this.isMasterDetail=this.gridOptionsService.isMasterDetail()}destroyRowNodes(){this.numberOfRows=0,this.nodeMap.forEach(e=>this.blockUtils.destroyRowNode(e.node)),this.nodeMap.clear(),this.nodeDisplayIndexMap.clear(),this.nodesToRefresh.clear(),this.live=!1}getRowByDisplayIndex(e){var t,o,s,r;if(!this.store.isDisplayIndexInStore(e))return;const i=this.nodeDisplayIndexMap.get(e);if(i)return(i.stub||i.__needsRefreshWhenVisible)&&this.rowLoader.queueLoadCheck(),i;if(e===this.store.getDisplayIndexStart())return this.createStubNode(0,e);const n=this.nodeDisplayIndexMap.get(e-1);if(n){if(this.isMasterDetail&&n.master&&n.expanded)return n.detailNode;if(n.expanded&&(null===(t=n.childStore)||void 0===t?void 0:t.isDisplayIndexInStore(e)))return null===(o=n.childStore)||void 0===o?void 0:o.getRowUsingDisplayIndex(e);const s=this.nodeMap.getBy("node",n);return this.createStubNode(s.index+1,e)}const d=this.getSurroundingNodesByDisplayIndex(e);if(null==d){const t=this.store.getRowCount()-(this.store.getDisplayIndexEnd()-e);return this.createStubNode(t,e)}const{previousNode:l,nextNode:a}=d;if(l&&l.node.expanded&&(null===(s=l.node.childStore)||void 0===s?void 0:s.isDisplayIndexInStore(e)))return null===(r=l.node.childStore)||void 0===r?void 0:r.getRowUsingDisplayIndex(e);if(a){const t=a.node.rowIndex-e,o=a.index-t;return this.createStubNode(o,e)}const c=this.store.getRowCount()-(this.store.getDisplayIndexEnd()-e);return this.createStubNode(c,e)}createStubNode(e,t){const o=this.store.getRowBounds(t),s=this.createRowAtIndex(e,null,e=>{e.setRowIndex(t),e.setRowTop(o.rowTop),this.nodeDisplayIndexMap.set(t,e)});return this.rowLoader.queueLoadCheck(),s}getRowByStoreIndex(e){var t;return null===(t=this.nodeMap.getBy("index",e))||void 0===t?void 0:t.node}skipDisplayIndexes(e,t,o){if(0===e)return;const s=this.gridOptionsService.getRowHeightAsNumber();t.skip(e),o.value+=e*s}setDisplayIndexes(e,t){this.nodeDisplayIndexMap.clear();const o={};this.nodeMap.forEach(e=>{o[e.index]=e.node});let s=-1;for(const r in o){const i=o[r],n=Number(r),d=n-1-s;this.skipDisplayIndexes(d,e,t),this.blockUtils.setDisplayIndex(i,e,t),this.nodeDisplayIndexMap.set(i.rowIndex,i),s=n}const r=this.numberOfRows-1-s;this.skipDisplayIndexes(r,e,t),this.purgeExcessRows()}getRowCount(){return this.numberOfRows}setRowCount(e,t){if(e<0)throw new Error("AG Grid: setRowCount can only accept a positive row count.");this.numberOfRows=e,null!=t&&(this.isLastRowKnown=t,!1===t&&(this.numberOfRows+=1)),this.fireStoreUpdatedEvent()}getNodes(){return this.nodeMap}getNodeCachedByDisplayIndex(e){var t;return null!==(t=this.nodeDisplayIndexMap.get(e))&&void 0!==t?t:null}getNodesToRefresh(){return this.nodesToRefresh}getSurroundingNodesByDisplayIndex(e){let t,o;return this.nodeMap.forEach(s=>{e>s.node.rowIndex?(null==o||o.node.rowIndex<s.node.rowIndex)&&(o=s):(null==t||t.node.rowIndex>s.node.rowIndex)&&(t=s)}),o||t?{previousNode:o,nextNode:t}:null}getDisplayIndexFromStoreIndex(e){var t,o;const s=this.nodeMap.getBy("index",e);if(s)return s.node.rowIndex;let r,i;if(this.nodeMap.forEach(t=>{e>t.index?(null==i||i.index<t.index)&&(i=t):(null==r||r.index>t.index)&&(r=t)}),!r)return this.store.getDisplayIndexEnd()-(this.numberOfRows-e);if(!i)return this.store.getDisplayIndexStart()+e;const n=e-i.index;return(null!==(o=null===(t=i.node.childStore)||void 0===t?void 0:t.getDisplayIndexEnd())&&void 0!==o?o:i.node.rowIndex)+n}createRowAtIndex(e,t,o){const s=this.nodeMap.getBy("index",e);if(s){const{node:o}=s;if(this.nodesToRefresh.delete(o),o.__needsRefreshWhenVisible=!1,this.doesNodeMatch(t,o))return this.blockUtils.updateDataIntoRowNode(o,t),o;if(null==this.getRowIdFunc&&o.group&&o.expanded)return o;this.destroyRowAtIndex(e)}if(t&&null!=this.getRowIdFunc){const o=this.getRowId(t),s=this.nodeMap.getBy("id",o);if(s){this.nodeMap.delete(s);const{node:o,index:r}=s;return this.blockUtils.updateDataIntoRowNode(o,t),this.nodeMap.set({id:o.id,node:o,index:e}),this.markBlockForVerify(r),o}}const r=this.blockUtils.createRowNode(this.store.getRowDetails());if(null!=t){const e=this.getPrefixedId(this.store.getIdSequence().next());this.blockUtils.setDataIntoRowNode(r,t,e,void 0),this.blockUtils.checkOpenByDefault(r),this.nodeManager.addRowNode(r)}return this.nodeMap.set({id:r.id,node:r,index:e}),o&&o(r),r}getBlockStates(){const e={},t={};this.nodeMap.forEach(({node:o,index:s})=>{var r;const i=this.rowLoader.getBlockStartIndexForIndex(s);o.stub||o.failedLoad||(e[i]=(null!==(r=e[i])&&void 0!==r?r:0)+1);let n="loaded";o.failedLoad?n="failed":this.rowLoader.isRowLoading(i)?n="loading":(this.nodesToRefresh.has(o)||o.stub)&&(n="needsLoading"),t[i]||(t[i]=new Set),t[i].add(n)});const o={loading:4,failed:3,needsLoading:2,loaded:1},s=this.blockUtils.createNodeIdPrefix(this.store.getParentNode()),r={};return Object.entries(t).forEach(([t,i])=>{var n;const d=[...i].sort((e,t)=>{var s,r;return(null!==(s=o[e])&&void 0!==s?s:0)-(null!==(r=o[t])&&void 0!==r?r:0)})[0],l=Number(t)/this.rowLoader.getBlockSize(),a=s?`${s}-${l}`:String(l);r[a]={blockNumber:l,startRow:Number(t),endRow:Number(t)+this.rowLoader.getBlockSize(),pageStatus:d,loadedRowCount:null!==(n=e[t])&&void 0!==n?n:0}}),r}destroyRowAtIndex(e){const t=this.nodeMap.getBy("index",e);t&&(this.nodeMap.delete(t),this.nodeDisplayIndexMap.delete(t.node.rowIndex),this.nodesToRefresh.delete(t.node),this.blockUtils.destroyRowNode(t.node))}getSsrmParams(){return this.store.getSsrmParams()}getPrefixedId(e){return this.defaultNodeIdPrefix?this.defaultNodeIdPrefix+"-"+e:e.toString()}markBlockForVerify(e){const[t,o]=this.rowLoader.getBlockBoundsForIndex(e);this.nodeMap.filter(e=>e.index>=t&&e.index<o).forEach(({node:e})=>{e.__needsRefreshWhenVisible=!0})}doesNodeMatch(e,t){if(t.stub)return!1;if(null!=this.getRowIdFunc){const o=this.getRowId(e);return t.id===o}return t.data===e}purgeStubsOutsideOfViewport(){const e=this.api.getFirstDisplayedRow(),t=this.api.getLastDisplayedRow(),o=this.rowLoader.getBlockStartIndexForIndex(e),[s,r]=this.rowLoader.getBlockBoundsForIndex(t);this.nodeMap.forEach(e=>{this.rowLoader.isRowLoading(e.index)||e.node.failedLoad||e.node.stub&&(e.index<o||e.index>r)&&this.destroyRowAtIndex(e.index)})}getBlocksDistanceFromRow(e,t){const o={};return e.forEach(({node:e,index:s})=>{const[r,i]=this.rowLoader.getBlockBoundsForIndex(s);if(r in o)return;const n=Math.abs(e.rowIndex-t);let d;const l=this.nodeMap.getBy("index",[i-1]);l&&(d=Math.abs(l.node.rowIndex-t));const a=null==d||n<d?n:d;o[r]=a}),Object.entries(o)}purgeExcessRows(){var e;if(this.purgeStubsOutsideOfViewport(),null==this.store.getDisplayIndexEnd()||null==this.storeParams.maxBlocksInCache)return;const t=this.api.getFirstDisplayedRow(),o=this.api.getLastDisplayedRow(),s=new Set,r=new Set;this.nodeMap.forEach(({index:e,node:i})=>{const n=this.rowLoader.getBlockStartIndexForIndex(e);s.add(n);i.rowIndex>=t&&i.rowIndex<=o&&r.add(n)});const i=Math.max(r.size,null!==(e=this.storeParams.maxBlocksInCache)&&void 0!==e?e:0),n=s.size-i;if(n<=0)return;let d=Number.MAX_SAFE_INTEGER,l=Number.MIN_SAFE_INTEGER;r.forEach(e=>{d>e&&(d=e),l<e&&(l=e)});const a=this.nodeMap.filter(({node:e,index:t})=>{const o=this.rowLoader.getBlockStartIndexForIndex(t);return!(o>=d&&o<=l)&&!this.isNodeCached(e)});if(0===a.length)return;const c=t+(o-t)/2,h=this.getBlocksDistanceFromRow(a,c),u=this.rowLoader.getBlockSize();h.sort((e,t)=>Math.sign(t[1]-e[1]));for(let e=0;e<Math.min(n,h.length);e++){const t=Number(h[e][0]);for(let e=t;e<t+u;e++){const t=this.nodeMap.getBy("index",e);t&&!this.isNodeCached(t.node)&&this.destroyRowAtIndex(e)}}}isNodeFocused(e){const t=this.focusService.getFocusCellToUseAfterRefresh();if(!t)return!1;if(null!=t.rowPinned)return!1;return t.rowIndex===e.rowIndex}isNodeCached(e){return e.isExpandable()&&e.expanded||this.isNodeFocused(e)}extractDuplicateIds(e){if(null==!this.getRowIdFunc)return[];const t=new Set,o=new Set;return e.forEach(e=>{const s=this.getRowId(e);t.has(s)?o.add(s):t.add(s)}),[...o]}onLoadSuccess(e,t,o){var s;if(!this.live)return;const r=null!==(s=o.groupLevelInfo)&&void 0!==s?s:o.storeInfo;if(this.store.setStoreInfo(r),null!=this.getRowIdFunc){const s=this.extractDuplicateIds(o.rowData);if(s.length>0){const o=s.join(", ");return console.warn(`AG Grid: Unable to display rows as duplicate row ids (${o}) were returned by the getRowId callback. Please modify the getRowId callback to provide unique ids.`),void this.onLoadFailed(e,t)}}const i=this.nodesToRefresh.size>0;o.rowData.forEach((t,o)=>{var s;const r=e+o,i=this.nodeMap.getBy("index",r);if(!(null===(s=null==i?void 0:i.node)||void 0===s?void 0:s.stub))return i&&this.doesNodeMatch(t,i.node)?(this.blockUtils.updateDataIntoRowNode(i.node,t),this.nodesToRefresh.delete(i.node),void(i.node.__needsRefreshWhenVisible=!1)):void this.createRowAtIndex(r,t);this.createRowAtIndex(r,t)});const n=0===this.nodesToRefresh.size;if(i&&n&&this.fireRefreshFinishedEvent(),null!=o.rowCount&&-1!==o.rowCount)this.numberOfRows=o.rowCount,this.isLastRowKnown=!0;else if(t>o.rowData.length)this.numberOfRows=e+o.rowData.length,this.isLastRowKnown=!0;else if(!this.isLastRowKnown){const t=e+o.rowData.length+1;t>this.numberOfRows&&(this.numberOfRows=t)}if(this.isLastRowKnown){this.nodeMap.filter(e=>e.index>=this.numberOfRows).forEach(e=>this.destroyRowAtIndex(e.index))}this.fireStoreUpdatedEvent()}fireRefreshFinishedEvent(){0===this.nodesToRefresh.size&&this.store.fireRefreshFinishedEvent()}isLastRowIndexKnown(){return this.isLastRowKnown}onLoadFailed(e,t){var o;if(!this.live)return;const s=this.nodesToRefresh.size>0;for(let s=e;s<e+t&&s<this.getRowCount();s++){let{node:e}=null!==(o=this.nodeMap.getBy("index",s))&&void 0!==o?o:{};e&&this.nodesToRefresh.delete(e),e&&e.stub||(e&&!e.stub&&this.destroyRowAtIndex(s),e=this.createRowAtIndex(s)),e.__needsRefreshWhenVisible=!1,e.failedLoad=!0}const r=0===this.nodesToRefresh.size;s&&r&&this.fireRefreshFinishedEvent(),this.fireStoreUpdatedEvent()}markNodesForRefresh(){this.nodeMap.forEach(e=>{e.node.stub&&!e.node.failedLoad||this.nodesToRefresh.add(e.node)}),this.rowLoader.queueLoadCheck(),this.isLastRowKnown&&0===this.numberOfRows&&(this.numberOfRows=1,this.isLastRowKnown=!1,this.fireStoreUpdatedEvent())}isNodeInCache(e){return!!this.nodeMap.getBy("id",e)}fireStoreUpdatedEvent(){this.live&&this.store.fireStoreUpdatedEvent()}getRowId(e){if(null==this.getRowIdFunc)return null;const{level:t}=this.store.getRowDetails(),o=this.store.getParentNode().getGroupKeys(),s=this.getRowIdFunc({data:e,parentKeys:o.length>0?o:void 0,level:t});return String(s)}updateRowNodes(e){if(null==this.getRowIdFunc)throw new Error("AG Grid: Insert transactions can only be applied when row ids are supplied.");const t=[];return e.forEach(e=>{const o=this.getRowId(e),s=this.nodeMap.getBy("id",o);s&&(this.blockUtils.updateDataIntoRowNode(s.node,e),t.push(s.node))}),t}insertRowNodes(e,t){const o=null==t&&this.isLastRowKnown?this.store.getRowCount():t;if(null==o||this.store.getRowCount()<o)return[];if(null==this.getRowIdFunc)throw new Error("AG Grid: Insert transactions can only be applied when row ids are supplied.");const s={};e.forEach(e=>{const t=this.getRowId(e);t&&this.isNodeInCache(t)||(s[t]=e)});const r=Object.values(s);let i=r.length;if(0===i)return[];const n=this.nodeMap.filter(e=>e.index>=o);return n.forEach(e=>this.nodeMap.delete(e)),n.forEach(e=>{this.nodeMap.set({node:e.node,index:e.index+i,id:e.id})}),this.numberOfRows+=i,r.map((e,t)=>this.createRowAtIndex(o+t,e))}getOrderedNodeMap(){const e={};return this.nodeMap.forEach(t=>e[t.index]=t),e}clearDisplayIndexes(){this.nodeDisplayIndexMap.clear()}removeRowNodes(e){if(null==this.getRowIdFunc)throw new Error("AG Grid: Insert transactions can only be applied when row ids are supplied.");const t=[],o=[];let s=0;const r=[...e],i=this.getOrderedNodeMap();let n=-1;for(let e in i){n+=1;const d=i[e],l=r.findIndex(e=>e===d.id);if(-1!==l){r.splice(l,1),this.destroyRowAtIndex(Number(e)),t.push(d.node),s+=1;continue}if(0===s)continue;const a=Number(e);n!==a&&o.push(d.node),this.nodeMap.delete(i[e]),this.nodeMap.set({id:d.id,node:d.node,index:a-s})}return this.numberOfRows-=this.isLastRowIndexKnown()?e.length:s,r.length>0&&o.length>0&&(o.forEach(e=>e.__needsRefreshWhenVisible=!0),this.rowLoader.queueLoadCheck()),t}}N([e("gridApi")],y.prototype,"api",void 0),N([e("ssrmBlockUtils")],y.prototype,"blockUtils",void 0),N([e("focusService")],y.prototype,"focusService",void 0),N([e("ssrmNodeManager")],y.prototype,"nodeManager",void 0),N([t],y.prototype,"init",null),N([o],y.prototype,"destroyRowNodes",null);var x=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};class m extends l{constructor(e,t,o){super(),this.idSequence=new r,this.ssrmParams=e,this.parentRowNode=o,this.storeParams=t,this.level=o.level+1,this.group=!!e.rowGroupCols&&this.level<e.rowGroupCols.length,this.leafGroup=!!e.rowGroupCols&&this.level===e.rowGroupCols.length-1,this.info={}}init(){let e=1;0===this.level&&(e=this.storeUtils.getServerSideInitialRowCount()),this.cache=this.createManagedBean(new y(this,e,this.storeParams));if(!this.gridOptionsService.isTreeData()&&this.group){const e=this.ssrmParams.rowGroupCols[this.level];this.groupField=e.field,this.rowGroupColumn=this.columnModel.getRowGroupColumns()[this.level]}}destroyRowNodes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.destroyBean(this.cache)}applyTransaction(e){var t,o,s;const r=this.gridOptionsService.getCallback("getRowId");if(!r)return console.warn("AG Grid: getRowId callback must be implemented for transactions to work. Transaction was ignored."),{status:n.Cancelled};const i=this.gridOptionsService.getCallback("isApplyServerSideTransaction");if(i){if(!i({transaction:e,parentNode:this.parentRowNode,storeInfo:this.info,groupLevelInfo:this.info}))return{status:n.Cancelled}}let d=void 0;(null===(t=e.update)||void 0===t?void 0:t.length)&&(d=this.cache.updateRowNodes(e.update));let l=void 0;if(null===(o=e.add)||void 0===o?void 0:o.length){let t=e.addIndex;null!=t&&t<0&&(t=void 0),l=this.cache.insertRowNodes(e.add,t)}let a=void 0;if(null===(s=e.remove)||void 0===s?void 0:s.length){const t=e.remove.map(e=>r({level:this.level,parentKeys:this.parentRowNode.getGroupKeys(),data:e})),o=[...new Set(t)];a=this.cache.removeRowNodes(o)}return this.updateSelectionAfterTransaction(d,a),{status:n.Applied,update:d,add:l,remove:a}}updateSelectionAfterTransaction(e,t){const o=[];null==e||e.forEach(e=>{e.isSelected()&&!e.selectable&&o.push(e)}),null==t||t.forEach(e=>{e.isSelected()&&o.push(e)}),o.length&&this.selectionService.setNodesSelected({newValue:!1,clearSelection:!1,nodes:o,source:"rowDataChanged"})}clearDisplayIndexes(){this.displayIndexStart=void 0,this.displayIndexEnd=void 0,this.cache.getNodes().forEach(e=>this.blockUtils.clearDisplayIndex(e.node)),this.parentRowNode.sibling&&this.blockUtils.clearDisplayIndex(this.parentRowNode.sibling),this.cache.clearDisplayIndexes()}getDisplayIndexStart(){return this.displayIndexStart}getDisplayIndexEnd(){return this.displayIndexEnd}getRowCount(){return this.parentRowNode.sibling?this.cache.getRowCount()+1:this.cache.getRowCount()}setRowCount(e,t){this.cache.setRowCount(e,t)}isDisplayIndexInStore(e){return 0!==this.cache.getRowCount()&&(this.displayIndexStart<=e&&e<this.getDisplayIndexEnd())}setDisplayIndexes(e,t){this.displayIndexStart=e.peek(),this.topPx=t.value,this.cache.setDisplayIndexes(e,t),this.parentRowNode.sibling&&this.blockUtils.setDisplayIndex(this.parentRowNode.sibling,e,t),this.displayIndexEnd=e.peek(),this.heightPx=t.value-this.topPx}forEachStoreDeep(e,t=new r){e(this,t.next()),this.cache.getNodes().forEach(o=>{const s=o.node.childStore;s&&s.forEachStoreDeep(e,t)})}forEachNodeDeep(e,t=new r){this.cache.getNodes().forEach(o=>{e(o.node,t.next());const s=o.node.childStore;s&&s.forEachNodeDeep(e,t)})}forEachNodeDeepAfterFilterAndSort(e,t=new r){const o=this.cache.getOrderedNodeMap();for(let s in o){const r=o[s];e(r.node,t.next());const i=r.node.childStore;i&&i.forEachNodeDeepAfterFilterAndSort(e,t)}}retryLoads(){this.cache.getNodes().forEach(({node:e})=>{e.failedLoad&&(e.failedLoad=!1,e.__needsRefreshWhenVisible=!0,e.stub=!0)}),this.forEachChildStoreShallow(e=>e.retryLoads()),this.fireStoreUpdatedEvent()}getRowUsingDisplayIndex(e){return this.parentRowNode.sibling&&e===this.parentRowNode.sibling.rowIndex?this.parentRowNode.sibling:this.cache.getRowByDisplayIndex(e)}getRowBounds(e){var t;if(!this.isDisplayIndexInStore(e))return null;const o=this.cache.getNodeCachedByDisplayIndex(e);if(o){const t=this.blockUtils.extractRowBounds(o,e);if(t)return t}const{previousNode:s,nextNode:r}=null!==(t=this.cache.getSurroundingNodesByDisplayIndex(e))&&void 0!==t?t:{};if(s){const t=this.blockUtils.extractRowBounds(s.node,e);if(null!=t)return t}const i=this.gridOptionsService.getRowHeightAsNumber();if(r){const t=(r.node.rowIndex-e)*i;return{rowTop:r.node.rowTop-t,rowHeight:i}}return{rowTop:this.topPx+this.heightPx-(this.getDisplayIndexEnd()-e)*i,rowHeight:i}}isPixelInRange(e){return e>=this.topPx&&e<this.topPx+this.heightPx}getRowIndexAtPixel(e){if(e<this.topPx)return this.getDisplayIndexStart();if(e>=this.topPx+this.heightPx)return this.getDisplayIndexEnd()-1;let t=Number.MAX_SAFE_INTEGER,o=null,s=Number.MAX_SAFE_INTEGER,r=null;if(this.cache.getNodes().forEach(({node:i})=>{const n=Math.abs(e-i.rowTop);i.rowTop<e?n<t&&(t=n,o=i):n<s&&(s=n,r=i)}),o=o,r=r,o){const t=this.blockUtils.getIndexAtPixel(o,e);if(null!=t)return t}const i=this.gridOptionsService.getRowHeightAsNumber();if(r){const t=r.rowTop,o=Math.ceil((t-e)/i);return r.rowIndex-o}const n=this.topPx+this.heightPx,d=Math.floor((n-e)/i);return this.getDisplayIndexEnd()-d}getChildStore(e){return this.storeUtils.getChildStore(e,this,e=>{const t=this.cache.getNodes().find(t=>t.node.key==e);return t?t.node:null})}forEachChildStoreShallow(e){this.cache.getNodes().forEach(({node:t})=>{t.childStore&&e(t.childStore)})}refreshAfterSort(e){if(this.storeUtils.isServerSideSortAllLevels()||this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e)){const e=this.cache.getRowCount();return this.destroyBean(this.cache),this.cache=this.createManagedBean(new y(this,e,this.storeParams)),void this.fireStoreUpdatedEvent()}this.forEachChildStoreShallow(t=>t.refreshAfterSort(e))}refreshAfterFilter(e){!this.storeUtils.isServerSideOnlyRefreshFilteredGroups()||this.storeUtils.isServerRefreshNeeded(this.parentRowNode,this.ssrmParams.rowGroupCols,e)?this.refreshStore(!0):this.forEachChildStoreShallow(t=>t.refreshAfterFilter(e))}refreshStore(e){if(e)return this.destroyBean(this.cache),this.cache=this.createManagedBean(new y(this,1,this.storeParams)),void this.fireStoreUpdatedEvent();this.cache.markNodesForRefresh()}getTopLevelRowDisplayedIndex(e){const t=this.cache.getDisplayIndexFromStoreIndex(e);return null!=t?t:e}isLastRowIndexKnown(){return this.cache.isLastRowIndexKnown()}getRowNodesInRange(e,t){return i.missing(e),this.cache.getNodes().filter(({node:o})=>o.rowIndex>=e.rowIndex&&o.rowIndex<=t.rowIndex).map(({node:e})=>e)}addStoreStates(e){e.push({suppressInfiniteScroll:!1,route:this.parentRowNode.getGroupKeys(),rowCount:this.getRowCount(),lastRowIndexKnown:this.isLastRowIndexKnown(),info:this.info,maxBlocksInCache:this.storeParams.maxBlocksInCache,cacheBlockSize:this.storeParams.cacheBlockSize}),this.forEachChildStoreShallow(t=>t.addStoreStates(e))}getIdSequence(){return this.idSequence}getParentNode(){return this.parentRowNode}getRowDetails(){return{field:this.groupField,group:this.group,leafGroup:this.leafGroup,level:this.level,parent:this.parentRowNode,rowGroupColumn:this.rowGroupColumn}}getSsrmParams(){return this.ssrmParams}setStoreInfo(e){e&&Object.assign(this.info,e)}fireStoreUpdatedEvent(){const e={type:d.EVENT_STORE_UPDATED};this.eventService.dispatchEvent(e)}fireRefreshFinishedEvent(){const e={type:d.EVENT_STORE_REFRESHED,route:this.parentRowNode.getRoute()};this.eventService.dispatchEvent(e)}getBlockStates(){return this.cache.getBlockStates()}getStoreBounds(){return{topPx:this.topPx,heightPx:this.heightPx}}}x([e("ssrmBlockUtils")],m.prototype,"blockUtils",void 0),x([e("ssrmStoreUtils")],m.prototype,"storeUtils",void 0),x([e("columnModel")],m.prototype,"columnModel",void 0),x([e("selectionService")],m.prototype,"selectionService",void 0),x([t],m.prototype,"init",null),x([o],m.prototype,"destroyRowNodes",null);var I=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let C=class extends l{constructor(){super(...arguments),this.onRowHeightChanged_debounced=i.debounce(this.onRowHeightChanged.bind(this),100),this.pauseStoreUpdateListening=!1,this.started=!1}ensureRowHeightsValid(){return!1}start(){this.started=!0;const e=this.gridOptionsService.get("serverSideDatasource");e&&this.setDatasource(e)}destroyDatasource(){this.datasource&&(this.datasource.destroy&&this.datasource.destroy(),this.rowRenderer.datasourceChanged(),this.datasource=void 0)}addEventListeners(){this.addManagedListener(this.eventService,d.EVENT_NEW_COLUMNS_LOADED,this.onColumnEverything.bind(this)),this.addManagedListener(this.eventService,d.EVENT_STORE_UPDATED,this.onStoreUpdated.bind(this));const e=this.resetRootStore.bind(this);this.addManagedListener(this.eventService,d.EVENT_COLUMN_VALUE_CHANGED,e),this.addManagedListener(this.eventService,d.EVENT_COLUMN_PIVOT_CHANGED,e),this.addManagedListener(this.eventService,d.EVENT_COLUMN_ROW_GROUP_CHANGED,e),this.addManagedListener(this.eventService,d.EVENT_COLUMN_PIVOT_MODE_CHANGED,e),this.verifyProps()}verifyProps(){if(this.gridOptionsService.exists("initialGroupOrderComparator")){const e="AG Grid: initialGroupOrderComparator cannot be used with Server Side Row Model. If using Full Store, then provide the rows to the grid in the desired sort order. If using Infinite Scroll, then sorting is done on the server side, nothing to do with the client.";i.doOnce(()=>console.warn(e),"SSRM.InitialGroupOrderComparator")}if(this.gridOptionsService.isRowSelection()&&!this.gridOptionsService.exists("getRowId")){const e="AG Grid: getRowId callback must be provided for Server Side Row Model selection to work correctly.";i.doOnce(()=>console.warn(e),"SSRM.SelectionNeedsRowNodeIdFunc")}}setDatasource(e){this.started&&(this.destroyDatasource(),this.datasource=e,this.resetRootStore())}isLastRowIndexKnown(){const e=this.getRootStore();return!!e&&e.isLastRowIndexKnown()}onColumnEverything(){if(!this.storeParams)return void this.resetRootStore();const e=this.columnsToValueObjects(this.columnModel.getRowGroupColumns()),t=this.columnsToValueObjects(this.columnModel.getValueColumns()),o=this.columnsToValueObjects(this.columnModel.getPivotColumns()),s=e=>{const t={};e.oldCols.forEach(e=>t[e.id]=e);const o=e.newCols.every(e=>{const o=t[e.id];return o&&delete t[e.id],o&&o.field===e.field&&o.aggFunc===e.aggFunc}),s=!e.allowRemovedColumns&&!!Object.values(t).length;return o&&!s},r=!i.jsonEquals(this.storeParams.sortModel,this.sortListener.extractSortModel()),n=!s({oldCols:this.storeParams.rowGroupCols,newCols:e}),d=!s({oldCols:this.storeParams.pivotCols,newCols:o}),l=!!(null==e?void 0:e.length)&&!s({oldCols:this.storeParams.valueCols,newCols:t,allowRemovedColumns:!0});if(r||n||d||l)this.resetRootStore();else{const e=this.createStoreParams();this.storeParams.rowGroupCols=e.rowGroupCols,this.storeParams.pivotCols=e.pivotCols,this.storeParams.valueCols=e.valueCols}}destroyRootStore(){this.rootNode&&this.rootNode.childStore&&(this.rootNode.childStore=this.destroyBean(this.rootNode.childStore),this.nodeManager.clear())}refreshAfterSort(e,t){this.storeParams&&(this.storeParams.sortModel=e);const o=this.getRootStore();o&&(o.refreshAfterSort(t),this.onStoreUpdated())}resetRootStore(){this.destroyRootStore(),this.rootNode=new h(this.beans),this.rootNode.group=!0,this.rootNode.level=-1,this.datasource&&(this.storeParams=this.createStoreParams(),this.rootNode.childStore=this.createBean(this.storeFactory.createStore(this.storeParams,this.rootNode)),this.updateRowIndexesAndBounds());const e={type:d.EVENT_ROW_DATA_UPDATED};this.eventService.dispatchEvent(e),this.dispatchModelUpdated(!0)}columnsToValueObjects(e){return e.map(e=>({id:e.getId(),aggFunc:e.getAggFunc(),displayName:this.columnModel.getDisplayNameForColumn(e,"model"),field:e.getColDef().field}))}createStoreParams(){const e=this.columnsToValueObjects(this.columnModel.getRowGroupColumns()),t=this.columnsToValueObjects(this.columnModel.getValueColumns()),o=this.columnsToValueObjects(this.columnModel.getPivotColumns()),s=this.gridOptionsService.isGetRowHeightFunction();return{valueCols:t,rowGroupCols:e,pivotCols:o,pivotMode:this.columnModel.isPivotMode(),filterModel:this.filterManager.getFilterModel(),sortModel:this.sortListener.extractSortModel(),datasource:this.datasource,lastAccessedSequence:new r,dynamicRowHeight:s}}getParams(){return this.storeParams}dispatchModelUpdated(e=!1){const t={type:d.EVENT_MODEL_UPDATED,animate:!e,keepRenderedRows:!e,newPage:!1,newData:!1};this.eventService.dispatchEvent(t)}onStoreUpdated(){this.pauseStoreUpdateListening||(this.updateRowIndexesAndBounds(),this.dispatchModelUpdated())}onRowHeightChangedDebounced(){this.onRowHeightChanged_debounced()}onRowHeightChanged(){this.updateRowIndexesAndBounds(),this.dispatchModelUpdated()}updateRowIndexesAndBounds(){const e=this.getRootStore();e&&e.setDisplayIndexes(new r,{value:0})}retryLoads(){const e=this.getRootStore();e&&(e.retryLoads(),this.onStoreUpdated())}getRow(e){const t=this.getRootStore();if(t)return t.getRowUsingDisplayIndex(e)}expandAll(e){this.pauseStoreUpdateListening=!0,this.forEachNode(t=>{t.stub||t.hasChildren()&&t.setExpanded(e)}),this.pauseStoreUpdateListening=!1,this.onStoreUpdated()}refreshAfterFilter(e,t){this.storeParams&&(this.storeParams.filterModel=e);const o=this.getRootStore();o&&(o.refreshAfterFilter(t),this.onStoreUpdated())}getRootStore(){if(this.rootNode&&this.rootNode.childStore)return this.rootNode.childStore}getRowCount(){const e=this.getRootStore();return e?e.getDisplayIndexEnd():0}getTopLevelRowCount(){const e=this.getRootStore();return e?e.getRowCount():1}getTopLevelRowDisplayedIndex(e){const t=this.getRootStore();return t?t.getTopLevelRowDisplayedIndex(e):e}getRowBounds(e){const t=this.getRootStore();if(!t){return{rowTop:0,rowHeight:this.gridOptionsService.getRowHeightAsNumber()}}return t.getRowBounds(e)}getBlockStates(){const e=this.getRootStore();if(!e)return;const t={};return e.forEachStoreDeep(e=>{if(e instanceof S){const{id:o,state:s}=e.getBlockStateJson();t[o]=s}else{if(!(e instanceof m))throw new Error("AG Grid: Unsupported store type");Object.entries(e.getBlockStates()).forEach(([e,o])=>{t[e]=o})}}),t}getRowIndexAtPixel(e){const t=this.getRootStore();return e<=0||!t?0:t.getRowIndexAtPixel(e)}isEmpty(){return!1}isRowsToRender(){return null!=this.getRootStore()&&this.getRowCount()>0}getType(){return"serverSide"}forEachNode(e){const t=this.getRootStore();t&&t.forEachNodeDeep(e)}forEachNodeAfterFilterAndSort(e){const t=this.getRootStore();t&&t.forEachNodeDeepAfterFilterAndSort(e)}executeOnStore(e,t){const o=this.getRootStore();if(!o)return;const s=o.getChildStore(e);s&&t(s)}refreshStore(e={}){const t=e.route?e.route:[];this.executeOnStore(t,t=>t.refreshStore(1==e.purge))}getStoreState(){const e=[],t=this.getRootStore();return t&&t.addStoreStates(e),e}getNodesInRangeForSelection(e,t){if(!i.exists(e))return[];if(!t)return[e];const o=e.rowIndex,s=t.rowIndex;if(null===o||null===s)return[e];const r=[],[n,d]=[o,s].sort((e,t)=>e-t);this.forEachNode(e=>{const t=e.rowIndex;null==t||e.stub||t>=n&&t<=d&&r.push(e)});return r.every((e,t,o)=>0===t?e.rowIndex===n:o[t-1].rowIndex===e.rowIndex-1)&&r.length===d-n+1?r:[e]}getRowNode(e){let t;return this.forEachNode(o=>{o.id===e&&(t=o),o.detailNode&&o.detailNode.id===e&&(t=o.detailNode)}),t}isRowPresent(e){return!!this.getRowNode(e.id)}setRowCount(e,t){const o=this.getRootStore();if(o){if(o instanceof m)return void o.setRowCount(e,t);console.error("AG Grid: Infinite scrolling must be enabled in order to set the row count.")}}};I([e("columnModel")],C.prototype,"columnModel",void 0),I([e("filterManager")],C.prototype,"filterManager",void 0),I([e("rowRenderer")],C.prototype,"rowRenderer",void 0),I([e("ssrmSortService")],C.prototype,"sortListener",void 0),I([e("ssrmNodeManager")],C.prototype,"nodeManager",void 0),I([e("ssrmStoreFactory")],C.prototype,"storeFactory",void 0),I([e("beans")],C.prototype,"beans",void 0),I([o],C.prototype,"destroyDatasource",null),I([t],C.prototype,"addEventListeners",null),I([o],C.prototype,"destroyRootStore",null),C=I([c("rowModel")],C);var E=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let A=class extends l{loadFromDatasource(e){const{storeParams:t,parentBlock:o,parentNode:s}=e,r=s.getGroupKeys();if(!t.datasource)return;const i={startRow:e.startRow,endRow:e.endRow,rowGroupCols:t.rowGroupCols,valueCols:t.valueCols,pivotCols:t.pivotCols,pivotMode:t.pivotMode,groupKeys:r,filterModel:t.filterModel,sortModel:t.sortModel},n={successCallback:e.successCallback,success:e.success,failCallback:e.failCallback,fail:e.fail,request:i,parentNode:e.parentNode,api:this.gridApi,columnApi:this.columnApi,context:this.gridOptionsService.context};window.setTimeout(()=>{t.datasource&&o.isAlive()?t.datasource.getRows(n):e.failCallback()},0)}getChildStore(e,t,o){if(i.missingOrEmpty(e))return t;const s=o(e[0]);if(s){const t=e.slice(1,e.length),o=s.childStore;return o?o.getChildStore(t):null}return null}isServerRefreshNeeded(e,t,o){if(o.valueColChanged||o.secondaryColChanged)return!0;const s=e.level+1;if(!(s<t.length))return!0;const r=t[s].id;if(o.changedColumns.indexOf(r)>-1)return!0;return this.columnModel.getAllGridColumns().filter(e=>e.getColDef().showRowGroup&&o.changedColumns.includes(e.getId())).map(e=>e.getColDef().showRowGroup).some(e=>!0===e||e===r)}getServerSideInitialRowCount(){const e=this.gridOptionsService.getNum("serverSideInitialRowCount");return"number"==typeof e&&e>0?e:1}assertRowModelIsServerSide(e){return!!this.gridOptionsService.isRowModelType("serverSide")||(i.doOnce(()=>console.warn(`AG Grid: The '${e}' property can only be used with the Server Side Row Model.`),e),!1)}assertNotTreeData(e){return!this.gridOptionsService.is("treeData")||(i.doOnce(()=>console.warn(`AG Grid: The '${e}' property cannot be used while using tree data.`),e+"_TreeData"),!1)}isServerSideSortAllLevels(){return this.gridOptionsService.is("serverSideSortAllLevels")&&this.assertRowModelIsServerSide("serverSideSortAllLevels")}isServerSideOnlyRefreshFilteredGroups(){return this.gridOptionsService.is("serverSideOnlyRefreshFilteredGroups")&&this.assertRowModelIsServerSide("serverSideOnlyRefreshFilteredGroups")}isServerSideSortOnServer(){return this.gridOptionsService.is("serverSideSortOnServer")&&this.assertRowModelIsServerSide("serverSideSortOnServer")&&this.assertNotTreeData("serverSideSortOnServer")}isServerSideFilterOnServer(){return this.gridOptionsService.is("serverSideFilterOnServer")&&this.assertRowModelIsServerSide("serverSideFilterOnServer")&&this.assertNotTreeData("serverSideFilterOnServer")}};E([e("columnApi")],A.prototype,"columnApi",void 0),E([e("columnModel")],A.prototype,"columnModel",void 0),E([e("gridApi")],A.prototype,"gridApi",void 0),A=E([c("ssrmStoreUtils")],A);var b=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let M=class extends l{postConstruct(){this.rowHeight=this.gridOptionsService.getRowHeightAsNumber(),this.usingTreeData=this.gridOptionsService.isTreeData(),this.usingMasterDetail=this.gridOptionsService.isMasterDetail()}createRowNode(e){const t=new h(this.beans),o=null!=e.rowHeight?e.rowHeight:this.rowHeight;return t.setRowHeight(o),t.group=e.group,t.leafGroup=e.leafGroup,t.level=e.level,t.uiLevel=e.level,t.parent=e.parent,t.stub=!0,t.__needsRefreshWhenVisible=!1,t.group&&(t.expanded=!1,t.field=e.field,t.rowGroupColumn=e.rowGroupColumn),t}destroyRowNodes(e){e&&e.forEach(e=>this.destroyRowNode(e))}destroyRowNode(e,t=!1){e.childStore&&!t&&(this.destroyBean(e.childStore),e.childStore=null),e.sibling&&this.destroyRowNode(e.sibling,!1),e.clearRowTopAndRowIndex(),null!=e.id&&this.nodeManager.removeNode(e)}setTreeGroupInfo(e){e.updateHasChildren();const t=this.gridOptionsService.get("getServerSideGroupKey");e.hasChildren()&&null!=t&&(e.key=t(e.data)),e.hasChildren()||null==e.childStore||(this.destroyBean(e.childStore),e.childStore=null,e.expanded=!1)}setRowGroupInfo(e){e.key=this.valueService.getValue(e.rowGroupColumn,e),null!==e.key&&void 0!==e.key||i.doOnce(()=>{console.warn("AG Grid: null and undefined values are not allowed for server side row model keys"),e.rowGroupColumn&&console.warn("column = "+e.rowGroupColumn.getId()),console.warn("data is ",e.data)},"ServerSideBlock-CannotHaveNullOrUndefinedForKey"),this.beans.gridOptionsService.is("groupIncludeFooter")&&(e.createFooter(),e.sibling&&(e.sibling.uiLevel=e.uiLevel+1))}setMasterDetailInfo(e){const t=this.gridOptionsService.get("isRowMaster");e.master=null==t||t(e.data)}updateDataIntoRowNode(e,t){e.updateData(t),this.usingTreeData?(this.setTreeGroupInfo(e),this.setChildCountIntoRowNode(e)):e.group?this.setChildCountIntoRowNode(e):this.usingMasterDetail}setDataIntoRowNode(e,t,o,s){var r;e.stub=!1,i.exists(t)?(e.setDataAndId(t,o),this.usingTreeData?this.setTreeGroupInfo(e):e.group?this.setRowGroupInfo(e):this.usingMasterDetail&&this.setMasterDetailInfo(e)):(e.setDataAndId(void 0,void 0),e.key=null),(this.usingTreeData||e.group)&&(this.setGroupDataIntoRowNode(e),this.setChildCountIntoRowNode(e)),i.exists(t)&&(e.setRowHeight(this.gridOptionsService.getRowHeightForNode(e,!1,s).height),null===(r=e.sibling)||void 0===r||r.setRowHeight(this.gridOptionsService.getRowHeightForNode(e.sibling,!1,s).height))}setChildCountIntoRowNode(e){const t=this.gridOptionsService.get("getChildCount");t&&e.setAllChildrenCount(t(e.data))}setGroupDataIntoRowNode(e){const t=this.columnModel.getGroupDisplayColumns(),o=this.gridOptionsService.isTreeData();t.forEach(t=>{if(null==e.groupData&&(e.groupData={}),o)e.groupData[t.getColId()]=e.key;else if(t.isRowGroupDisplayed(e.rowGroupColumn.getId())){const o=this.valueService.getValue(e.rowGroupColumn,e);e.groupData[t.getColId()]=o}})}clearDisplayIndex(e){e.clearRowTopAndRowIndex();if(e.hasChildren()&&i.exists(e.childStore)){e.childStore.clearDisplayIndexes()}e.master&&e.detailNode&&e.detailNode.clearRowTopAndRowIndex()}setDisplayIndex(e,t,o){e.setRowIndex(t.next()),e.setRowTop(o.value),o.value+=e.rowHeight;e.master&&(e.expanded&&e.detailNode?(e.detailNode.setRowIndex(t.next()),e.detailNode.setRowTop(o.value),o.value+=e.detailNode.rowHeight):e.detailNode&&e.detailNode.clearRowTopAndRowIndex());if(e.hasChildren()&&i.exists(e.childStore)){const s=e.childStore;e.expanded?s.setDisplayIndexes(t,o):s.clearDisplayIndexes()}}binarySearchForDisplayIndex(e,t){let o=0,s=t.length-1;if(i.missing(s)||i.missing(o))console.warn(`AG Grid: error: topPointer = ${s}, bottomPointer = ${o}`);else for(;;){const r=Math.floor((o+s)/2),i=t[r];if(i.rowIndex===e)return i;const n=i.master&&i.expanded,d=i.detailNode;if(n&&d&&d.rowIndex===e)return i.detailNode;const l=i.childStore;if(i.expanded&&l&&l.isDisplayIndexInStore(e))return l.getRowUsingDisplayIndex(e);if(i.rowIndex<e)o=r+1;else{if(!(i.rowIndex>e))return void console.warn(`AG Grid: error: unable to locate rowIndex = ${e} in cache`);s=r-1}}}extractRowBounds(e,t){const o=e=>({rowHeight:e.rowHeight,rowTop:e.rowTop});if(e.rowIndex===t)return o(e);if(e.hasChildren()&&e.expanded&&i.exists(e.childStore)){const o=e.childStore;if(o.isDisplayIndexInStore(t))return o.getRowBounds(t)}else if(e.master&&e.expanded&&i.exists(e.detailNode)&&e.detailNode.rowIndex===t)return o(e.detailNode)}getIndexAtPixel(e,t){if(e.isPixelInRange(t))return e.rowIndex;const o=e.master&&e.expanded,s=e.detailNode;if(o&&s&&s.isPixelInRange(t))return e.detailNode.rowIndex;if(e.hasChildren()&&e.expanded&&i.exists(e.childStore)){const o=e.childStore;if(o.isPixelInRange(t))return o.getRowIndexAtPixel(t)}return null}createNodeIdPrefix(e){const t=[];let o=e;for(;o&&o.level>=0;)""===o.key?t.push("ag-Grid-MissingKey"):t.push(o.key),o=o.parent;if(t.length>0)return t.reverse().join("-")}checkOpenByDefault(e){if(!e.isExpandable())return;const t=this.gridOptionsService.getCallback("isServerSideGroupOpenByDefault");if(!t)return;t({data:e.data,rowNode:e})&&window.setTimeout(()=>e.setExpanded(!0),0)}};b([e("valueService")],M.prototype,"valueService",void 0),b([e("columnModel")],M.prototype,"columnModel",void 0),b([e("ssrmNodeManager")],M.prototype,"nodeManager",void 0),b([e("beans")],M.prototype,"beans",void 0),b([t],M.prototype,"postConstruct",null),M=b([c("ssrmBlockUtils")],M);var D=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let O=class{constructor(){this.rowNodes={}}addRowNode(e){const t=e.id;this.rowNodes[t]&&(console.warn(`AG Grid: Duplicate node id ${e.id}. Row ID's are provided via the getRowId() callback. Please modify the getRowId() callback code to provide unique row id values.`),console.warn("first instance",this.rowNodes[t].data),console.warn("second instance",e.data)),this.rowNodes[t]=e}removeNode(e){const t=e.id;this.rowNodes[t]&&(this.rowNodes[t]=void 0)}clear(){this.rowNodes={}}};D([o],O.prototype,"clear",null),O=D([c("ssrmNodeManager")],O);var T=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let G=class extends l{constructor(){super(...arguments),this.asyncTransactions=[]}postConstruct(){this.gridOptionsService.isRowModelType("serverSide")}applyTransactionAsync(e,t){null==this.asyncTransactionsTimeout&&this.scheduleExecuteAsync(),this.asyncTransactions.push({transaction:e,callback:t})}scheduleExecuteAsync(){const e=this.gridOptionsService.getAsyncTransactionWaitMillis();this.asyncTransactionsTimeout=window.setTimeout(()=>{this.executeAsyncTransactions()},e)}executeAsyncTransactions(){if(!this.asyncTransactions)return;const e=[],t=[],o=[];let s=!1;if(this.asyncTransactions.forEach(r=>{let i;this.serverSideRowModel.executeOnStore(r.transaction.route,e=>{i=e.applyTransaction(r.transaction)}),null==i&&(i={status:n.StoreNotFound}),t.push(i);i.status==n.StoreLoading?o.push(r):(r.callback&&e.push(()=>r.callback(i)),i.status===n.Applied&&(s=!0))}),e.length>0&&window.setTimeout(()=>{e.forEach(e=>e())},0),this.asyncTransactionsTimeout=void 0,this.asyncTransactions=o,s&&(this.valueCache.onDataChanged(),this.eventService.dispatchEvent({type:d.EVENT_STORE_UPDATED})),t.length>0){const e={type:d.EVENT_ASYNC_TRANSACTIONS_FLUSHED,results:t};this.eventService.dispatchEvent(e)}}flushAsyncTransactions(){null!=this.asyncTransactionsTimeout&&clearTimeout(this.asyncTransactionsTimeout),this.executeAsyncTransactions()}applyTransaction(e){let t;if(this.serverSideRowModel.executeOnStore(e.route,o=>{t=o.applyTransaction(e)}),t){if(this.valueCache.onDataChanged(),t.remove){const o=t.remove.map(e=>e.id);this.selectionService.deleteSelectionStateFromParent(e.route||[],o)}return this.eventService.dispatchEvent({type:d.EVENT_STORE_UPDATED}),t}return{status:n.StoreNotFound}}};T([e("rowNodeBlockLoader")],G.prototype,"rowNodeBlockLoader",void 0),T([e("valueCache")],G.prototype,"valueCache",void 0),T([e("rowModel")],G.prototype,"serverSideRowModel",void 0),T([e("rowRenderer")],G.prototype,"rowRenderer",void 0),T([e("selectionService")],G.prototype,"selectionService",void 0),T([t],G.prototype,"postConstruct",null),G=T([c("ssrmTransactionManager")],G);var L=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let P=class extends l{postConstruct(){this.gridOptionsService.isRowModelType("serverSide")&&this.addManagedListener(this.eventService,d.EVENT_ROW_GROUP_OPENED,this.onRowGroupOpened.bind(this))}onRowGroupOpened(e){const t=e.node;if(t.expanded){if(t.master)this.createDetailNode(t);else if(i.missing(t.childStore)){const e=this.serverSideRowModel.getParams();t.childStore=this.createBean(this.storeFactory.createStore(e,t))}}else this.gridOptionsService.is("purgeClosedRowNodes")&&i.exists(t.childStore)&&(t.childStore=this.destroyBean(t.childStore));const o={type:d.EVENT_STORE_UPDATED};this.eventService.dispatchEvent(o)}createDetailNode(e){if(i.exists(e.detailNode))return e.detailNode;const t=new h(this.beans);t.detail=!0,t.selectable=!1,t.parent=e,i.exists(e.id)&&(t.id="detail_"+e.id),t.data=e.data,t.level=e.level+1;const o=this.gridOptionsService.getRowHeightForNode(t).height;return t.rowHeight=o||200,e.detailNode=t,t}};L([e("rowModel")],P.prototype,"serverSideRowModel",void 0),L([e("ssrmStoreFactory")],P.prototype,"storeFactory",void 0),L([e("beans")],P.prototype,"beans",void 0),L([t],P.prototype,"postConstruct",null),P=L([c("ssrmExpandListener")],P);var k=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let B=class extends l{postConstruct(){this.gridOptionsService.isRowModelType("serverSide")&&this.addManagedListener(this.eventService,d.EVENT_SORT_CHANGED,this.onSortChanged.bind(this))}extractSortModel(){const e=this.sortController.getSortModel();return this.gridOptionsService.isTreeData()||(this.replaceAutoGroupColumnWithActualRowGroupColumns(e),this.removeMultiColumnPrefixOnColumnIds(e)),e}removeMultiColumnPrefixOnColumnIds(e){if(this.gridOptionsService.isGroupMultiAutoColumn()){const t=u+"-";for(let o=0;o<e.length;++o)e[o].colId.indexOf(t)>-1&&(e[o].colId=e[o].colId.substr(t.length))}}replaceAutoGroupColumnWithActualRowGroupColumns(e){const t=e.find(e=>e.colId==u);if(t){const o=e.indexOf(t);i.removeFromArray(e,t);const s=t=>0==e.filter(e=>e.colId===t.getColId()).length,r=e=>({colId:e.getId(),sort:t.sort}),n=this.columnModel.getRowGroupColumns().filter(s).map(r);i.insertArrayIntoArray(e,n,o)}}onSortChanged(){const e=this.serverSideRowModel.getParams();if(!e)return;const t=this.extractSortModel(),o=e.sortModel,s=this.findChangedColumnsInSort(t,o),r={valueColChanged:this.listenerUtils.isSortingWithValueColumn(s),secondaryColChanged:this.listenerUtils.isSortingWithSecondaryColumn(s),changedColumns:s};this.serverSideRowModel.refreshAfterSort(t,r)}findChangedColumnsInSort(e,t){let o=[];[e,t].forEach(e=>{if(e){const t=e.map(e=>e.colId);o=o.concat(t)}});return o.filter(o=>{const s=t.find(e=>e.colId===o),r=e.find(e=>e.colId===o);return((e,t)=>(e?e.sort:null)!==(t?t.sort:null))(s,r)||((o,s)=>(o?t.indexOf(o):-1)!==(s?e.indexOf(s):-1))(s,r)})}};k([e("sortController")],B.prototype,"sortController",void 0),k([e("columnModel")],B.prototype,"columnModel",void 0),k([e("rowModel")],B.prototype,"serverSideRowModel",void 0),k([e("ssrmListenerUtils")],B.prototype,"listenerUtils",void 0),k([t],B.prototype,"postConstruct",null),B=k([c("ssrmSortService")],B);var F=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let U=class extends l{postConstruct(){this.gridOptionsService.isRowModelType("serverSide")&&this.addManagedListener(this.eventService,d.EVENT_FILTER_CHANGED,this.onFilterChanged.bind(this))}onFilterChanged(){const e=this.serverSideRowModel.getParams();if(!e)return;const t=this.filterManager.getFilterModel(),o=e?e.filterModel:{},s=this.findChangedColumns(t,o),r={valueColChanged:this.listenerUtils.isSortingWithValueColumn(s),secondaryColChanged:this.listenerUtils.isSortingWithSecondaryColumn(s),changedColumns:s};this.serverSideRowModel.refreshAfterFilter(t,r)}findChangedColumns(e,t){const o={};Object.keys(e).forEach(e=>o[e]=!0),Object.keys(t).forEach(e=>o[e]=!0);const s=[];return Object.keys(o).forEach(o=>{JSON.stringify(e[o])!=JSON.stringify(t[o])&&s.push(o)}),s}};F([e("rowModel")],U.prototype,"serverSideRowModel",void 0),F([e("filterManager")],U.prototype,"filterManager",void 0),F([e("ssrmListenerUtils")],U.prototype,"listenerUtils",void 0),F([t],U.prototype,"postConstruct",null),U=F([c("ssrmFilterListener")],U);var _=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let j=class{createStore(e,t){const o=this.getStoreParams(e,t);return new(o.suppressInfiniteScroll?S:m)(e,o,t)}getStoreParams(e,t){const o=this.getLevelSpecificParams(t),s=this.isInfiniteScroll(o);return{suppressInfiniteScroll:!s,cacheBlockSize:this.getBlockSize(s,o),maxBlocksInCache:this.getMaxBlocksInCache(s,e,o)}}getMaxBlocksInCache(e,t,o){if(!e)return;const s=o&&null!=o.maxBlocksInCache?o.maxBlocksInCache:this.gridOptionsService.getNum("maxBlocksInCache");if(null!=s&&s>=0)if(t.dynamicRowHeight){const e="AG Grid: Server Side Row Model does not support Dynamic Row Height and Cache Purging. Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled.";i.doOnce(()=>console.warn(e),"storeFactory.maxBlocksInCache.dynamicRowHeight")}else{if(!this.columnModel.isAutoRowHeightActive())return s;{const e="AG Grid: Server Side Row Model does not support Auto Row Height and Cache Purging. Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled.";i.doOnce(()=>console.warn(e),"storeFactory.maxBlocksInCache.autoRowHeightActive")}}}getBlockSize(e,t){if(!e)return;const o=t&&null!=t.cacheBlockSize?t.cacheBlockSize:this.gridOptionsService.getNum("cacheBlockSize");return null!=o&&o>0?o:100}getLevelSpecificParams(e){const t=this.gridOptionsService.getCallback("getServerSideGroupLevelParams");if(!t)return;const o=t({level:e.level+1,parentRowNode:e.level>=0?e:void 0,rowGroupColumns:this.columnModel.getRowGroupColumns(),pivotColumns:this.columnModel.getPivotColumns(),pivotMode:this.columnModel.isPivotMode()});return null!=o.storeType&&(o.suppressInfiniteScroll="partial"!==o.storeType),o}isInfiniteScroll(e){return!(e&&null!=e.suppressInfiniteScroll?e.suppressInfiniteScroll:this.isSuppressServerSideInfiniteScroll())}isSuppressServerSideInfiniteScroll(){return this.gridOptionsService.is("suppressServerSideInfiniteScroll")}};_([e("gridOptionsService")],j.prototype,"gridOptionsService",void 0),_([e("columnModel")],j.prototype,"columnModel",void 0),j=_([c("ssrmStoreFactory")],j);var V=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let H=class{isSortingWithValueColumn(e){const t=this.columnModel.getValueColumns().map(e=>e.getColId());for(let o=0;o<e.length;o++)if(t.indexOf(e[o])>-1)return!0;return!1}isSortingWithSecondaryColumn(e){if(!this.columnModel.getSecondaryColumns())return!1;const t=this.columnModel.getSecondaryColumns().map(e=>e.getColId());for(let o=0;o<e.length;o++)if(t.indexOf(e[o])>-1)return!0;return!1}};V([e("columnModel")],H.prototype,"columnModel",void 0),H=V([c("ssrmListenerUtils")],H);var K=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};class z extends l{constructor(){super(...arguments),this.selectedState={selectAll:!1,toggledNodes:new Set},this.lastSelected=null,this.selectAllUsed=!1,this.selectedNodes={}}init(){this.rowSelection=this.gridOptionsService.get("rowSelection"),this.addManagedPropertyListener("rowSelection",e=>{this.rowSelection=e.currentValue})}getSelectedState(){return{selectAll:this.selectedState.selectAll,toggledNodes:[...this.selectedState.toggledNodes]}}setSelectedState(e){const t={selectAll:!1,toggledNodes:new Set};"object"==typeof e?"selectAll"in e&&"boolean"==typeof e.selectAll?(t.selectAll=e.selectAll,"toggledNodes"in e&&Array.isArray(e.toggledNodes)?(e.toggledNodes.forEach(e=>{"string"==typeof e?t.toggledNodes.add(e):console.warn("AG Grid: Provided ids must be of string type. Invalid id provided: "+e)}),this.selectedState=t):console.error("AG Grid: `toggledNodes` must be an array of string ids.")):console.error("AG Grid: Select all status should be of boolean type."):console.error("AG Grid: The provided selection state should be an object.")}deleteSelectionStateFromParent(e,t){if(0===this.selectedState.toggledNodes.size)return!1;let o=!1;return t.forEach(e=>{this.selectedState.toggledNodes.delete(e)&&(o=!0)}),o}setNodesSelected(e){if(0===e.nodes.length)return 0;const t=e.clearSelection&&e.newValue&&!e.rangeSelect;if("multiple"!==this.rowSelection||t){if(e.nodes.length>1)throw new Error("AG Grid: cannot select multiple rows when rowSelection is set to 'single'");const t=e.nodes[0];return e.newValue?(this.selectedNodes={[t.id]:t},this.selectedState={selectAll:!1,toggledNodes:new Set([t.id])}):(this.selectedNodes={},this.selectedState={selectAll:!1,toggledNodes:new Set}),this.lastSelected=t.id,1}const o=t=>{e.newValue?this.selectedNodes[t.id]=t:delete this.selectedNodes[t.id];e.newValue===this.selectedState.selectAll?this.selectedState.toggledNodes.delete(t.id):this.selectedState.toggledNodes.add(t.id)};if(e.rangeSelect&&this.lastSelected){if(e.nodes.length>1)throw new Error("AG Grid: cannot select multiple rows when using rangeSelect");const t=e.nodes[0],s=this.rowModel.getRowNode(this.lastSelected);return this.rowModel.getNodesInRangeForSelection(t,null!=s?s:null).forEach(o),this.lastSelected=t.id,1}return e.nodes.forEach(o),this.lastSelected=e.nodes[e.nodes.length-1].id,1}processNewRow(e){this.selectedNodes[e.id]&&(this.selectedNodes[e.id]=e)}isNodeSelected(e){const t=this.selectedState.toggledNodes.has(e.id);return this.selectedState.selectAll?!t:t}getSelectedNodes(){return this.selectAllUsed&&console.warn("AG Grid: getSelectedNodes and getSelectedRows functions cannot be used with select all functionality with the server-side row model.\n                Use `api.getServerSideSelectionState()` instead."),Object.values(this.selectedNodes)}getSelectedRows(){return this.getSelectedNodes().map(e=>e.data)}getSelectionCount(){return this.selectedState.selectAll?-1:this.selectedState.toggledNodes.size}clearOtherNodes(e,t){const o=this.selectedState.selectAll?1:this.selectedState.toggledNodes.size-1;this.selectedState={selectAll:!1,toggledNodes:new Set([e.id])},this.rowModel.forEachNode(o=>{o!==e&&o.selectThisNode(!1,void 0,t)});const s={type:d.EVENT_SELECTION_CHANGED,source:t};return this.eventService.dispatchEvent(s),o}isEmpty(){var e;return!this.selectedState.selectAll&&!(null===(e=this.selectedState.toggledNodes)||void 0===e?void 0:e.size)}selectAllRowNodes(e){this.selectedState={selectAll:!0,toggledNodes:new Set},this.selectedNodes={},this.selectAllUsed=!0}deselectAllRowNodes(e){this.selectedState={selectAll:!1,toggledNodes:new Set},this.selectedNodes={}}getSelectAllState(e,t){return this.selectedState.selectAll?!(this.selectedState.toggledNodes.size>0)||null:this.selectedState.toggledNodes.size>0&&null}}K([e("rowModel")],z.prototype,"rowModel",void 0),K([t],z.prototype,"init",null);var W=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n},q=function(e,t){var o={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(o[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(o[s[r]]=e[s[r]])}return o};class $ extends l{constructor(){super(...arguments),this.selectedState={selectAllChildren:!1,toggledNodes:new Map},this.lastSelected=null}init(){this.addManagedListener(this.eventService,d.EVENT_MODEL_UPDATED,()=>this.removeRedundantState()),this.addManagedListener(this.eventService,d.EVENT_COLUMN_ROW_GROUP_CHANGED,()=>this.selectionService.reset())}getSelectedState(){const e=(t,o,s)=>{const r={nodeId:s};if(o<=this.columnModel.getRowGroupColumns().length&&(r.selectAllChildren=t.selectAllChildren),t.toggledNodes.size){const s=[];t.toggledNodes.forEach((t,r)=>{const i=e(t,o+1,r);s.push(i)}),r.toggledNodes=s}return r};return e(this.selectedState,0)}setSelectedState(e){const t=(e,o)=>{var s,r;if("object"!=typeof e)throw new Error("AG Grid: Each provided state object must be an object.");if("selectAllChildren"in e&&"boolean"!=typeof e.selectAllChildren)throw new Error("AG Grid: `selectAllChildren` must be a boolean value or undefined.");if("toggledNodes"in e){if(!Array.isArray(e.toggledNodes))throw new Error("AG Grid: `toggledNodes` must be an array.");if(!e.toggledNodes.every(e=>"object"==typeof e&&"nodeId"in e&&"string"==typeof e.nodeId))throw new Error("AG Grid: Every `toggledNode` requires an associated string id.")}const i=null!==(s=e.selectAllChildren)&&void 0!==s?s:!o,n=null===(r=e.toggledNodes)||void 0===r?void 0:r.map(e=>[e.nodeId,t(e,i)]);if(null==n?void 0:n.some(([e,t])=>i===t.selectAllChildren&&0===t.toggledNodes.size))throw new Error("\n                    AG Grid: AG Grid: Row selection state could not be parsed due to invalid data. Ensure all child state has toggledNodes or does not conform with the parent rule.\n                    Please rebuild the selection state and reapply it.\n                ");return{selectAllChildren:i,toggledNodes:new Map(n)}};try{this.selectedState=t(e,!!e.selectAllChildren)}catch(e){console.error(e.message)}}deleteSelectionStateFromParent(e,t){let o=this.selectedState;const s=[...e];for(;o&&s.length;)o=o.toggledNodes.get(s.pop());if(!o)return!1;let r=!1;return t.forEach(e=>{(null==o?void 0:o.toggledNodes.delete(e))&&(r=!0)}),r&&this.removeRedundantState(),r}setNodesSelected(e){const{nodes:t}=e,o=q(e,["nodes"]);if(0===t.length)return 0;if(e.rangeSelect){if(t.length>1)throw new Error("AG Grid: cannot select multiple rows when using rangeSelect");const e=t[0],s=this.rowModel.getNodesInRangeForSelection(e,this.lastSelected).map(this.getRouteToNode).sort((e,t)=>t.length-e.length),r=new Set;return s.forEach(t=>{r.has(t[t.length-1])||(t.forEach(e=>r.add(e)),this.recursivelySelectNode(t,this.selectedState,Object.assign({node:e},o)))}),this.removeRedundantState(),this.lastSelected=e,1}return e.nodes.forEach(e=>{const t=this.getRouteToNode(e);this.recursivelySelectNode(t,this.selectedState,Object.assign(Object.assign({},o),{node:e}))}),this.removeRedundantState(),this.lastSelected=e.nodes[e.nodes.length-1],1}isNodeSelected(e){const t=this.getRouteToNode(e);return this.isNodePathSelected(t,this.selectedState)}isNodePathSelected([e,...t],o){if(0===t.length){const t=o.toggledNodes.has(e.id);if(e.hasChildren()){const t=o.toggledNodes.get(e.id);if(t&&t.toggledNodes.size)return}return o.selectAllChildren?!t:t}if(o.toggledNodes.has(e.id)){const s=o.toggledNodes.get(e.id);if(s)return this.isNodePathSelected(t,s)}return!!o.selectAllChildren}getRouteToNode(e){const t=[];let o=e;for(;o.parent;)t.push(o),o=o.parent;return t.reverse()}removeRedundantState(){if(this.filterManager.isAnyFilterPresent())return;const e=(t=this.selectedState,o=this.serverSideRowModel.getRootStore(),s)=>{let r=!0,i=!0;return t.toggledNodes.forEach((o,s)=>{const n=this.rowModel.getRowNode(s);n||(r=!1);const d=null==n?void 0:n.childStore;d?(e(o,d,n)&&t.selectAllChildren===o.selectAllChildren&&t.toggledNodes.delete(s),o.toggledNodes.size>0&&(i=!1)):o.toggledNodes.size>0&&(i=!1)}),!(!o||!o.isLastRowIndexKnown()||o.getRowCount()!==t.toggledNodes.size)&&(!(!i||!r)&&(t.toggledNodes.clear(),t.selectAllChildren=!t.selectAllChildren,s&&(null==s?void 0:s.isSelected())!==t.selectAllChildren&&s.selectThisNode(t.selectAllChildren,void 0,"api"),!0))};e()}recursivelySelectNode([e,...t],o,s){if(!e)return;if(!t.length){if(o.selectAllChildren===s.newValue)return void o.toggledNodes.delete(e.id);const t={selectAllChildren:s.newValue,toggledNodes:new Map};return void o.toggledNodes.set(e.id,t)}const r=o.toggledNodes.has(e.id),i=r?o.toggledNodes.get(e.id):{selectAllChildren:o.selectAllChildren,toggledNodes:new Map};r||o.toggledNodes.set(e.id,i),this.recursivelySelectNode(t,i,s),o.selectAllChildren===i.selectAllChildren&&0===i.toggledNodes.size&&o.toggledNodes.delete(e.id)}getSelectedNodes(){console.warn("AG Grid: `getSelectedNodes` and `getSelectedRows` functions cannot be used with `groupSelectsChildren` and the server-side row model.\n            Use `api.getServerSideSelectionState()` instead.");const e=[];return this.rowModel.forEachNode(t=>{t.isSelected()&&e.push(t)}),e}processNewRow(e){}getSelectedRows(){return this.getSelectedNodes().map(e=>e.data)}getSelectionCount(){return-1}isEmpty(){var e;return!this.selectedState.selectAllChildren&&!(null===(e=this.selectedState.toggledNodes)||void 0===e?void 0:e.size)}selectAllRowNodes(e){this.selectedState={selectAllChildren:!0,toggledNodes:new Map}}deselectAllRowNodes(e){this.selectedState={selectAllChildren:!1,toggledNodes:new Map}}getSelectAllState(e,t){return this.selectedState.selectAllChildren?!(this.selectedState.toggledNodes.size>0)||null:this.selectedState.toggledNodes.size>0&&null}}W([e("rowModel")],$.prototype,"rowModel",void 0),W([e("columnModel")],$.prototype,"columnModel",void 0),W([e("filterManager")],$.prototype,"filterManager",void 0),W([e("rowModel")],$.prototype,"serverSideRowModel",void 0),W([e("selectionService")],$.prototype,"selectionService",void 0),W([t],$.prototype,"init",null);var J=function(e,t,o,s){var r,i=arguments.length,n=i<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var d=e.length-1;d>=0;d--)(r=e[d])&&(n=(i<3?r(n):i>3?r(t,o,n):r(t,o))||n);return i>3&&n&&Object.defineProperty(t,o,n),n};let Q=class extends l{init(){const e=this.gridOptionsService.is("groupSelectsChildren");this.addManagedPropertyListener("groupSelectsChildren",e=>{this.destroyBean(this.selectionStrategy);const t=e.currentValue?$:z;this.selectionStrategy=this.createManagedBean(new t),this.shotgunResetNodeSelectionState();const o={type:d.EVENT_SELECTION_CHANGED,source:"api"};this.eventService.dispatchEvent(o)}),this.rowSelection=this.gridOptionsService.get("rowSelection"),this.addManagedPropertyListener("rowSelection",e=>this.rowSelection=e.currentValue);const t=e?$:z;this.selectionStrategy=this.createManagedBean(new t)}getServerSideSelectionState(){return this.selectionStrategy.getSelectedState()}setServerSideSelectionState(e){this.selectionStrategy.setSelectedState(e),this.shotgunResetNodeSelectionState();const t={type:d.EVENT_SELECTION_CHANGED,source:"api"};this.eventService.dispatchEvent(t)}setNodesSelected(e){if(e.nodes.length>1&&"multiple"!==this.rowSelection)return console.warn("AG Grid: cannot multi select while rowSelection='single'"),0;if(e.nodes.length>1&&e.rangeSelect)return console.warn("AG Grid: cannot use range selection when multi selecting rows"),0;const t=this.selectionStrategy.setNodesSelected(e);this.shotgunResetNodeSelectionState(e.source);const o={type:d.EVENT_SELECTION_CHANGED,source:e.source};return this.eventService.dispatchEvent(o),t}deleteSelectionStateFromParent(e,t){if(!this.selectionStrategy.deleteSelectionStateFromParent(e,t))return;this.shotgunResetNodeSelectionState();const o={type:d.EVENT_SELECTION_CHANGED,source:"api"};this.eventService.dispatchEvent(o)}shotgunResetNodeSelectionState(e){this.rowModel.forEachNode(t=>{if(t.stub)return;const o=this.selectionStrategy.isNodeSelected(t);o!==t.isSelected()&&t.selectThisNode(o,void 0,e)})}getSelectedNodes(){return this.selectionStrategy.getSelectedNodes()}getSelectedRows(){return this.selectionStrategy.getSelectedRows()}getSelectionCount(){return this.selectionStrategy.getSelectionCount()}syncInRowNode(e,t){this.selectionStrategy.processNewRow(e);const o=this.selectionStrategy.isNodeSelected(e);e.setSelectedInitialValue(o)}reset(){this.selectionStrategy.deselectAllRowNodes({source:"api"})}isEmpty(){return this.selectionStrategy.isEmpty()}selectAllRowNodes(e){(e.justCurrentPage||e.justFiltered)&&console.warn("AG Grid: selecting just filtered only works when gridOptions.rowModelType='clientSide'"),this.selectionStrategy.selectAllRowNodes(e),this.rowModel.forEachNode(t=>{t.stub||t.selectThisNode(!0,void 0,e.source)});const t={type:d.EVENT_SELECTION_CHANGED,source:e.source};this.eventService.dispatchEvent(t)}deselectAllRowNodes(e){(e.justCurrentPage||e.justFiltered)&&console.warn("AG Grid: selecting just filtered only works when gridOptions.rowModelType='clientSide'"),this.selectionStrategy.deselectAllRowNodes(e),this.rowModel.forEachNode(t=>{t.stub||t.selectThisNode(!1,void 0,e.source)});const t={type:d.EVENT_SELECTION_CHANGED,source:e.source};this.eventService.dispatchEvent(t)}getSelectAllState(e,t){return this.selectionStrategy.getSelectAllState(e,t)}updateGroupsFromChildrenSelections(e,t){return!1}getBestCostNodeSelection(){console.warn("AG Grid: calling gridApi.getBestCostNodeSelection() is only possible when using rowModelType=`clientSide`.")}filterFromSelection(){}};J([e("rowModel")],Q.prototype,"rowModel",void 0),J([t],Q.prototype,"init",null),Q=J([c("selectionService")],Q);const X={version:"30.0.1",moduleName:p.ServerSideRowModelModule,rowModel:"serverSide",beans:[C,P,B,A,M,O,G,U,j,H,Q],dependantModules:[g]};export{X as ServerSideRowModelModule};