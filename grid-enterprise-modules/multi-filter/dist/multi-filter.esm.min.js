/**
          * @ag-grid-enterprise/multi-filter - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.0
          * @link https://www.ag-grid.com/
          * @license Commercial
          */
/**
          * @ag-grid-enterprise/multi-filter - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.0
          * @link https://www.ag-grid.com/
          * @license Commercial
          */
import{Autowired as t,PostConstruct as e,TabGuardComp as i,AgPromise as s,_ as n,AgMenuItemComponent as r,AgGroupComponent as l,ProvidedFilter as a,Component as o,ModuleNames as c}from"@ag-grid-community/core";import{EnterpriseCoreModule as u}from"@ag-grid-enterprise/core";var h=function(t,e,i,s){var n,r=arguments.length,l=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,e,i,s);else for(var a=t.length-1;a>=0;a--)(n=t[a])&&(l=(r<3?n(l):r>3?n(e,i,l):n(e,i))||l);return r>3&&l&&Object.defineProperty(e,i,l),l};class d extends i{constructor(){super('<div class="ag-multi-filter ag-menu-list-compact"></div>'),this.filterDefs=[],this.filters=[],this.guiDestroyFuncs=[],this.activeFilterIndices=[],this.lastActivatedMenuItem=null,this.afterFiltersReadyFuncs=[]}postConstruct(){this.initialiseTabGuard({onFocusIn:t=>this.onFocusIn(t)})}static getFilterDefs(t){const{filters:e}=t;return e&&e.length>0?e:[{filter:"agTextColumnFilter"},{filter:"agSetColumnFilter"}]}init(t){this.params=t,this.filterDefs=d.getFilterDefs(t);const{column:e,filterChangedCallback:i}=t;this.column=e,this.filterChangedCallback=i;const n=[];return this.filterDefs.forEach((t,e)=>{const i=this.createFilter(t,e);null!=i&&n.push(i)}),s.all(n).then(t=>{this.filters=t,this.refreshGui("columnMenu"),this.afterFiltersReadyFuncs.forEach(t=>t()),this.afterFiltersReadyFuncs.length=0})}refreshGui(t){t!==this.lastOpenedInContainer&&(this.removeAllChildrenExceptTabGuards(),this.destroyChildren(),this.filters.forEach((e,i)=>{i>0&&this.appendChild(n.loadTemplate('<div class="ag-filter-separator"></div>'));const s=this.filterDefs[i],r=this.getFilterTitle(e,s);let l;if("subMenu"===s.display&&"toolPanel"!==t){l=this.insertFilterMenu(e,r).getGui()}else if("subMenu"===s.display||"accordion"===s.display){l=this.insertFilterGroup(e,r).getGui()}else l=e.getGui();this.appendChild(l)}),this.lastOpenedInContainer=t)}getFilterTitle(t,e){if(null!=e.title)return e.title;const i=t;return"function"==typeof i.getFilterTitle?i.getFilterTitle():"Filter"}destroyChildren(){this.guiDestroyFuncs.forEach(t=>t()),this.guiDestroyFuncs.length=0}insertFilterMenu(t,e){const i=this.createBean(new r({name:e,subMenu:t,cssClasses:["ag-multi-filter-menu-item"],isCompact:!0,isAnotherSubMenuOpen:()=>!1}));return i.setParentComponent(this),this.guiDestroyFuncs.push(()=>this.destroyBean(i)),this.addManagedListener(i,r.EVENT_MENU_ITEM_ACTIVATED,t=>{this.lastActivatedMenuItem&&this.lastActivatedMenuItem!==t.menuItem&&this.lastActivatedMenuItem.deactivate(),this.lastActivatedMenuItem=t.menuItem}),i.addGuiEventListener("focusin",()=>i.activate()),i.addGuiEventListener("focusout",()=>{i.isSubMenuOpen()||i.deactivate()}),i}insertFilterGroup(t,e){const i=this.createBean(new l({title:e,cssIdentifier:"multi-filter"}));return this.guiDestroyFuncs.push(()=>this.destroyBean(i)),i.addItem(t.getGui()),i.toggleGroupExpand(!1),t.afterGuiAttached&&i.addManagedListener(i,l.EVENT_EXPANDED,()=>t.afterGuiAttached({container:this.lastOpenedInContainer,suppressFocus:!0})),i}isFilterActive(){return this.filters.some(t=>t.isFilterActive())}getLastActiveFilterIndex(){return this.activeFilterIndices.length>0?this.activeFilterIndices[this.activeFilterIndices.length-1]:null}doesFilterPass(t,e){let i=!0;return this.filters.forEach(s=>{i&&s!==e&&s.isFilterActive()&&(i=s.doesFilterPass(t))}),i}getFilterType(){return"multi"}getModelFromUi(){return{filterType:this.getFilterType(),filterModels:this.filters.map(t=>{const e=t;return"function"==typeof e.getModelFromUi?e.getModelFromUi():null})}}getModel(){if(!this.isFilterActive())return null;return{filterType:this.getFilterType(),filterModels:this.filters.map(t=>t.isFilterActive()?t.getModel():null)}}setModel(t){const e=(t,e)=>new s(i=>{const s=t.setModel(e);s?s.then(()=>i()):i()});let i=[];return null==t?i=this.filters.map((t,i)=>e(t,null).then(()=>{this.updateActiveList(i)})):this.filters.forEach((s,n)=>{const r=t.filterModels.length>n?t.filterModels[n]:null,l=e(s,r).then(()=>{this.updateActiveList(n)});i.push(l)}),s.all(i).then(()=>{})}applyModel(t="api"){let e=!1;return this.filters.forEach(i=>{i instanceof a&&(e=i.applyModel(t)||e)}),e}getChildFilterInstance(t){return this.filters[t]}afterGuiAttached(t){t&&this.refreshGui(t.container);const{filters:e}=this.params,i=e&&e.some(t=>t.display&&"inline"!==t.display);this.executeFunctionIfExists("afterGuiAttached",Object.assign(Object.assign({},t||{}),{suppressFocus:i}));const s=this.gridOptionsService.getDocument(),n=s.activeElement;i&&(n===s.body||this.getGui().contains(n))&&this.forceFocusOutOfContainer(!0)}afterGuiDetached(){this.executeFunctionIfExists("afterGuiDetached")}onAnyFilterChanged(){this.executeFunctionIfExists("onAnyFilterChanged")}onNewRowsLoaded(){this.executeFunctionIfExists("onNewRowsLoaded")}destroy(){this.filters.forEach(t=>{t.setModel(null),this.destroyBean(t)}),this.filters.length=0,this.destroyChildren(),super.destroy()}executeFunctionIfExists(t,...e){n.forEachReverse(this.filters,i=>{const s=i[t];"function"==typeof s&&s.apply(i,e)})}createFilter(t,e){const{filterModifiedCallback:i,doesRowPassOtherFilter:s}=this.params;let n;const r=Object.assign(Object.assign({},this.filterManager.createFilterParams(this.column,this.column.getColDef())),{filterModifiedCallback:i,filterChangedCallback:t=>{this.executeWhenAllFiltersReady(()=>this.filterChanged(e,t))},doesRowPassOtherFilter:t=>s(t)&&this.doesFilterPass({node:t,data:t.data},n)}),l=this.userComponentFactory.getFilterDetails(t,r,"agTextColumnFilter");if(!l)return null;const a=l.newAgStackInstance();return a&&a.then(t=>n=t),a}executeWhenAllFiltersReady(t){this.filters&&this.filters.length>0?t():this.afterFiltersReadyFuncs.push(t)}updateActiveList(t){const e=this.filters[t];n.removeFromArray(this.activeFilterIndices,t),e.isFilterActive()&&this.activeFilterIndices.push(t)}filterChanged(t,e){this.updateActiveList(t),this.filterChangedCallback(e);const i=this.filters[t];this.filters.forEach(t=>{t!==i&&"function"==typeof t.onAnyFilterChanged&&t.onAnyFilterChanged()})}onFocusIn(t){return null==this.lastActivatedMenuItem||this.lastActivatedMenuItem.getGui().contains(t.target)||(this.lastActivatedMenuItem.deactivate(),this.lastActivatedMenuItem=null),!0}getModelAsString(t){var e,i,s,n;if(!this.filters||!(null===(e=null==t?void 0:t.filterModels)||void 0===e?void 0:e.length))return"";const r=null!==(i=this.getLastActiveFilterIndex())&&void 0!==i?i:0,l=this.filters[r];return null!==(n=null===(s=l.getModelAsString)||void 0===s?void 0:s.call(l,t.filterModels[r]))&&void 0!==n?n:""}}h([t("filterManager")],d.prototype,"filterManager",void 0),h([t("userComponentFactory")],d.prototype,"userComponentFactory",void 0),h([e],d.prototype,"postConstruct",null);var f=function(t,e,i,s){var n,r=arguments.length,l=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,e,i,s);else for(var a=t.length-1;a>=0;a--)(n=t[a])&&(l=(r<3?n(l):r>3?n(e,i,l):n(e,i))||l);return r>3&&l&&Object.defineProperty(e,i,l),l};class g extends o{constructor(){super('<div class="ag-multi-floating-filter ag-floating-filter-input"></div>'),this.floatingFilters=[]}init(t){this.params=t;const e=t.filterParams,i=[];return d.getFilterDefs(e).forEach((e,s)=>{const r=Object.assign(Object.assign({},t),{parentFilterInstance:t=>{this.parentMultiFilterInstance(e=>{const i=e.getChildFilterInstance(s);null!=i&&t(i)})}});n.mergeDeep(r.filterParams,e.filterParams);const l=this.createFloatingFilter(e,r);null!=l&&i.push(l)}),s.all(i).then(t=>{t.forEach((t,e)=>{this.floatingFilters.push(t);const i=t.getGui();this.appendChild(i),e>0&&n.setDisplayed(i,!1)})})}onParentModelChanged(t,e){e&&e.afterFloatingFilter||this.parentMultiFilterInstance(i=>{if(null==t)this.floatingFilters.forEach((t,i)=>{t.onParentModelChanged(null,e),n.setDisplayed(t.getGui(),0===i)});else{const s=i.getLastActiveFilterIndex();this.floatingFilters.forEach((i,r)=>{const l=t.filterModels.length>r?t.filterModels[r]:null;i.onParentModelChanged(l,e);const a=null==s?0===r:r===s;n.setDisplayed(i.getGui(),a)})}})}destroy(){this.destroyBeans(this.floatingFilters),this.floatingFilters.length=0,super.destroy()}createFloatingFilter(t,e){var i;let s=null!==(i=this.userComponentFactory.getDefaultFloatingFilterType(t,()=>this.filterManager.getDefaultFloatingFilter(this.params.column)))&&void 0!==i?i:"agReadOnlyFloatingFilter";const n=this.userComponentFactory.getFloatingFilterCompDetails(t,e,s);return n?n.newAgStackInstance():null}parentMultiFilterInstance(t){this.params.parentFilterInstance(e=>{if(!(e instanceof d))throw new Error("AG Grid - MultiFloatingFilterComp expects MultiFilter as its parent");t(e)})}}f([t("userComponentFactory")],g.prototype,"userComponentFactory",void 0),f([t("filterManager")],g.prototype,"filterManager",void 0);const p={version:"30.0.0",moduleName:c.MultiFilterModule,beans:[],userComponents:[{componentName:"agMultiColumnFilter",componentClass:d},{componentName:"agMultiColumnFloatingFilter",componentClass:g}],dependantModules:[u]};export{d as MultiFilter,p as MultiFilterModule};