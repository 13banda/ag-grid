/**
          * @ag-grid-enterprise/status-bar - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.0
          * @link https://www.ag-grid.com/
          * @license Commercial
          */
/**
          * @ag-grid-enterprise/status-bar - Advanced Data Grid / Data Table supporting Javascript / Typescript / React / Angular / Vue * @version v30.0.0
          * @link https://www.ag-grid.com/
          * @license Commercial
          */
import{Bean as e,BeanStub as t,Autowired as o,RefSelector as n,PostConstruct as s,Component as a,AgPromise as r,Events as i,_ as l,Optional as c,ModuleNames as g}from"@ag-grid-community/core";import{EnterpriseCoreModule as d}from"@ag-grid-enterprise/core";var u=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};let p=class extends t{constructor(){super(),this.allComponents={}}registerStatusPanel(e,t){this.allComponents[e]=t}getStatusPanel(e){return this.allComponents[e]}};p=u([e("statusBarService")],p);var h=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};class m extends a{constructor(){super(m.TEMPLATE)}postConstruct(){var e;const t=null===(e=this.gridOptionsService.get("statusBar"))||void 0===e?void 0:e.statusPanels;if(t){const e=t.filter(e=>"left"===e.align);this.createAndRenderComponents(e,this.eStatusBarLeft);const o=t.filter(e=>"center"===e.align);this.createAndRenderComponents(o,this.eStatusBarCenter);const n=t.filter(e=>!e.align||"right"===e.align);this.createAndRenderComponents(n,this.eStatusBarRight)}else this.setDisplayed(!1)}createAndRenderComponents(e,t){const o=[];e.forEach(e=>{const t=this.userComponentFactory.getStatusPanelCompDetails(e,{}).newAgStackInstance();t&&o.push({key:e.key||e.statusPanel,promise:t})}),r.all(o.map(e=>e.promise)).then(()=>{o.forEach(e=>{e.promise.then(o=>{const n=()=>{this.getContext().destroyBean(o)};this.isAlive()?(this.statusBarService.registerStatusPanel(e.key,o),t.appendChild(o.getGui()),this.addDestroyFunc(n)):n()})})})}}m.TEMPLATE='<div class="ag-status-bar">\n            <div ref="eStatusBarLeft" class="ag-status-bar-left" role="status"></div>\n            <div ref="eStatusBarCenter" class="ag-status-bar-center" role="status"></div>\n            <div ref="eStatusBarRight" class="ag-status-bar-right" role="status"></div>\n        </div>',h([o("userComponentFactory")],m.prototype,"userComponentFactory",void 0),h([o("statusBarService")],m.prototype,"statusBarService",void 0),h([n("eStatusBarLeft")],m.prototype,"eStatusBarLeft",void 0),h([n("eStatusBarCenter")],m.prototype,"eStatusBarCenter",void 0),h([n("eStatusBarRight")],m.prototype,"eStatusBarRight",void 0),h([s],m.prototype,"postConstruct",null);var v=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};class f extends a{constructor(){super(f.TEMPLATE)}setLabel(e,t){this.setDisplayed(!1);const o=this.localeService.getLocaleTextFunc();this.eLabel.innerHTML=o(e,t)}setValue(e){this.eValue.innerHTML=e}}f.TEMPLATE='<div class="ag-status-name-value">\n            <span ref="eLabel"></span>:&nbsp;\n            <span ref="eValue" class="ag-status-name-value-value"></span>\n        </div>',v([n("eLabel")],f.prototype,"eLabel",void 0),v([n("eValue")],f.prototype,"eValue",void 0);var C=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};class y extends f{postConstruct(){"clientSide"===this.gridApi.getModel().getType()?(this.setLabel("totalAndFilteredRows","Rows"),this.addCssClass("ag-status-panel"),this.addCssClass("ag-status-panel-total-and-filtered-row-count"),this.setDisplayed(!0),this.addManagedListener(this.eventService,i.EVENT_MODEL_UPDATED,this.onDataChanged.bind(this)),this.onDataChanged()):console.warn("AG Grid: agTotalAndFilteredRowCountComponent should only be used with the client side row model.")}onDataChanged(){const e=this.localeService.getLocaleTextFunc(),t=e("thousandSeparator",","),o=e("decimalSeparator","."),n=l.formatNumberCommas(this.getFilteredRowCountValue(),t,o),s=l.formatNumberCommas(this.getTotalRowCount(),t,o);if(n===s)this.setValue(n);else{const e=this.localeService.getLocaleTextFunc();this.setValue(`${n} ${e("of","of")} ${s}`)}}getFilteredRowCountValue(){let e=0;return this.gridApi.forEachNodeAfterFilter(t=>{t.group||e++}),e}getTotalRowCount(){let e=0;return this.gridApi.forEachNode(t=>{t.group||e++}),e}init(){}destroy(){super.destroy()}}C([o("gridApi")],y.prototype,"gridApi",void 0),C([s],y.prototype,"postConstruct",null);var A=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};class S extends f{postConstruct(){if(this.setLabel("filteredRows","Filtered"),"clientSide"!==this.gridApi.getModel().getType())return void console.warn("AG Grid: agFilteredRowCountComponent should only be used with the client side row model.");this.addCssClass("ag-status-panel"),this.addCssClass("ag-status-panel-filtered-row-count"),this.setDisplayed(!0);const e=this.onDataChanged.bind(this);this.addManagedListener(this.eventService,i.EVENT_MODEL_UPDATED,e),e()}onDataChanged(){const e=this.getTotalRowCountValue(),t=this.getFilteredRowCountValue(),o=this.localeService.getLocaleTextFunc(),n=o("thousandSeparator",","),s=o("decimalSeparator",".");this.setValue(l.formatNumberCommas(t,n,s)),this.setDisplayed(e!==t)}getTotalRowCountValue(){let e=0;return this.gridApi.forEachNode(t=>e+=1),e}getFilteredRowCountValue(){let e=0;return this.gridApi.forEachNodeAfterFilter(t=>{t.group||(e+=1)}),e}init(){}destroy(){super.destroy()}}A([o("gridApi")],S.prototype,"gridApi",void 0),A([s],S.prototype,"postConstruct",null);var R=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};class w extends f{postConstruct(){this.setLabel("totalRows","Total Rows"),"clientSide"===this.gridApi.getModel().getType()?(this.addCssClass("ag-status-panel"),this.addCssClass("ag-status-panel-total-row-count"),this.setDisplayed(!0),this.addManagedListener(this.eventService,i.EVENT_MODEL_UPDATED,this.onDataChanged.bind(this)),this.onDataChanged()):console.warn("AG Grid: agTotalRowCountComponent should only be used with the client side row model.")}onDataChanged(){const e=this.localeService.getLocaleTextFunc(),t=e("thousandSeparator",","),o=e("decimalSeparator",".");this.setValue(l.formatNumberCommas(this.getRowCountValue(),t,o))}getRowCountValue(){let e=0;return this.gridApi.forEachLeafNode(t=>e+=1),e}init(){}destroy(){super.destroy()}}R([o("gridApi")],w.prototype,"gridApi",void 0),R([s],w.prototype,"postConstruct",null);var b=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};class E extends f{postConstruct(){if(!this.isValidRowModel())return void console.warn("AG Grid: agSelectedRowCountComponent should only be used with the client and server side row model.");this.setLabel("selectedRows","Selected"),this.addCssClass("ag-status-panel"),this.addCssClass("ag-status-panel-selected-row-count"),this.onRowSelectionChanged();const e=this.onRowSelectionChanged.bind(this);this.addManagedListener(this.eventService,i.EVENT_MODEL_UPDATED,e),this.addManagedListener(this.eventService,i.EVENT_SELECTION_CHANGED,e)}isValidRowModel(){const e=this.gridApi.getModel().getType();return"clientSide"===e||"serverSide"===e}onRowSelectionChanged(){const e=this.selectionService.getSelectionCount();if(e<0)return this.setValue("?"),void this.setDisplayed(!0);const t=this.localeService.getLocaleTextFunc(),o=t("thousandSeparator",","),n=t("decimalSeparator",".");this.setValue(l.formatNumberCommas(e,o,n)),this.setDisplayed(e>0)}init(){}destroy(){super.destroy()}}b([o("gridApi")],E.prototype,"gridApi",void 0),b([o("selectionService")],E.prototype,"selectionService",void 0),b([s],E.prototype,"postConstruct",null);var P=function(e,t,o,n){var s,a=arguments.length,r=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,o,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(r=(a<3?s(r):a>3?s(t,o,r):s(t,o))||r);return a>3&&r&&Object.defineProperty(t,o,r),r};class T extends a{constructor(){super(T.TEMPLATE)}destroy(){super.destroy()}postConstruct(){this.isValidRowModel()?(this.avgAggregationComp.setLabel("avg","Average"),this.countAggregationComp.setLabel("count","Count"),this.minAggregationComp.setLabel("min","Min"),this.maxAggregationComp.setLabel("max","Max"),this.sumAggregationComp.setLabel("sum","Sum"),this.addManagedListener(this.eventService,i.EVENT_RANGE_SELECTION_CHANGED,this.onRangeSelectionChanged.bind(this)),this.addManagedListener(this.eventService,i.EVENT_MODEL_UPDATED,this.onRangeSelectionChanged.bind(this))):console.warn("AG Grid: agAggregationComponent should only be used with the client and server side row model.")}isValidRowModel(){const e=this.gridApi.getModel().getType();return"clientSide"===e||"serverSide"===e}init(){}setAggregationComponentValue(e,t,o){const n=this.getAggregationValueComponent(e);if(l.exists(n)&&n){const e=this.localeService.getLocaleTextFunc(),s=e("thousandSeparator",","),a=e("decimalSeparator",".");n.setValue(l.formatNumberTwoDecimalPlacesAndCommas(t,s,a)),n.setDisplayed(o)}}getAggregationValueComponent(e){const t=e+"AggregationComp";let o=null;const n=this.gridOptionsService.get("statusBar"),s=l.exists(n)&&n?n.statusPanels.find(e=>"agAggregationComponent"===e.statusPanel):null;return l.exists(s)&&s?(!l.exists(s.statusPanelParams)||l.exists(s.statusPanelParams)&&l.exists(s.statusPanelParams.aggFuncs)&&l.exists(s.statusPanelParams.aggFuncs.find(t=>t===e)))&&(o=this[t]):o=this[t],o}onRangeSelectionChanged(){const e=this.rangeService?this.rangeService.getCellRanges():void 0;let t=0,o=0,n=0,s=null,a=null;const r={};e&&!l.missingOrEmpty(e)&&e.forEach(e=>{let i=this.rangeService.getRangeStartRow(e);const c=this.rangeService.getRangeEndRow(e);for(;;){if(l.missing(i)||!i||this.rowPositionUtils.before(c,i)||!i||!e.columns)break;e.columns.forEach(e=>{if(null===i)return;const c=this.cellPositionUtils.createId({rowPinned:i.rowPinned,column:e,rowIndex:i.rowIndex});if(r[c])return;r[c]=!0;const g=this.rowRenderer.getRowNode(i);if(l.missing(g))return;let d=this.valueService.getValue(e,g);l.missing(d)||""===d||(o++,"object"==typeof d&&"value"in d&&(d=d.value,""===d)||("string"==typeof d&&(d=Number(d)),"number"!=typeof d||isNaN(d)||(t+=d,(null===a||d>a)&&(a=d),(null===s||d<s)&&(s=d),n++)))}),i=this.cellNavigationService.getRowBelow(i)}});const i=o>1,c=n>1;this.setAggregationComponentValue("count",o,i),this.setAggregationComponentValue("sum",t,c),this.setAggregationComponentValue("min",s,c),this.setAggregationComponentValue("max",a,c),this.setAggregationComponentValue("avg",t/n,c)}}T.TEMPLATE='<div class="ag-status-panel ag-status-panel-aggregations">\n            <ag-name-value ref="avgAggregationComp"></ag-name-value>\n            <ag-name-value ref="countAggregationComp"></ag-name-value>\n            <ag-name-value ref="minAggregationComp"></ag-name-value>\n            <ag-name-value ref="maxAggregationComp"></ag-name-value>\n            <ag-name-value ref="sumAggregationComp"></ag-name-value>\n        </div>',P([c("rangeService")],T.prototype,"rangeService",void 0),P([o("valueService")],T.prototype,"valueService",void 0),P([o("cellNavigationService")],T.prototype,"cellNavigationService",void 0),P([o("rowRenderer")],T.prototype,"rowRenderer",void 0),P([o("gridApi")],T.prototype,"gridApi",void 0),P([o("cellPositionUtils")],T.prototype,"cellPositionUtils",void 0),P([o("rowPositionUtils")],T.prototype,"rowPositionUtils",void 0),P([n("sumAggregationComp")],T.prototype,"sumAggregationComp",void 0),P([n("countAggregationComp")],T.prototype,"countAggregationComp",void 0),P([n("minAggregationComp")],T.prototype,"minAggregationComp",void 0),P([n("maxAggregationComp")],T.prototype,"maxAggregationComp",void 0),P([n("avgAggregationComp")],T.prototype,"avgAggregationComp",void 0),P([s],T.prototype,"postConstruct",null);const L={version:"30.0.0",moduleName:g.StatusBarModule,beans:[p],agStackComponents:[{componentName:"AgStatusBar",componentClass:m},{componentName:"AgNameValue",componentClass:f}],userComponents:[{componentName:"agAggregationComponent",componentClass:T},{componentName:"agSelectedRowCountComponent",componentClass:E},{componentName:"agTotalRowCountComponent",componentClass:w},{componentName:"agFilteredRowCountComponent",componentClass:S},{componentName:"agTotalAndFilteredRowCountComponent",componentClass:y}],dependantModules:[d]};export{L as StatusBarModule};